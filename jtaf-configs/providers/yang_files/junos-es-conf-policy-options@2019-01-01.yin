<?xml version="1.0" encoding="UTF-8"?>
<module name="junos-es-conf-policy-options"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:jc-policy-options="http://yang.juniper.net/junos-es/conf/policy-options"
        xmlns:jt="http://yang.juniper.net/junos/common/types"
        xmlns:jc="http://yang.juniper.net/junos-es/conf/root">
  <namespace uri="http://yang.juniper.net/junos-es/conf/policy-options"/>
  <prefix value="jc-policy-options"/>
  <import module="junos-common-types">
    <prefix value="jt"/>
    <revision-date date="2019-01-01"/>
  </import>
  <import module="junos-es-conf-root">
    <prefix value="jc"/>
    <revision-date date="2019-01-01"/>
  </import>
  <organization>
    <text>Juniper Networks, Inc.</text>
  </organization>
  <contact>
    <text>yang-support@juniper.net</text>
  </contact>
  <description>
    <text>Junos policy-options configuration module</text>
  </description>
  <revision date="2019-01-01">
    <description>
      <text>Junos: 21.3R1.9</text>
    </description>
  </revision>
  <augment target-node="/jc:configuration">
    <uses name="policy-options-group"/>
  </augment>
  <augment target-node="/jc:configuration/jc:groups">
    <uses name="policy-options-group"/>
  </augment>
  <grouping name="policy-options-group">
    <container name="policy-options">
      <description>
        <text>Policy option configuration</text>
      </description>
      <uses name="juniper-policy-options"/>
    </container>
  </grouping>
  <grouping name="juniper-policy-options">
    <description>
      <text>Define a redundancy policy</text>
    </description>
    <uses name="apply-advanced"/>
    <container name="satellite-policies">
      <description>
        <text>Satellite Policy configuration</text>
      </description>
      <uses name="satellite-policy-options"/>
    </container>
    <list name="prefix-list">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Define a named set of address prefixes</text>
      </description>
      <leaf name="name">
        <description>
          <text>Prefix list name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <list name="prefix-list-item">
        <key value="name"/>
        <uses name="prefix_list_items"/>
      </list>
      <leaf name="apply-path">
        <description>
          <text>Apply IP prefixes from a configuration statement</text>
        </description>
        <type name="string"/>
      </leaf>
    </list>
    <list name="mac-list">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Define a named set of mac addresses</text>
      </description>
      <leaf name="name">
        <description>
          <text>MAc Address list name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <list name="mac-addr-list-item">
        <key value="name"/>
        <uses name="mac_addr_list_items"/>
      </list>
    </list>
    <list name="vsi-policy">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Define a named set of VSI policies</text>
      </description>
      <leaf name="name">
        <description>
          <text>VSI policy name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <container name="from">
        <description>
          <text>Conditions to match the VSI policy</text>
        </description>
        <uses name="apply-advanced"/>
        <list name="vsi-manager">
          <key value="vsi-manager-id vsi-type vsi-version vsi-instance"/>
          <ordered-by value="user"/>
          <description>
            <text>VSI manager</text>
          </description>
          <leaf name="vsi-manager-id">
            <description>
              <text>VSI manager ID</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="1 .. 255"/>
              </type>
            </type>
          </leaf>
          <leaf name="vsi-type">
            <description>
              <text>VSI type</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="1 .. 16777216"/>
              </type>
            </type>
          </leaf>
          <leaf name="vsi-version">
            <description>
              <text>VSI version</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="1 .. 255"/>
              </type>
            </type>
          </leaf>
          <leaf name="vsi-instance">
            <description>
              <text>VSI instance</text>
            </description>
            <type name="string"/>
          </leaf>
          <uses name="apply-advanced"/>
        </list>
      </container>
      <container name="then">
        <description>
          <text>Actions to take if 'from' conditions match</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="filter">
          <description>
            <text>Filter name</text>
          </description>
          <type name="string"/>
        </leaf>
      </container>
    </list>
    <leaf name="skip-then-actions">
      <description>
        <text>Skip 'then' actions and allow route actions in 'from'</text>
      </description>
      <type name="empty"/>
    </leaf>
    <list name="route-filter-list">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Define a named set of route-filter address prefixes</text>
      </description>
      <leaf name="name">
        <description>
          <text>Route filter list name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <list name="rf_list">
        <key value="address choice-ident choice-value"/>
        <ordered-by value="user"/>
        <uses name="route_filter_list_items"/>
      </list>
    </list>
    <list name="source-address-filter-list">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Define a named set of source address filter address prefixes</text>
      </description>
      <leaf name="name">
        <description>
          <text>Source address filter list name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <list name="saf_list">
        <key value="address choice-ident choice-value"/>
        <ordered-by value="user"/>
        <uses name="source_address_filter_list_items"/>
      </list>
    </list>
    <list name="policy-statement">
      <key value="name"/>
      <description>
        <text>Routing policy</text>
      </description>
      <leaf name="name">
        <description>
          <text>Name to identify a policy filter</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <container name="defaults">
        <description>
          <text>Policy default behaviour</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="route-filter">
          <description>
            <text>Set route filter behaviour</text>
          </description>
          <choice name="scope-choice">
            <case name="case_1">
              <leaf name="no-walkup">
                <description>
                  <text>Route filter walk up disable</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="walkup">
                <description>
                  <text>Route filter walk up enable</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
        </container>
      </container>
      <list name="term">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Policy term</text>
        </description>
        <leaf name="name">
          <type name="string"/>
        </leaf>
        <uses name="apply-advanced"/>
        <container name="from">
          <description>
            <text>Conditions to match the source of a route</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="instance">
            <description>
              <text>Routing protocol instance</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="instance-any">
            <description>
              <text>Any routing protocol instance</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf-list name="instance-list">
            <description>
              <text>A list of routing protocol instances</text>
            </description>
            <type name="string"/>
          </leaf-list>
          <leaf-list name="igp-instance">
            <description>
              <text>IGP instance</text>
            </description>
            <type name="string"/>
          </leaf-list>
          <leaf name="family">
            <type name="enumeration">
              <enum name="inet">
                <description>
                  <text>IPv4 family</text>
                </description>
              </enum>
              <enum name="inet-vpn">
                <description>
                  <text>IPv4-VPN family</text>
                </description>
              </enum>
              <enum name="inet6">
                <description>
                  <text>IPv6 family</text>
                </description>
              </enum>
              <enum name="inet6-vpn">
                <description>
                  <text>IPv6-VPN family</text>
                </description>
              </enum>
              <enum name="iso-vpn">
                <description>
                  <text>ISO-VPN family</text>
                </description>
              </enum>
              <enum name="iso">
                <description>
                  <text>ISO family</text>
                </description>
              </enum>
              <enum name="evpn">
                <description>
                  <text>EVPN family</text>
                </description>
              </enum>
              <enum name="inet-mvpn">
                <description>
                  <text>IPv4 Multicast VPN family</text>
                </description>
              </enum>
              <enum name="inet6-mvpn">
                <description>
                  <text>IPv6 Multicast VPN family</text>
                </description>
              </enum>
              <enum name="inet-mdt">
                <description>
                  <text>IPv4 MDT Signaling family</text>
                </description>
              </enum>
              <enum name="route-target">
                <description>
                  <text>Local route target VPN family</text>
                </description>
              </enum>
              <enum name="traffic-engineering">
                <description>
                  <text>Traffic Engineering family</text>
                </description>
              </enum>
              <enum name="inet-srte">
                <description>
                  <text>IPv4 srtte family</text>
                </description>
              </enum>
              <enum name="inet6-srte">
                <description>
                  <text>IPv6 srte family</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf-list name="protocol">
            <ordered-by value="user"/>
            <description>
              <text>Protocol from which route was learned</text>
            </description>
            <type name="enumeration">
              <enum name="aggregate">
                <description>
                  <text>Aggregate routes</text>
                </description>
              </enum>
              <enum name="bgp">
                <description>
                  <text>BGP</text>
                </description>
              </enum>
              <enum name="direct">
                <description>
                  <text>Directly connected routes</text>
                </description>
              </enum>
              <enum name="dvmrp">
                <description>
                  <text>Distance Vector Multicast Routing Protocol</text>
                </description>
              </enum>
              <enum name="isis">
                <description>
                  <text>Intermediate System-to-Intermediate System</text>
                </description>
              </enum>
              <enum name="esis">
                <description>
                  <text>End System-to-Intermediate System</text>
                </description>
              </enum>
              <enum name="l-isis">
                <description>
                  <text>Labelled ISIS</text>
                </description>
              </enum>
              <enum name="l2circuit">
                <description>
                  <text>Layer 2 circuits</text>
                </description>
              </enum>
              <enum name="l2vpn">
                <description>
                  <text>Layer 2 MPLS virtual private networks</text>
                </description>
              </enum>
              <enum name="local">
                <description>
                  <text>Local system addresses</text>
                </description>
              </enum>
              <enum name="ospf">
                <description>
                  <text>Open Shortest Path First</text>
                </description>
              </enum>
              <enum name="ospf2">
                <description>
                  <text>Open Shortest Path First Version 2</text>
                </description>
              </enum>
              <enum name="ospf3">
                <description>
                  <text>Open Shortest Path First Version 3</text>
                </description>
              </enum>
              <enum name="l-ospf">
                <description>
                  <text>Labelled OSPF</text>
                </description>
              </enum>
              <enum name="pim">
                <description>
                  <text>Protocol Independent Multicast</text>
                </description>
              </enum>
              <enum name="rip">
                <description>
                  <text>Routing Information Protocol</text>
                </description>
              </enum>
              <enum name="ripng">
                <description>
                  <text>Routing Information Protocol next generation</text>
                </description>
              </enum>
              <enum name="static">
                <description>
                  <text>Statically defined addresses</text>
                </description>
              </enum>
              <enum name="arp">
                <description>
                  <text>Addresses learned from ARP</text>
                </description>
              </enum>
              <enum name="frr">
                <description>
                  <text>Addresses created by Host Fast Re-route</text>
                </description>
              </enum>
              <enum name="mpls">
                <description>
                  <text>Multiprotocol Label Switching</text>
                </description>
              </enum>
              <enum name="ldp">
                <description>
                  <text>Label Distribution Protocol</text>
                </description>
              </enum>
              <enum name="rsvp">
                <description>
                  <text>Resource Reservation Protocol</text>
                </description>
              </enum>
              <enum name="msdp">
                <description>
                  <text>Multicast Source Discovery Protocol</text>
                </description>
              </enum>
              <enum name="route-target">
                <description>
                  <text>Local route target VPN membership</text>
                </description>
              </enum>
              <enum name="access">
                <description>
                  <text>Access server routes</text>
                </description>
              </enum>
              <enum name="access-internal">
                <description>
                  <text>Internal routes to directly connected clients</text>
                </description>
              </enum>
              <enum name="anchor">
                <description>
                  <text>Anchor routes connected to UEs</text>
                </description>
              </enum>
              <enum name="bgp-static">
                <description>
                  <text>BGP static routes</text>
                </description>
              </enum>
              <enum name="vpls">
                <description>
                  <text>Virtual Private LAN Service</text>
                </description>
              </enum>
              <enum name="evpn">
                <description>
                  <text>Ethernet VPN Service</text>
                </description>
              </enum>
              <enum name="spring-te">
                <description>
                  <text>SPRING Traffic-Engineered</text>
                </description>
              </enum>
              <enum name="bgp-ls-epe">
                <description>
                  <text>Addresses created by BGP-LS egress TE</text>
                </description>
              </enum>
              <enum name="express-segments">
                <description>
                  <text>Express-segment routes</text>
                </description>
              </enum>
              <enum name="rift">
                <description>
                  <text>RIFT routes</text>
                </description>
              </enum>
              <enum name="l2-learned-host-routing">
                <description>
                  <text>Layer2-learned host routes</text>
                </description>
              </enum>
              <enum name="srv6-isis">
                <description>
                  <text>SRV6 ISIS</text>
                </description>
              </enum>
            </type>
          </leaf-list>
          <leaf name="rib">
            <description>
              <text>Routing table</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf-list name="neighbor">
            <ordered-by value="user"/>
            <description>
              <text>Neighboring router</text>
            </description>
            <type name="jt:ipaddr"/>
          </leaf-list>
          <leaf-list name="next-hop">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop router</text>
            </description>
            <type name="jt:ipaddr"/>
          </leaf-list>
          <leaf-list name="interface">
            <ordered-by value="user"/>
            <description>
              <text>Interface name or address</text>
            </description>
            <type name="union">
              <type name="jt:ipaddr-or-interface"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf-list>
          <leaf name="area">
            <description>
              <text>OSPF area identifier</text>
            </description>
            <type name="jt:areaid"/>
          </leaf>
          <leaf-list name="as-path">
            <ordered-by value="user"/>
            <description>
              <text>Name of AS path regular expression (BGP only)</text>
            </description>
            <type name="string"/>
          </leaf-list>
          <leaf-list name="as-path-group">
            <ordered-by value="user"/>
            <description>
              <text>Name of AS path group (BGP only)</text>
            </description>
            <type name="string"/>
          </leaf-list>
          <leaf name="origin">
            <description>
              <text>BGP origin attribute</text>
            </description>
            <type name="enumeration">
              <enum name="igp">
                <description>
                  <text>Path originated in the local IGP</text>
                </description>
              </enum>
              <enum name="egp">
                <description>
                  <text>Path originated in another AS</text>
                </description>
              </enum>
              <enum name="incomplete">
                <description>
                  <text>Path was learned by some other means</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf-list name="community">
            <ordered-by value="user"/>
            <description>
              <text>BGP community</text>
            </description>
            <type name="string"/>
          </leaf-list>
          <leaf name="level">
            <description>
              <text>IS-IS level</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <container name="external">
            <presence value="enable external"/>
            <description>
              <text>External route</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="type">
              <description>
                <text>OSPF external metric type</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="int32">
                  <range value="1 .. 2"/>
                </type>
              </type>
            </leaf>
          </container>
          <leaf name="bgp-srte-discriminator">
            <description>
              <text>Srte discriminator</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="srte-color">
            <description>
              <text>Srte color</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="programmed">
            <description>
              <text>API-programmed route</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="validation-database">
            <description>
              <text>Name to identify a validation-state</text>
            </description>
            <type name="enumeration">
              <enum name="valid">
                <description>
                  <text>Match for valid database validation-state</text>
                </description>
              </enum>
              <enum name="invalid">
                <description>
                  <text>Match for invalid database validation-state</text>
                </description>
              </enum>
              <enum name="unknown">
                <description>
                  <text>Match for unknown database validation-state</text>
                </description>
              </enum>
            </type>
          </leaf>
          <list name="nexthop-weight">
            <key value="choice-ident choice-value weight"/>
            <ordered-by value="user"/>
            <description>
              <text>Weight of the gateway</text>
            </description>
            <leaf name="choice-ident">
              <type name="enumeration">
                <enum name="equal"/>
                <enum name="greater-than"/>
                <enum name="less-than"/>
                <enum name="greater-than-equal"/>
                <enum name="less-than-equal"/>
                <enum name="weight"/>
                <enum name="apply-advanced"/>
                <enum name="weight_type"/>
                <enum name="all-nexthop"/>
              </type>
            </leaf>
            <leaf name="choice-value">
              <type name="string"/>
            </leaf>
            <leaf name="weight">
              <description>
                <text>Weight of the gateway</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 65535"/>
                </type>
              </type>
            </leaf>
            <uses name="apply-advanced"/>
            <choice name="weight_type">
              <case name="case_1">
                <leaf name="all-nexthop">
                  <description>
                    <text>All the gateway weight should be matched</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
            </choice>
          </list>
          <leaf name="metric">
            <description>
              <text>Metric value</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="metric2">
            <description>
              <text>Metric value 2</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="metric3">
            <description>
              <text>Metric value 3</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="metric4">
            <description>
              <text>Metric value 4</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf-list name="tag">
            <ordered-by value="user"/>
            <description>
              <text>Tag string</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf-list>
          <leaf name="tag2">
            <description>
              <text>Tag string 2</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="preference">
            <description>
              <text>Preference value</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="preference2">
            <description>
              <text>Preference value 2</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="color">
            <description>
              <text>Color (preference) value</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="color2">
            <description>
              <text>Color (preference) value 2</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="local-preference">
            <description>
              <text>Local preference associated with a route</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf-list name="policy">
            <ordered-by value="user"/>
            <description>
              <text>Name of policy to evaluate</text>
            </description>
            <type name="jt:policy-algebra"/>
          </leaf-list>
          <choice name="lsp-name-type">
            <case name="case_1">
              <leaf name="lsp">
                <description>
                  <text>Label switched path name</text>
                </description>
                <type name="string"/>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="lsp-regex">
                <description>
                  <text>Label switched path name regular expression</text>
                </description>
                <type name="string"/>
              </leaf>
            </case>
          </choice>
          <container name="source-routing-path">
            <presence value="enable source-routing-path"/>
            <description>
              <text>Spring-te lsp policy attributes</text>
            </description>
            <leaf name="name-regex">
              <description>
                <text>Spring-te lsp name regex</text>
              </description>
              <type name="string"/>
            </leaf>
            <leaf name="dest">
              <description>
                <text>Spring-te lsp IPV4/IPV6 destination without color</text>
              </description>
              <type name="jt:ipaddr"/>
            </leaf>
            <leaf name="origin">
              <description>
                <text>Spring-te lsp origin address</text>
              </description>
              <type name="jt:ipaddr"/>
            </leaf>
            <leaf name="tunnel-source">
              <description>
                <text>Spring-te lsp source protocol</text>
              </description>
              <type name="enumeration">
                <enum name="pcep">
                  <description>
                    <text>Spring-te lsp src pcep</text>
                  </description>
                </enum>
                <enum name="bgp">
                  <description>
                    <text>Spring-te lsp src bgp</text>
                  </description>
                </enum>
              </type>
            </leaf>
            <leaf name="route-distinguisher">
              <description>
                <text>Spring-te lsp route distinguisher</text>
              </description>
              <type name="union">
                <type name="uint32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
            <leaf name="color">
              <description>
                <text>Spring-te lsp color</text>
              </description>
              <type name="union">
                <type name="uint32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
          <list name="route-filter">
            <key value="address choice-ident choice-value"/>
            <ordered-by value="user"/>
            <description>
              <text>List of routes to match</text>
            </description>
            <uses name="control_route_filter_type"/>
          </list>
          <list name="source-address-filter">
            <key value="address choice-ident choice-value"/>
            <ordered-by value="user"/>
            <description>
              <text>List of source addresses to match</text>
            </description>
            <uses name="control_source_address_filter_type"/>
          </list>
          <list name="prefix-list">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>List of prefix-lists of routes to match</text>
            </description>
            <uses name="control_prefix_list_type"/>
          </list>
          <list name="as-path-neighbors">
            <key value="list-type list-name"/>
            <ordered-by value="user"/>
            <description>
              <text>List of peer AS to match</text>
            </description>
            <uses name="control_as_list_type"/>
          </list>
          <list name="as-path-origins">
            <key value="list-type list-name"/>
            <ordered-by value="user"/>
            <description>
              <text>List of originating AS to match</text>
            </description>
            <uses name="control_as_list_type"/>
          </list>
          <list name="as-path-transits">
            <key value="list-type list-name"/>
            <ordered-by value="user"/>
            <description>
              <text>List of originating AS to match</text>
            </description>
            <uses name="control_as_list_type"/>
          </list>
          <list name="prefix-list-filter">
            <key value="list_name choice-ident choice-value"/>
            <ordered-by value="user"/>
            <description>
              <text>List of prefix-list-filters to match</text>
            </description>
            <uses name="control_prefix_list_filter_type"/>
          </list>
          <list name="rtf-prefix-list">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>List of rtf-prefix-lists of routes to match</text>
            </description>
            <uses name="control_rtf_prefix_list_type"/>
          </list>
          <list name="route-filter-list">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>List of route-filter-lists of routes to match</text>
            </description>
            <uses name="control_route_filter_list_type"/>
          </list>
          <list name="source-address-filter-list">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>List of source-address-filter-lists of routes to match</text>
            </description>
            <uses name="control_source_address_filter_list_type"/>
          </list>
          <container name="multicast-scope">
            <description>
              <text>Multicast scope to match</text>
            </description>
            <choice name="scope-choice">
              <case name="case_1">
                <leaf name="node-local">
                  <description>
                    <text>Node-local scope</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_2">
                <leaf name="link-local">
                  <description>
                    <text>Link-local scope</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_3">
                <leaf name="site-local">
                  <description>
                    <text>Site-local scope</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_4">
                <leaf name="organization-local">
                  <description>
                    <text>Organization-local scope</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_5">
                <leaf name="global">
                  <description>
                    <text>Global scope</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_6">
                <leaf name="scope_value">
                  <description>
                    <text>Scope value</text>
                  </description>
                  <type name="union">
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                    <type name="uint32">
                      <range value="0 .. 15"/>
                    </type>
                  </type>
                </leaf>
              </case>
            </choice>
            <choice name="scope-operator">
              <case name="case_1">
                <leaf name="orhigher">
                  <description>
                    <text>Match higher values</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_2">
                <leaf name="orlower">
                  <description>
                    <text>Match lower values</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
            </choice>
          </container>
          <leaf name="aggregate-contributor">
            <description>
              <text>Match more specifics of an aggregate</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="state">
            <description>
              <text>Route state</text>
            </description>
            <type name="enumeration">
              <enum name="active">
                <description>
                  <text>Active route</text>
                </description>
              </enum>
              <enum name="inactive">
                <description>
                  <text>Inactive route</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf-list name="tunnel-type">
            <ordered-by value="user"/>
            <description>
              <text>Tunnel type</text>
            </description>
            <type name="enumeration">
              <enum name="gre">
                <description>
                  <text>GRE tunnel</text>
                </description>
              </enum>
              <enum name="udp">
                <description>
                  <text>UDP tunnel</text>
                </description>
              </enum>
              <enum name="ipip">
                <description>
                  <text>IPIP tunnel</text>
                </description>
              </enum>
            </type>
          </leaf-list>
          <leaf name="route-type">
            <description>
              <text>Route type</text>
            </description>
            <type name="enumeration">
              <enum name="internal">
                <description>
                  <text>Internal route</text>
                </description>
              </enum>
              <enum name="external">
                <description>
                  <text>External route</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf-list name="nlri-route-type">
            <ordered-by value="user"/>
            <description>
              <text>Route type from NLRI</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="1 .. 10"/>
              </type>
            </type>
          </leaf-list>
          <leaf-list name="evpn-tag">
            <ordered-by value="user"/>
            <description>
              <text>Tag in EVPN Route</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="0 .. 4294967295"/>
              </type>
            </type>
          </leaf-list>
          <leaf-list name="evpn-esi">
            <ordered-by value="user"/>
            <description>
              <text>ESI in EVPN Route</text>
            </description>
            <type name="string"/>
          </leaf-list>
          <list name="mac-filter-list">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>List of mac-filter-list macs to match</text>
            </description>
            <uses name="control_mac_address_filter_list_type"/>
          </list>
          <leaf name="evpn-mac-route">
            <description>
              <text>EVPN Mac Route type</text>
            </description>
            <type name="enumeration">
              <enum name="mac-only">
                <description>
                  <text>MAC route</text>
                </description>
              </enum>
              <enum name="mac-ipv4">
                <description>
                  <text>MAC IPV4 route</text>
                </description>
              </enum>
              <enum name="mac-ipv6">
                <description>
                  <text>MAC IPV6 route</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf name="next-hop-type">
            <description>
              <text>Next-hop type</text>
            </description>
            <type name="enumeration">
              <enum name="merged">
                <description>
                  <text>Merged next hop</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf-list name="condition">
            <ordered-by value="user"/>
            <description>
              <text>Condition to match on</text>
            </description>
            <type name="string"/>
          </leaf-list>
          <list name="community-count">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Number of BGP communities</text>
            </description>
            <uses name="community_count_type"/>
          </list>
          <list name="as-path-unique-count">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Number of unique BGP ASes excluding confederations</text>
            </description>
            <uses name="as-path-unique-count-type"/>
          </list>
          <list name="as-path-calc-length">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Number of BGP ASes excluding confederations</text>
            </description>
            <uses name="as-path-calc-length-type"/>
          </list>
          <container name="traffic-engineering">
            <presence value="enable traffic-engineering"/>
            <description>
              <text>Traffic-Engineering related parameters</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf-list name="protocol">
              <ordered-by value="user"/>
              <description>
                <text>Protocol that originated the entry</text>
              </description>
              <type name="enumeration">
                <enum name="direct">
                  <description>
                    <text>Directly originated</text>
                  </description>
                </enum>
                <enum name="ospf">
                  <description>
                    <text>OSPF originated</text>
                  </description>
                </enum>
                <enum name="isis-level-1">
                  <description>
                    <text>ISIS level-1 originated</text>
                  </description>
                </enum>
                <enum name="isis-level-2">
                  <description>
                    <text>ISIS level-2 originated</text>
                  </description>
                </enum>
                <enum name="static">
                  <description>
                    <text>Statically originated</text>
                  </description>
                </enum>
                <enum name="unknown">
                  <description>
                    <text>Originated by unknown sources</text>
                  </description>
                </enum>
              </type>
            </leaf-list>
            <container name="node">
              <presence value="enable node"/>
              <description>
                <text>Node-related parameters</text>
              </description>
              <uses name="apply-advanced"/>
              <leaf name="as">
                <description>
                  <text>AS number</text>
                </description>
                <type name="string"/>
              </leaf>
              <leaf name="node-type">
                <description>
                  <text>Real or pseudo-node</text>
                </description>
                <type name="enumeration">
                  <enum name="router">
                    <description>
                      <text>Real node</text>
                    </description>
                  </enum>
                  <enum name="pseudo-node">
                    <description>
                      <text>Pseudo-node</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="router-id">
                <description>
                  <text>IP prefix to match the router-id against</text>
                </description>
                <type name="jt:ipprefix"/>
              </leaf>
              <leaf name="sys-id">
                <description>
                  <text>ISO address of the node</text>
                </description>
                <type name="jt:sysid"/>
              </leaf>
            </container>
            <container name="ipv4-prefix">
              <presence value="enable ipv4-prefix"/>
              <description>
                <text>IPV4 prefix-related parameters</text>
              </description>
              <uses name="apply-advanced"/>
              <leaf name="as">
                <description>
                  <text>AS number</text>
                </description>
                <type name="string"/>
              </leaf>
              <leaf name="router-id">
                <description>
                  <text>IP prefix to match the router-id against</text>
                </description>
                <type name="jt:ipprefix"/>
              </leaf>
              <leaf name="prefix">
                <description>
                  <text>IP prefix to match against</text>
                </description>
                <type name="jt:ipprefix"/>
              </leaf>
              <leaf name="sys-id">
                <description>
                  <text>ISO address of the node</text>
                </description>
                <type name="jt:sysid"/>
              </leaf>
            </container>
            <container name="ipv6-prefix">
              <presence value="enable ipv6-prefix"/>
              <description>
                <text>IPV6 prefix related parameters</text>
              </description>
              <uses name="apply-advanced"/>
              <leaf name="as">
                <description>
                  <text>AS number</text>
                </description>
                <type name="string"/>
              </leaf>
              <leaf name="router-id">
                <description>
                  <text>IPv6 prefix to match the router-id against</text>
                </description>
                <type name="jt:ipprefix"/>
              </leaf>
              <leaf name="prefix">
                <description>
                  <text>IPv6 prefix to match against</text>
                </description>
                <type name="jt:ipv6prefix"/>
              </leaf>
              <leaf name="sys-id">
                <description>
                  <text>ISO address of the node</text>
                </description>
                <type name="jt:sysid"/>
              </leaf>
            </container>
            <container name="srv6-sid">
              <presence value="enable srv6-sid"/>
              <description>
                <text>SRV6 SID related parameters</text>
              </description>
              <uses name="apply-advanced"/>
              <leaf name="as">
                <description>
                  <text>AS number</text>
                </description>
                <type name="string"/>
              </leaf>
              <leaf name="router-id">
                <description>
                  <text>SRv6 SID to match the router-id against</text>
                </description>
                <type name="jt:ipprefix"/>
              </leaf>
              <leaf name="sid">
                <description>
                  <text>SRv6 SID to match against</text>
                </description>
                <type name="jt:ipv6addr"/>
              </leaf>
              <leaf name="sys-id">
                <description>
                  <text>ISO address of the node</text>
                </description>
                <type name="jt:sysid"/>
              </leaf>
            </container>
            <container name="link">
              <presence value="enable link"/>
              <description>
                <text>Link-related parameters</text>
              </description>
              <uses name="apply-advanced"/>
              <container name="from">
                <description>
                  <text>Specify parameter of the 'from' side</text>
                </description>
                <uses name="apply-advanced"/>
                <leaf name="as">
                  <description>
                    <text>AS number</text>
                  </description>
                  <type name="string"/>
                </leaf>
                <leaf name="router-id">
                  <description>
                    <text>IP prefix to match the router-id against</text>
                  </description>
                  <type name="jt:ipprefix"/>
                </leaf>
                <leaf name="sys-id">
                  <description>
                    <text>System-ID of the node</text>
                  </description>
                  <type name="jt:sysid"/>
                </leaf>
                <leaf name="node-type">
                  <description>
                    <text>Type of the node</text>
                  </description>
                  <type name="enumeration">
                    <enum name="router">
                      <description>
                        <text>Real node</text>
                      </description>
                    </enum>
                    <enum name="pseudo-node">
                      <description>
                        <text>Pseudo-node</text>
                      </description>
                    </enum>
                  </type>
                </leaf>
                <leaf name="link-address">
                  <description>
                    <text>IP prefix to match the link address against</text>
                  </description>
                  <type name="jt:ipprefix"/>
                </leaf>
              </container>
              <container name="to">
                <description>
                  <text>Specify parameters of the 'to' side</text>
                </description>
                <uses name="apply-advanced"/>
                <leaf name="as">
                  <description>
                    <text>AS number</text>
                  </description>
                  <type name="string"/>
                </leaf>
                <leaf name="router-id">
                  <description>
                    <text>IP prefix to match the router-id against</text>
                  </description>
                  <type name="jt:ipprefix"/>
                </leaf>
                <leaf name="sys-id">
                  <description>
                    <text>System-ID of the node</text>
                  </description>
                  <type name="jt:sysid"/>
                </leaf>
                <leaf name="node-type">
                  <description>
                    <text>Type of the node</text>
                  </description>
                  <type name="enumeration">
                    <enum name="router">
                      <description>
                        <text>Real node</text>
                      </description>
                    </enum>
                    <enum name="pseudo-node">
                      <description>
                        <text>Pseudo-node</text>
                      </description>
                    </enum>
                  </type>
                </leaf>
                <leaf name="link-address">
                  <description>
                    <text>IP prefix to match the link address against</text>
                  </description>
                  <type name="jt:ipprefix"/>
                </leaf>
              </container>
            </container>
          </container>
          <leaf-list name="route-distinguisher">
            <ordered-by value="user"/>
            <description>
              <text>Name of the route-distinguisher</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </container>
        <container name="to">
          <description>
            <text>Conditions to match the destination of a route</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="instance">
            <description>
              <text>Routing protocol instance</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="instance-any">
            <description>
              <text>Any routing protocol instance</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf-list name="instance-list">
            <description>
              <text>A list of routing protocol instances</text>
            </description>
            <type name="string"/>
          </leaf-list>
          <leaf-list name="igp-instance">
            <description>
              <text>IGP instance</text>
            </description>
            <type name="string"/>
          </leaf-list>
          <leaf name="family">
            <type name="enumeration">
              <enum name="inet">
                <description>
                  <text>IPv4 family</text>
                </description>
              </enum>
              <enum name="inet-vpn">
                <description>
                  <text>IPv4-VPN family</text>
                </description>
              </enum>
              <enum name="inet6">
                <description>
                  <text>IPv6 family</text>
                </description>
              </enum>
              <enum name="inet6-vpn">
                <description>
                  <text>IPv6-VPN family</text>
                </description>
              </enum>
              <enum name="iso-vpn">
                <description>
                  <text>ISO-VPN family</text>
                </description>
              </enum>
              <enum name="iso">
                <description>
                  <text>ISO family</text>
                </description>
              </enum>
              <enum name="evpn">
                <description>
                  <text>EVPN family</text>
                </description>
              </enum>
              <enum name="inet-mvpn">
                <description>
                  <text>IPv4 Multicast VPN family</text>
                </description>
              </enum>
              <enum name="inet6-mvpn">
                <description>
                  <text>IPv6 Multicast VPN family</text>
                </description>
              </enum>
              <enum name="inet-mdt">
                <description>
                  <text>IPv4 MDT Signaling family</text>
                </description>
              </enum>
              <enum name="route-target">
                <description>
                  <text>Local route target VPN family</text>
                </description>
              </enum>
              <enum name="traffic-engineering">
                <description>
                  <text>Traffic Engineering family</text>
                </description>
              </enum>
              <enum name="inet-srte">
                <description>
                  <text>IPv4 srtte family</text>
                </description>
              </enum>
              <enum name="inet6-srte">
                <description>
                  <text>IPv6 srte family</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf-list name="protocol">
            <ordered-by value="user"/>
            <description>
              <text>Protocol from which route was learned</text>
            </description>
            <type name="enumeration">
              <enum name="aggregate">
                <description>
                  <text>Aggregate routes</text>
                </description>
              </enum>
              <enum name="bgp">
                <description>
                  <text>BGP</text>
                </description>
              </enum>
              <enum name="direct">
                <description>
                  <text>Directly connected routes</text>
                </description>
              </enum>
              <enum name="dvmrp">
                <description>
                  <text>Distance Vector Multicast Routing Protocol</text>
                </description>
              </enum>
              <enum name="isis">
                <description>
                  <text>Intermediate System-to-Intermediate System</text>
                </description>
              </enum>
              <enum name="esis">
                <description>
                  <text>End System-to-Intermediate System</text>
                </description>
              </enum>
              <enum name="l-isis">
                <description>
                  <text>Labelled ISIS</text>
                </description>
              </enum>
              <enum name="l2circuit">
                <description>
                  <text>Layer 2 circuits</text>
                </description>
              </enum>
              <enum name="l2vpn">
                <description>
                  <text>Layer 2 MPLS virtual private networks</text>
                </description>
              </enum>
              <enum name="local">
                <description>
                  <text>Local system addresses</text>
                </description>
              </enum>
              <enum name="ospf">
                <description>
                  <text>Open Shortest Path First</text>
                </description>
              </enum>
              <enum name="ospf2">
                <description>
                  <text>Open Shortest Path First Version 2</text>
                </description>
              </enum>
              <enum name="ospf3">
                <description>
                  <text>Open Shortest Path First Version 3</text>
                </description>
              </enum>
              <enum name="l-ospf">
                <description>
                  <text>Labelled OSPF</text>
                </description>
              </enum>
              <enum name="pim">
                <description>
                  <text>Protocol Independent Multicast</text>
                </description>
              </enum>
              <enum name="rip">
                <description>
                  <text>Routing Information Protocol</text>
                </description>
              </enum>
              <enum name="ripng">
                <description>
                  <text>Routing Information Protocol next generation</text>
                </description>
              </enum>
              <enum name="static">
                <description>
                  <text>Statically defined addresses</text>
                </description>
              </enum>
              <enum name="arp">
                <description>
                  <text>Addresses learned from ARP</text>
                </description>
              </enum>
              <enum name="frr">
                <description>
                  <text>Addresses created by Host Fast Re-route</text>
                </description>
              </enum>
              <enum name="mpls">
                <description>
                  <text>Multiprotocol Label Switching</text>
                </description>
              </enum>
              <enum name="ldp">
                <description>
                  <text>Label Distribution Protocol</text>
                </description>
              </enum>
              <enum name="rsvp">
                <description>
                  <text>Resource Reservation Protocol</text>
                </description>
              </enum>
              <enum name="msdp">
                <description>
                  <text>Multicast Source Discovery Protocol</text>
                </description>
              </enum>
              <enum name="route-target">
                <description>
                  <text>Local route target VPN membership</text>
                </description>
              </enum>
              <enum name="access">
                <description>
                  <text>Access server routes</text>
                </description>
              </enum>
              <enum name="access-internal">
                <description>
                  <text>Internal routes to directly connected clients</text>
                </description>
              </enum>
              <enum name="anchor">
                <description>
                  <text>Anchor routes connected to UEs</text>
                </description>
              </enum>
              <enum name="bgp-static">
                <description>
                  <text>BGP static routes</text>
                </description>
              </enum>
              <enum name="vpls">
                <description>
                  <text>Virtual Private LAN Service</text>
                </description>
              </enum>
              <enum name="evpn">
                <description>
                  <text>Ethernet VPN Service</text>
                </description>
              </enum>
              <enum name="spring-te">
                <description>
                  <text>SPRING Traffic-Engineered</text>
                </description>
              </enum>
              <enum name="bgp-ls-epe">
                <description>
                  <text>Addresses created by BGP-LS egress TE</text>
                </description>
              </enum>
              <enum name="express-segments">
                <description>
                  <text>Express-segment routes</text>
                </description>
              </enum>
              <enum name="rift">
                <description>
                  <text>RIFT routes</text>
                </description>
              </enum>
              <enum name="l2-learned-host-routing">
                <description>
                  <text>Layer2-learned host routes</text>
                </description>
              </enum>
              <enum name="srv6-isis">
                <description>
                  <text>SRV6 ISIS</text>
                </description>
              </enum>
            </type>
          </leaf-list>
          <leaf name="rib">
            <description>
              <text>Routing table</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf-list name="neighbor">
            <ordered-by value="user"/>
            <description>
              <text>Neighboring router</text>
            </description>
            <type name="jt:ipaddr"/>
          </leaf-list>
          <leaf-list name="next-hop">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop router</text>
            </description>
            <type name="jt:ipaddr"/>
          </leaf-list>
          <leaf-list name="interface">
            <ordered-by value="user"/>
            <description>
              <text>Interface name or address</text>
            </description>
            <type name="union">
              <type name="jt:ipaddr-or-interface"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf-list>
          <leaf name="area">
            <description>
              <text>OSPF area identifier</text>
            </description>
            <type name="jt:areaid"/>
          </leaf>
          <leaf-list name="as-path">
            <ordered-by value="user"/>
            <description>
              <text>Name of AS path regular expression (BGP only)</text>
            </description>
            <type name="string"/>
          </leaf-list>
          <leaf-list name="as-path-group">
            <ordered-by value="user"/>
            <description>
              <text>Name of AS path group (BGP only)</text>
            </description>
            <type name="string"/>
          </leaf-list>
          <leaf name="origin">
            <description>
              <text>BGP origin attribute</text>
            </description>
            <type name="enumeration">
              <enum name="igp">
                <description>
                  <text>Path originated in the local IGP</text>
                </description>
              </enum>
              <enum name="egp">
                <description>
                  <text>Path originated in another AS</text>
                </description>
              </enum>
              <enum name="incomplete">
                <description>
                  <text>Path was learned by some other means</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf-list name="community">
            <ordered-by value="user"/>
            <description>
              <text>BGP community</text>
            </description>
            <type name="string"/>
          </leaf-list>
          <leaf name="level">
            <description>
              <text>IS-IS level</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <container name="external">
            <presence value="enable external"/>
            <description>
              <text>External route</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="type">
              <description>
                <text>OSPF external metric type</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="int32">
                  <range value="1 .. 2"/>
                </type>
              </type>
            </leaf>
          </container>
          <leaf name="bgp-srte-discriminator">
            <description>
              <text>Srte discriminator</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="srte-color">
            <description>
              <text>Srte color</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="programmed">
            <description>
              <text>API-programmed route</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="validation-database">
            <description>
              <text>Name to identify a validation-state</text>
            </description>
            <type name="enumeration">
              <enum name="valid">
                <description>
                  <text>Match for valid database validation-state</text>
                </description>
              </enum>
              <enum name="invalid">
                <description>
                  <text>Match for invalid database validation-state</text>
                </description>
              </enum>
              <enum name="unknown">
                <description>
                  <text>Match for unknown database validation-state</text>
                </description>
              </enum>
            </type>
          </leaf>
          <list name="nexthop-weight">
            <key value="choice-ident choice-value weight"/>
            <ordered-by value="user"/>
            <description>
              <text>Weight of the gateway</text>
            </description>
            <leaf name="choice-ident">
              <type name="enumeration">
                <enum name="equal"/>
                <enum name="greater-than"/>
                <enum name="less-than"/>
                <enum name="greater-than-equal"/>
                <enum name="less-than-equal"/>
                <enum name="weight"/>
                <enum name="apply-advanced"/>
                <enum name="weight_type"/>
                <enum name="all-nexthop"/>
              </type>
            </leaf>
            <leaf name="choice-value">
              <type name="string"/>
            </leaf>
            <leaf name="weight">
              <description>
                <text>Weight of the gateway</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 65535"/>
                </type>
              </type>
            </leaf>
            <uses name="apply-advanced"/>
            <choice name="weight_type">
              <case name="case_1">
                <leaf name="all-nexthop">
                  <description>
                    <text>All the gateway weight should be matched</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
            </choice>
          </list>
          <leaf name="metric">
            <description>
              <text>Metric value</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="metric2">
            <description>
              <text>Metric value 2</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="metric3">
            <description>
              <text>Metric value 3</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="metric4">
            <description>
              <text>Metric value 4</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf-list name="tag">
            <ordered-by value="user"/>
            <description>
              <text>Tag string</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf-list>
          <leaf name="tag2">
            <description>
              <text>Tag string 2</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="preference">
            <description>
              <text>Preference value</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="preference2">
            <description>
              <text>Preference value 2</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="color">
            <description>
              <text>Color (preference) value</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="color2">
            <description>
              <text>Color (preference) value 2</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="local-preference">
            <description>
              <text>Local preference associated with a route</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf-list name="policy">
            <ordered-by value="user"/>
            <description>
              <text>Name of policy to evaluate</text>
            </description>
            <type name="jt:policy-algebra"/>
          </leaf-list>
          <choice name="lsp-name-type">
            <case name="case_1">
              <leaf name="lsp">
                <description>
                  <text>Label switched path name</text>
                </description>
                <type name="string"/>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="lsp-regex">
                <description>
                  <text>Label switched path name regular expression</text>
                </description>
                <type name="string"/>
              </leaf>
            </case>
          </choice>
          <container name="source-routing-path">
            <presence value="enable source-routing-path"/>
            <description>
              <text>Spring-te lsp policy attributes</text>
            </description>
            <leaf name="name-regex">
              <description>
                <text>Spring-te lsp name regex</text>
              </description>
              <type name="string"/>
            </leaf>
            <leaf name="dest">
              <description>
                <text>Spring-te lsp IPV4/IPV6 destination without color</text>
              </description>
              <type name="jt:ipaddr"/>
            </leaf>
            <leaf name="origin">
              <description>
                <text>Spring-te lsp origin address</text>
              </description>
              <type name="jt:ipaddr"/>
            </leaf>
            <leaf name="tunnel-source">
              <description>
                <text>Spring-te lsp source protocol</text>
              </description>
              <type name="enumeration">
                <enum name="pcep">
                  <description>
                    <text>Spring-te lsp src pcep</text>
                  </description>
                </enum>
                <enum name="bgp">
                  <description>
                    <text>Spring-te lsp src bgp</text>
                  </description>
                </enum>
              </type>
            </leaf>
            <leaf name="route-distinguisher">
              <description>
                <text>Spring-te lsp route distinguisher</text>
              </description>
              <type name="union">
                <type name="uint32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
            <leaf name="color">
              <description>
                <text>Spring-te lsp color</text>
              </description>
              <type name="union">
                <type name="uint32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
        </container>
        <container name="then">
          <description>
            <text>Actions to take if 'from' and 'to' conditions match</text>
          </description>
          <uses name="apply-advanced"/>
          <container name="metric">
            <description>
              <text>Metric value</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="metric_action">
              <case name="case_1">
                <leaf name="metric">
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
              <case name="case_2">
                <leaf name="add">
                  <description>
                    <text>Add constant to attribute</text>
                  </description>
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
              <case name="case_3">
                <leaf name="subtract">
                  <description>
                    <text>Subtract constant from attribute</text>
                  </description>
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
              <case name="case_4">
                <container name="igp">
                  <presence value="enable igp"/>
                  <description>
                    <text>Track the IGP metric (BGP only)</text>
                  </description>
                  <leaf name="metric_offset">
                    <description>
                      <text>Metric offset for MED</text>
                    </description>
                    <type name="union">
                      <type name="int32"/>
                      <type name="string">
                        <pattern value="&lt;.*&gt;|$.*"/>
                      </type>
                    </type>
                  </leaf>
                </container>
              </case>
              <case name="case_5">
                <container name="minimum-igp">
                  <presence value="enable minimum-igp"/>
                  <description>
                    <text>Track the minimum IGP metric (BGP only)</text>
                  </description>
                  <leaf name="metric_offset">
                    <description>
                      <text>Metric offset for MED</text>
                    </description>
                    <type name="union">
                      <type name="int32"/>
                      <type name="string">
                        <pattern value="&lt;.*&gt;|$.*"/>
                      </type>
                    </type>
                  </leaf>
                </container>
              </case>
              <case name="case_6">
                <container name="expression">
                  <description>
                    <text>Calculate value based on route metric and metric2</text>
                  </description>
                  <uses name="metric_expression_type"/>
                </container>
              </case>
              <case name="case_7">
                <leaf name="aigp">
                  <description>
                    <text>Use aigp, if it exists, to set the IGP metric</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_8">
                <container name="effective-aigp">
                  <presence value="enable effective-aigp"/>
                  <description>
                    <text>Track the effective AIGP metric (BGP only)</text>
                  </description>
                  <leaf name="metric_offset">
                    <description>
                      <text>Metric offset for MED</text>
                    </description>
                    <type name="union">
                      <type name="int32"/>
                      <type name="string">
                        <pattern value="&lt;.*&gt;|$.*"/>
                      </type>
                    </type>
                  </leaf>
                </container>
              </case>
              <case name="case_9">
                <container name="minimum-effective-aigp">
                  <presence value="enable minimum-effective-aigp"/>
                  <description>
                    <text>Track the minimum effective AIGP metric (BGP only)</text>
                  </description>
                  <leaf name="metric_offset">
                    <description>
                      <text>Metric offset for MED</text>
                    </description>
                    <type name="union">
                      <type name="int32"/>
                      <type name="string">
                        <pattern value="&lt;.*&gt;|$.*"/>
                      </type>
                    </type>
                  </leaf>
                </container>
              </case>
            </choice>
          </container>
          <container name="metric2">
            <description>
              <text>Metric value 2</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="metric_action">
              <case name="case_1">
                <leaf name="metric2">
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
              <case name="case_2">
                <leaf name="add">
                  <description>
                    <text>Add constant to attribute</text>
                  </description>
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
              <case name="case_3">
                <leaf name="subtract">
                  <description>
                    <text>Subtract constant from attribute</text>
                  </description>
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
            </choice>
          </container>
          <container name="metric3">
            <description>
              <text>Metric value 3</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="metric_action">
              <case name="case_1">
                <leaf name="metric3">
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
              <case name="case_2">
                <leaf name="add">
                  <description>
                    <text>Add constant to attribute</text>
                  </description>
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
              <case name="case_3">
                <leaf name="subtract">
                  <description>
                    <text>Subtract constant from attribute</text>
                  </description>
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
            </choice>
          </container>
          <container name="metric4">
            <description>
              <text>Metric value 4</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="metric_action">
              <case name="case_1">
                <leaf name="metric4">
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
              <case name="case_2">
                <leaf name="add">
                  <description>
                    <text>Add constant to attribute</text>
                  </description>
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
              <case name="case_3">
                <leaf name="subtract">
                  <description>
                    <text>Subtract constant from attribute</text>
                  </description>
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
            </choice>
          </container>
          <container name="tag">
            <description>
              <text>Tag string</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="metric_action">
              <case name="case_1">
                <leaf name="tag">
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
              <case name="case_2">
                <leaf name="add">
                  <description>
                    <text>Add constant to attribute</text>
                  </description>
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
              <case name="case_3">
                <leaf name="subtract">
                  <description>
                    <text>Subtract constant from attribute</text>
                  </description>
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
            </choice>
          </container>
          <container name="tag2">
            <description>
              <text>Tag string 2</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="metric_action">
              <case name="case_1">
                <leaf name="tag2">
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
              <case name="case_2">
                <leaf name="add">
                  <description>
                    <text>Add constant to attribute</text>
                  </description>
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
              <case name="case_3">
                <leaf name="subtract">
                  <description>
                    <text>Subtract constant from attribute</text>
                  </description>
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
            </choice>
          </container>
          <container name="preference">
            <description>
              <text>Preference value</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="metric_action">
              <case name="case_1">
                <leaf name="preference">
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
              <case name="case_2">
                <leaf name="add">
                  <description>
                    <text>Add constant to attribute</text>
                  </description>
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
              <case name="case_3">
                <leaf name="subtract">
                  <description>
                    <text>Subtract constant from attribute</text>
                  </description>
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
            </choice>
          </container>
          <container name="preference2">
            <description>
              <text>Preference value 2</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="metric_action">
              <case name="case_1">
                <leaf name="preference2">
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
              <case name="case_2">
                <leaf name="add">
                  <description>
                    <text>Add constant to attribute</text>
                  </description>
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
              <case name="case_3">
                <leaf name="subtract">
                  <description>
                    <text>Subtract constant from attribute</text>
                  </description>
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
            </choice>
          </container>
          <container name="color">
            <description>
              <text>Color (preference) value</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="metric_action">
              <case name="case_1">
                <leaf name="color">
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
              <case name="case_2">
                <leaf name="add">
                  <description>
                    <text>Add constant to attribute</text>
                  </description>
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
              <case name="case_3">
                <leaf name="subtract">
                  <description>
                    <text>Subtract constant from attribute</text>
                  </description>
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
            </choice>
          </container>
          <container name="color2">
            <description>
              <text>Color (preference) value 2</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="metric_action">
              <case name="case_1">
                <leaf name="color2">
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
              <case name="case_2">
                <leaf name="add">
                  <description>
                    <text>Add constant to attribute</text>
                  </description>
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
              <case name="case_3">
                <leaf name="subtract">
                  <description>
                    <text>Subtract constant from attribute</text>
                  </description>
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
            </choice>
          </container>
          <container name="local-preference">
            <description>
              <text>Local preference associated with a route</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="metric_action">
              <case name="case_1">
                <leaf name="local-preference">
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
              <case name="case_2">
                <leaf name="add">
                  <description>
                    <text>Add constant to attribute</text>
                  </description>
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
              <case name="case_3">
                <leaf name="subtract">
                  <description>
                    <text>Subtract constant from attribute</text>
                  </description>
                  <type name="union">
                    <type name="uint32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
            </choice>
          </container>
          <leaf name="priority">
            <description>
              <text>Set priority for route installation</text>
            </description>
            <type name="enumeration">
              <enum name="high">
                <description>
                  <text>Set priority to high</text>
                </description>
              </enum>
              <enum name="medium">
                <description>
                  <text>Set priority to medium</text>
                </description>
              </enum>
              <enum name="low">
                <description>
                  <text>Set priority to low</text>
                </description>
              </enum>
            </type>
          </leaf>
          <container name="prefix-segment">
            <description>
              <text>Set prefix segment attributes</text>
            </description>
            <uses name="apply-advanced"/>
            <list name="algorithm">
              <key value="name"/>
              <description>
                <text>Set prefix segment attributes for strict/flex algorithm </text>
              </description>
              <max-elements value="15"/>
              <leaf name="name">
                <description>
                  <text>Set prefix segment for strict/flex algorithm</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="1 .. 255"/>
                  </type>
                </type>
              </leaf>
              <leaf name="index">
                <description>
                  <text>Set prefix segment index id</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 199999"/>
                  </type>
                </type>
              </leaf>
              <leaf name="node-segment">
                <description>
                  <text>Set node segment flag for this prefix segment</text>
                </description>
                <type name="empty"/>
              </leaf>
            </list>
            <leaf name="index">
              <description>
                <text>Set prefix segment index id</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 199999"/>
                </type>
              </type>
            </leaf>
            <leaf name="node-segment">
              <description>
                <text>Set node segment flag for default prefix segment</text>
              </description>
              <type name="empty"/>
            </leaf>
          </container>
          <leaf name="label-allocation">
            <description>
              <text>Set label allocation mode</text>
            </description>
            <type name="enumeration">
              <enum name="per-table">
                <description>
                  <text>Set per-table label allocation mode</text>
                </description>
              </enum>
              <enum name="per-nexthop">
                <description>
                  <text>Set per-nexthop label allocation mode</text>
                </description>
              </enum>
              <enum name="per-table-localize">
                <description>
                  <text>Set per-table-localize label allocation mode</text>
                </description>
              </enum>
            </type>
          </leaf>
          <container name="add-path">
            <description>
              <text>Set BGP add-path attributes</text>
            </description>
            <leaf name="send-count">
              <description>
                <text>Number of add-paths sent</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="2 .. 64"/>
                </type>
              </type>
            </leaf>
          </container>
          <leaf name="validation-state">
            <description>
              <text>Set validation-state of a route</text>
            </description>
            <type name="enumeration">
              <enum name="valid">
                <description>
                  <text>Set validaton-state to valid</text>
                </description>
              </enum>
              <enum name="invalid">
                <description>
                  <text>Set validation-state to invalid</text>
                </description>
              </enum>
              <enum name="unknown">
                <description>
                  <text>Set validation-state to unknown</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf name="origin">
            <description>
              <text>BGP path origin</text>
            </description>
            <type name="enumeration">
              <enum name="igp">
                <description>
                  <text>Path originated in the local IGP</text>
                </description>
              </enum>
              <enum name="egp">
                <description>
                  <text>Path originated in another AS</text>
                </description>
              </enum>
              <enum name="incomplete">
                <description>
                  <text>Path was learned by some other means</text>
                </description>
              </enum>
            </type>
          </leaf>
          <container name="aigp-originate">
            <presence value="enable aigp-originate"/>
            <description>
              <text>Originate a BGP AIGP attribute</text>
            </description>
            <leaf name="distance">
              <description>
                <text>AIGP distance</text>
              </description>
              <type name="union">
                <type name="uint32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
          <container name="aigp-adjust">
            <description>
              <text>Adjust a BGP AIGP attribute</text>
            </description>
            <choice name="math-op">
              <case name="case_1">
                <leaf name="add">
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_2">
                <leaf name="subtract">
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_3">
                <leaf name="multiply">
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_4">
                <leaf name="divide">
                  <type name="empty"/>
                </leaf>
              </case>
            </choice>
            <choice name="adjust-value">
              <case name="case_1">
                <leaf name="user-value">
                  <description>
                    <text>Adjustment value</text>
                  </description>
                  <type name="union">
                    <type name="uint64"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
              <case name="case_2">
                <leaf name="distance-to-protocol-nexthop">
                  <description>
                    <text>Metric2</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
            </choice>
          </container>
          <list name="community">
            <key value="choice-ident choice-value community-name"/>
            <ordered-by value="user"/>
            <description>
              <text>BGP community properties associated with a route</text>
            </description>
            <leaf name="choice-ident">
              <type name="enumeration">
                <enum name="equal-literal"/>
                <enum name="set"/>
                <enum name="plus-literal"/>
                <enum name="add"/>
                <enum name="minus-literal"/>
                <enum name="delete"/>
                <enum name="community-name"/>
              </type>
            </leaf>
            <leaf name="choice-value">
              <type name="string"/>
            </leaf>
            <leaf name="community-name">
              <description>
                <text>Name to identify a BGP community</text>
              </description>
              <type name="string"/>
            </leaf>
          </list>
          <list name="tunnel-attribute">
            <key value="choice-ident choice-value tunnel-attribute-name"/>
            <ordered-by value="user"/>
            <description>
              <text>BGP tunnel attribute associated with a route</text>
            </description>
            <leaf name="choice-ident">
              <type name="enumeration">
                <enum name="set"/>
                <enum name="remove"/>
                <enum name="tunnel-attribute-name"/>
              </type>
            </leaf>
            <leaf name="choice-value">
              <type name="string"/>
            </leaf>
            <leaf name="tunnel-attribute-name">
              <description>
                <text>Name of a tunnel attribute , or 'all'</text>
              </description>
              <type name="string"/>
            </leaf>
          </list>
          <leaf name="damping">
            <description>
              <text>Define BGP route flap damping parameters</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="aggregate-bandwidth">
            <description>
              <text>Advertise aggregate outbound link bandwidth</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="limit-bandwidth">
            <description>
              <text>Limit advertised aggregate outbound link bandwidth</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="0 .. 4294967295"/>
              </type>
            </type>
          </leaf>
          <leaf name="no-entropy-label-capability">
            <description>
              <text>Don't advertise entropy label capability</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="as-path-prepend">
            <description>
              <text>Prepend AS numbers to an AS path (BGP only)</text>
            </description>
            <type name="string"/>
          </leaf>
          <container name="as-path-expand">
            <description>
              <text>Prepend AS numbers prior to adding local-as (BGP only)</text>
            </description>
            <choice name="aspath_exp_value">
              <case name="case_1">
                <container name="last-as">
                  <presence value="enable last-as"/>
                  <description>
                    <text>Prepend last AS</text>
                  </description>
                  <leaf name="count">
                    <description>
                      <text>Repeat count</text>
                    </description>
                    <type name="union">
                      <type name="string">
                        <pattern value="&lt;.*&gt;|$.*"/>
                      </type>
                      <type name="uint32">
                        <range value="1 .. 32"/>
                      </type>
                    </type>
                  </leaf>
                </container>
              </case>
              <case name="case_2">
                <leaf name="aspath">
                  <description>
                    <text>AS path string</text>
                  </description>
                  <type name="string"/>
                </leaf>
              </case>
            </choice>
          </container>
          <container name="next-hop">
            <description>
              <text>Set the address of the next-hop router</text>
            </description>
            <choice name="nexthop_value">
              <case name="case_1">
                <leaf name="self">
                  <description>
                    <text>Use a local address as the next-hop address</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_2">
                <leaf name="peer-address">
                  <description>
                    <text>Use the remote peer address as the next-hop address</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_3">
                <leaf name="address">
                  <description>
                    <text>Next-hop address</text>
                  </description>
                  <type name="jt:ipaddr"/>
                </leaf>
              </case>
              <case name="case_4">
                <leaf name="reject">
                  <description>
                    <text>Use a reject next hop</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_5">
                <leaf name="discard">
                  <description>
                    <text>Use a discard next hop</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_6">
                <leaf name="next-table">
                  <description>
                    <text>Perform a forwarding lookup in the specified table</text>
                  </description>
                  <type name="string"/>
                </leaf>
              </case>
            </choice>
          </container>
          <container name="install-nexthop">
            <description>
              <text>Choose the next hop to be used for forwarding</text>
            </description>
            <choice name="strict_type">
              <case name="case_1">
                <leaf name="strict">
                  <description>
                    <text>Do not use any other available next hops</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_2">
                <leaf name="strict-named-lsp">
                  <description>
                    <text>Do not use any other non-lsp next hops</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
            </choice>
            <choice name="nexthop-value">
              <case name="case_1">
                <leaf-list name="lsp">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop LSP name</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_2">
                <leaf-list name="lsp-regex">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop LSP name regular expression</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_3">
                <leaf-list name="static-lsp">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop static LSP name</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_4">
                <leaf-list name="static-lsp-regex">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop static LSP name regular expression</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_5">
                <leaf name="non-lsp-nexthop">
                  <description>
                    <text>Next-hop with non-lsp</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_6">
                <leaf name="non-labelled-nexthop">
                  <description>
                    <text>Next-hop without tag</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
            </choice>
            <container name="except">
              <description>
                <text>Do not choose to install matching next hops</text>
              </description>
              <uses name="apply-advanced"/>
              <choice name="nexthop-value">
                <case name="case_1">
                  <leaf-list name="lsp">
                    <ordered-by value="user"/>
                    <description>
                      <text>Next-hop LSP name</text>
                    </description>
                    <type name="string"/>
                  </leaf-list>
                </case>
                <case name="case_2">
                  <leaf-list name="lsp-regex">
                    <ordered-by value="user"/>
                    <description>
                      <text>Next-hop LSP name regular expression</text>
                    </description>
                    <type name="string"/>
                  </leaf-list>
                </case>
                <case name="case_3">
                  <leaf-list name="static-lsp">
                    <ordered-by value="user"/>
                    <description>
                      <text>Next-hop static LSP name</text>
                    </description>
                    <type name="string"/>
                  </leaf-list>
                </case>
                <case name="case_4">
                  <leaf-list name="static-lsp-regex">
                    <ordered-by value="user"/>
                    <description>
                      <text>Next-hop static LSP name regular expression</text>
                    </description>
                    <type name="string"/>
                  </leaf-list>
                </case>
                <case name="case_5">
                  <leaf name="non-lsp-nexthop">
                    <description>
                      <text>Next-hop with non-lsp</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_6">
                  <leaf name="non-labelled-nexthop">
                    <description>
                      <text>Next-hop without tag</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
              </choice>
              <container name="fallback">
                <description>
                  <text>Backup option</text>
                </description>
                <uses name="apply-advanced"/>
                <choice name="nexthop-value">
                  <case name="case_1">
                    <leaf-list name="lsp">
                      <ordered-by value="user"/>
                      <description>
                        <text>Next-hop LSP name</text>
                      </description>
                      <type name="string"/>
                    </leaf-list>
                  </case>
                  <case name="case_2">
                    <leaf-list name="lsp-regex">
                      <ordered-by value="user"/>
                      <description>
                        <text>Next-hop LSP name regular expression</text>
                      </description>
                      <type name="string"/>
                    </leaf-list>
                  </case>
                  <case name="case_3">
                    <leaf-list name="static-lsp">
                      <ordered-by value="user"/>
                      <description>
                        <text>Next-hop static LSP name</text>
                      </description>
                      <type name="string"/>
                    </leaf-list>
                  </case>
                  <case name="case_4">
                    <leaf-list name="static-lsp-regex">
                      <ordered-by value="user"/>
                      <description>
                        <text>Next-hop static LSP name regular expression</text>
                      </description>
                      <type name="string"/>
                    </leaf-list>
                  </case>
                  <case name="case_5">
                    <leaf name="non-lsp-nexthop">
                      <description>
                        <text>Next-hop with non-lsp</text>
                      </description>
                      <type name="empty"/>
                    </leaf>
                  </case>
                  <case name="case_6">
                    <leaf name="non-labelled-nexthop">
                      <description>
                        <text>Next-hop without tag</text>
                      </description>
                      <type name="empty"/>
                    </leaf>
                  </case>
                </choice>
                <container name="except">
                  <description>
                    <text>Do not choose to install matching next hops</text>
                  </description>
                  <uses name="apply-advanced"/>
                  <choice name="nexthop-value">
                    <case name="case_1">
                      <leaf-list name="lsp">
                        <ordered-by value="user"/>
                        <description>
                          <text>Next-hop LSP name</text>
                        </description>
                        <type name="string"/>
                      </leaf-list>
                    </case>
                    <case name="case_2">
                      <leaf-list name="lsp-regex">
                        <ordered-by value="user"/>
                        <description>
                          <text>Next-hop LSP name regular expression</text>
                        </description>
                        <type name="string"/>
                      </leaf-list>
                    </case>
                    <case name="case_3">
                      <leaf-list name="static-lsp">
                        <ordered-by value="user"/>
                        <description>
                          <text>Next-hop static LSP name</text>
                        </description>
                        <type name="string"/>
                      </leaf-list>
                    </case>
                    <case name="case_4">
                      <leaf-list name="static-lsp-regex">
                        <ordered-by value="user"/>
                        <description>
                          <text>Next-hop static LSP name regular expression</text>
                        </description>
                        <type name="string"/>
                      </leaf-list>
                    </case>
                    <case name="case_5">
                      <leaf name="non-lsp-nexthop">
                        <description>
                          <text>Next-hop with non-lsp</text>
                        </description>
                        <type name="empty"/>
                      </leaf>
                    </case>
                    <case name="case_6">
                      <leaf name="non-labelled-nexthop">
                        <description>
                          <text>Next-hop without tag</text>
                        </description>
                        <type name="empty"/>
                      </leaf>
                    </case>
                  </choice>
                </container>
              </container>
            </container>
            <container name="fallback">
              <description>
                <text>Backup option </text>
              </description>
              <uses name="apply-advanced"/>
              <choice name="nexthop-value">
                <case name="case_1">
                  <leaf-list name="lsp">
                    <ordered-by value="user"/>
                    <description>
                      <text>Next-hop LSP name</text>
                    </description>
                    <type name="string"/>
                  </leaf-list>
                </case>
                <case name="case_2">
                  <leaf-list name="lsp-regex">
                    <ordered-by value="user"/>
                    <description>
                      <text>Next-hop LSP name regular expression</text>
                    </description>
                    <type name="string"/>
                  </leaf-list>
                </case>
                <case name="case_3">
                  <leaf-list name="static-lsp">
                    <ordered-by value="user"/>
                    <description>
                      <text>Next-hop static LSP name</text>
                    </description>
                    <type name="string"/>
                  </leaf-list>
                </case>
                <case name="case_4">
                  <leaf-list name="static-lsp-regex">
                    <ordered-by value="user"/>
                    <description>
                      <text>Next-hop static LSP name regular expression</text>
                    </description>
                    <type name="string"/>
                  </leaf-list>
                </case>
                <case name="case_5">
                  <leaf name="non-lsp-nexthop">
                    <description>
                      <text>Next-hop with non-lsp</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_6">
                  <leaf name="non-labelled-nexthop">
                    <description>
                      <text>Next-hop without tag</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
              </choice>
              <container name="except">
                <description>
                  <text>Do not choose to install matching next hops</text>
                </description>
                <uses name="apply-advanced"/>
                <choice name="nexthop-value">
                  <case name="case_1">
                    <leaf-list name="lsp">
                      <ordered-by value="user"/>
                      <description>
                        <text>Next-hop LSP name</text>
                      </description>
                      <type name="string"/>
                    </leaf-list>
                  </case>
                  <case name="case_2">
                    <leaf-list name="lsp-regex">
                      <ordered-by value="user"/>
                      <description>
                        <text>Next-hop LSP name regular expression</text>
                      </description>
                      <type name="string"/>
                    </leaf-list>
                  </case>
                  <case name="case_3">
                    <leaf-list name="static-lsp">
                      <ordered-by value="user"/>
                      <description>
                        <text>Next-hop static LSP name</text>
                      </description>
                      <type name="string"/>
                    </leaf-list>
                  </case>
                  <case name="case_4">
                    <leaf-list name="static-lsp-regex">
                      <ordered-by value="user"/>
                      <description>
                        <text>Next-hop static LSP name regular expression</text>
                      </description>
                      <type name="string"/>
                    </leaf-list>
                  </case>
                  <case name="case_5">
                    <leaf name="non-lsp-nexthop">
                      <description>
                        <text>Next-hop with non-lsp</text>
                      </description>
                      <type name="empty"/>
                    </leaf>
                  </case>
                  <case name="case_6">
                    <leaf name="non-labelled-nexthop">
                      <description>
                        <text>Next-hop without tag</text>
                      </description>
                      <type name="empty"/>
                    </leaf>
                  </case>
                </choice>
              </container>
            </container>
          </container>
          <leaf name="trace">
            <description>
              <text>Log matches to a trace file</text>
            </description>
            <type name="empty"/>
          </leaf>
          <container name="external">
            <presence value="enable external"/>
            <description>
              <text>External route</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="type">
              <description>
                <text>OSPF external metric type</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="int32">
                  <range value="1 .. 2"/>
                </type>
              </type>
            </leaf>
            <leaf name="nssa-only">
              <description>
                <text>Clear P-bit on lsa type 7</text>
              </description>
              <type name="empty"/>
            </leaf>
          </container>
          <container name="load-balance">
            <description>
              <text>Type of load balancing in forwarding table</text>
            </description>
            <choice name="load_balance_type">
              <case name="case_1">
                <leaf name="per-packet">
                  <description>
                    <text>Load balance on a per-packet basis</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_2"/>
              <case name="case_3"/>
              <case name="case_4">
                <leaf name="consistent-hash">
                  <description>
                    <text>Give a prefix consistent load-balancing</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_5"/>
              <case name="case_6"/>
            </choice>
          </container>
          <leaf name="analyze">
            <description>
              <text>Send to registered controllers for analysis</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="class">
            <description>
              <text>Set class-of-service parameters</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="destination-class">
            <description>
              <text>Set destination class in forwarding table</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="source-class">
            <description>
              <text>Set source class in forwarding table</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="forwarding-class">
            <description>
              <text>Set source or destination class in forwarding table</text>
            </description>
            <type name="string"/>
          </leaf>
          <container name="map-to-interface">
            <description>
              <text>Set output logical interface</text>
            </description>
            <choice name="map_to_interface_value">
              <case name="case_1">
                <leaf name="self">
                  <description>
                    <text>Map the interface to itself</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_2">
                <leaf name="interface">
                  <description>
                    <text>Output logical interface</text>
                  </description>
                  <type name="union">
                    <type name="jt:interface-name"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </case>
            </choice>
          </container>
          <leaf-list name="ssm-source">
            <ordered-by value="user"/>
            <description>
              <text>List of Sources for SSM mapping</text>
            </description>
            <type name="jt:ipaddr"/>
          </leaf-list>
          <container name="p2mp-lsp-root">
            <description>
              <text>P2mp lsp root address</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="address">
              <description>
                <text>Ipv4 root address</text>
              </description>
              <type name="jt:ipv4addr"/>
            </leaf>
          </container>
          <leaf name="cos-next-hop-map">
            <description>
              <text>Set CoS-based next-hop map in forwarding table</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="dynamic-tunnel-attributes">
            <description>
              <text>Choose the dynamic tunnel attributes used for forwarding</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="tunnel-end-point-address">
            <description>
              <text>Set tunnel end-point address of tunnel</text>
            </description>
            <type name="jt:ipaddr"/>
          </leaf>
          <leaf name="selected-mldp-egress">
            <description>
              <text>This node should act as egress node for MLDP inband signalling</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="mhop-bfd-port">
            <description>
              <text>Use port number 4784 for MPLS-BFD as per RFC5884</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="no-backup">
            <description>
              <text>This prefix should not have backup</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="default-action">
            <description>
              <text>Set default policy action</text>
            </description>
            <type name="enumeration">
              <enum name="accept">
                <description>
                  <text>Accept a route</text>
                </description>
              </enum>
              <enum name="reject">
                <description>
                  <text>Reject a route</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf name="next">
            <description>
              <text>Skip to next policy or term</text>
            </description>
            <type name="enumeration">
              <enum name="policy">
                <description>
                  <text>Skip to next policy filter</text>
                </description>
              </enum>
              <enum name="term">
                <description>
                  <text>Skip to next term in a policy filter</text>
                </description>
              </enum>
            </type>
          </leaf>
          <choice name="accept_reject">
            <case name="case_1">
              <leaf name="accept">
                <description>
                  <text>Accept a route</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="reject">
                <description>
                  <text>Reject a route</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
          <container name="bgp-output-queue-priority">
            <description>
              <text>Set the BGP Update output queue priority.</text>
            </description>
            <choice name="class">
              <case name="case_1">
                <leaf name="priority">
                  <description>
                    <text>Output queue priority; higher is better</text>
                  </description>
                  <type name="union">
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                    <type name="uint32">
                      <range value="1 .. 16"/>
                    </type>
                  </type>
                </leaf>
              </case>
              <case name="case_2">
                <leaf name="expedited">
                  <description>
                    <text>Expedited queue; highest priority</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
            </choice>
          </container>
          <leaf name="multipath-resolve">
            <description>
              <text>Use all paths for resolution over this prefix</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="source-routing-path-template">
            <description>
              <text>Spring-te template to apply</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="label-allocation-fallback-reject">
            <description>
              <text>Suppress prefix export when label allocation fails</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="resolution-map">
            <description>
              <text>Set resolution map modes</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="ignore-service-label">
            <description>
              <text>Ignore service labels</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="request-long-lived-ack">
            <description>
              <text>Advertise route after forwarding is programmed</text>
            </description>
            <type name="empty"/>
          </leaf>
          <leaf name="send-withdrawal-on-route-change">
            <description>
              <text>Withdraw route if change is not acked from forwarding</text>
            </description>
            <type name="empty"/>
          </leaf>
        </container>
      </list>
      <container name="from">
        <description>
          <text>Conditions to match the source of a route</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="instance">
          <description>
            <text>Routing protocol instance</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="instance-any">
          <description>
            <text>Any routing protocol instance</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf-list name="instance-list">
          <description>
            <text>A list of routing protocol instances</text>
          </description>
          <type name="string"/>
        </leaf-list>
        <leaf-list name="igp-instance">
          <description>
            <text>IGP instance</text>
          </description>
          <type name="string"/>
        </leaf-list>
        <leaf name="family">
          <type name="enumeration">
            <enum name="inet">
              <description>
                <text>IPv4 family</text>
              </description>
            </enum>
            <enum name="inet-vpn">
              <description>
                <text>IPv4-VPN family</text>
              </description>
            </enum>
            <enum name="inet6">
              <description>
                <text>IPv6 family</text>
              </description>
            </enum>
            <enum name="inet6-vpn">
              <description>
                <text>IPv6-VPN family</text>
              </description>
            </enum>
            <enum name="iso-vpn">
              <description>
                <text>ISO-VPN family</text>
              </description>
            </enum>
            <enum name="iso">
              <description>
                <text>ISO family</text>
              </description>
            </enum>
            <enum name="evpn">
              <description>
                <text>EVPN family</text>
              </description>
            </enum>
            <enum name="inet-mvpn">
              <description>
                <text>IPv4 Multicast VPN family</text>
              </description>
            </enum>
            <enum name="inet6-mvpn">
              <description>
                <text>IPv6 Multicast VPN family</text>
              </description>
            </enum>
            <enum name="inet-mdt">
              <description>
                <text>IPv4 MDT Signaling family</text>
              </description>
            </enum>
            <enum name="route-target">
              <description>
                <text>Local route target VPN family</text>
              </description>
            </enum>
            <enum name="traffic-engineering">
              <description>
                <text>Traffic Engineering family</text>
              </description>
            </enum>
            <enum name="inet-srte">
              <description>
                <text>IPv4 srtte family</text>
              </description>
            </enum>
            <enum name="inet6-srte">
              <description>
                <text>IPv6 srte family</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf-list name="protocol">
          <ordered-by value="user"/>
          <description>
            <text>Protocol from which route was learned</text>
          </description>
          <type name="enumeration">
            <enum name="aggregate">
              <description>
                <text>Aggregate routes</text>
              </description>
            </enum>
            <enum name="bgp">
              <description>
                <text>BGP</text>
              </description>
            </enum>
            <enum name="direct">
              <description>
                <text>Directly connected routes</text>
              </description>
            </enum>
            <enum name="dvmrp">
              <description>
                <text>Distance Vector Multicast Routing Protocol</text>
              </description>
            </enum>
            <enum name="isis">
              <description>
                <text>Intermediate System-to-Intermediate System</text>
              </description>
            </enum>
            <enum name="esis">
              <description>
                <text>End System-to-Intermediate System</text>
              </description>
            </enum>
            <enum name="l-isis">
              <description>
                <text>Labelled ISIS</text>
              </description>
            </enum>
            <enum name="l2circuit">
              <description>
                <text>Layer 2 circuits</text>
              </description>
            </enum>
            <enum name="l2vpn">
              <description>
                <text>Layer 2 MPLS virtual private networks</text>
              </description>
            </enum>
            <enum name="local">
              <description>
                <text>Local system addresses</text>
              </description>
            </enum>
            <enum name="ospf">
              <description>
                <text>Open Shortest Path First</text>
              </description>
            </enum>
            <enum name="ospf2">
              <description>
                <text>Open Shortest Path First Version 2</text>
              </description>
            </enum>
            <enum name="ospf3">
              <description>
                <text>Open Shortest Path First Version 3</text>
              </description>
            </enum>
            <enum name="l-ospf">
              <description>
                <text>Labelled OSPF</text>
              </description>
            </enum>
            <enum name="pim">
              <description>
                <text>Protocol Independent Multicast</text>
              </description>
            </enum>
            <enum name="rip">
              <description>
                <text>Routing Information Protocol</text>
              </description>
            </enum>
            <enum name="ripng">
              <description>
                <text>Routing Information Protocol next generation</text>
              </description>
            </enum>
            <enum name="static">
              <description>
                <text>Statically defined addresses</text>
              </description>
            </enum>
            <enum name="arp">
              <description>
                <text>Addresses learned from ARP</text>
              </description>
            </enum>
            <enum name="frr">
              <description>
                <text>Addresses created by Host Fast Re-route</text>
              </description>
            </enum>
            <enum name="mpls">
              <description>
                <text>Multiprotocol Label Switching</text>
              </description>
            </enum>
            <enum name="ldp">
              <description>
                <text>Label Distribution Protocol</text>
              </description>
            </enum>
            <enum name="rsvp">
              <description>
                <text>Resource Reservation Protocol</text>
              </description>
            </enum>
            <enum name="msdp">
              <description>
                <text>Multicast Source Discovery Protocol</text>
              </description>
            </enum>
            <enum name="route-target">
              <description>
                <text>Local route target VPN membership</text>
              </description>
            </enum>
            <enum name="access">
              <description>
                <text>Access server routes</text>
              </description>
            </enum>
            <enum name="access-internal">
              <description>
                <text>Internal routes to directly connected clients</text>
              </description>
            </enum>
            <enum name="anchor">
              <description>
                <text>Anchor routes connected to UEs</text>
              </description>
            </enum>
            <enum name="bgp-static">
              <description>
                <text>BGP static routes</text>
              </description>
            </enum>
            <enum name="vpls">
              <description>
                <text>Virtual Private LAN Service</text>
              </description>
            </enum>
            <enum name="evpn">
              <description>
                <text>Ethernet VPN Service</text>
              </description>
            </enum>
            <enum name="spring-te">
              <description>
                <text>SPRING Traffic-Engineered</text>
              </description>
            </enum>
            <enum name="bgp-ls-epe">
              <description>
                <text>Addresses created by BGP-LS egress TE</text>
              </description>
            </enum>
            <enum name="express-segments">
              <description>
                <text>Express-segment routes</text>
              </description>
            </enum>
            <enum name="rift">
              <description>
                <text>RIFT routes</text>
              </description>
            </enum>
            <enum name="l2-learned-host-routing">
              <description>
                <text>Layer2-learned host routes</text>
              </description>
            </enum>
            <enum name="srv6-isis">
              <description>
                <text>SRV6 ISIS</text>
              </description>
            </enum>
          </type>
        </leaf-list>
        <leaf name="rib">
          <description>
            <text>Routing table</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf-list name="neighbor">
          <ordered-by value="user"/>
          <description>
            <text>Neighboring router</text>
          </description>
          <type name="jt:ipaddr"/>
        </leaf-list>
        <leaf-list name="next-hop">
          <ordered-by value="user"/>
          <description>
            <text>Next-hop router</text>
          </description>
          <type name="jt:ipaddr"/>
        </leaf-list>
        <leaf-list name="interface">
          <ordered-by value="user"/>
          <description>
            <text>Interface name or address</text>
          </description>
          <type name="union">
            <type name="jt:ipaddr-or-interface"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf-list>
        <leaf name="area">
          <description>
            <text>OSPF area identifier</text>
          </description>
          <type name="jt:areaid"/>
        </leaf>
        <leaf-list name="as-path">
          <ordered-by value="user"/>
          <description>
            <text>Name of AS path regular expression (BGP only)</text>
          </description>
          <type name="string"/>
        </leaf-list>
        <leaf-list name="as-path-group">
          <ordered-by value="user"/>
          <description>
            <text>Name of AS path group (BGP only)</text>
          </description>
          <type name="string"/>
        </leaf-list>
        <leaf name="origin">
          <description>
            <text>BGP origin attribute</text>
          </description>
          <type name="enumeration">
            <enum name="igp">
              <description>
                <text>Path originated in the local IGP</text>
              </description>
            </enum>
            <enum name="egp">
              <description>
                <text>Path originated in another AS</text>
              </description>
            </enum>
            <enum name="incomplete">
              <description>
                <text>Path was learned by some other means</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf-list name="community">
          <ordered-by value="user"/>
          <description>
            <text>BGP community</text>
          </description>
          <type name="string"/>
        </leaf-list>
        <leaf name="level">
          <description>
            <text>IS-IS level</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <container name="external">
          <presence value="enable external"/>
          <description>
            <text>External route</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="type">
            <description>
              <text>OSPF external metric type</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="int32">
                <range value="1 .. 2"/>
              </type>
            </type>
          </leaf>
        </container>
        <leaf name="bgp-srte-discriminator">
          <description>
            <text>Srte discriminator</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf name="srte-color">
          <description>
            <text>Srte color</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf name="programmed">
          <description>
            <text>API-programmed route</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="validation-database">
          <description>
            <text>Name to identify a validation-state</text>
          </description>
          <type name="enumeration">
            <enum name="valid">
              <description>
                <text>Match for valid database validation-state</text>
              </description>
            </enum>
            <enum name="invalid">
              <description>
                <text>Match for invalid database validation-state</text>
              </description>
            </enum>
            <enum name="unknown">
              <description>
                <text>Match for unknown database validation-state</text>
              </description>
            </enum>
          </type>
        </leaf>
        <list name="nexthop-weight">
          <key value="choice-ident choice-value weight"/>
          <ordered-by value="user"/>
          <description>
            <text>Weight of the gateway</text>
          </description>
          <leaf name="choice-ident">
            <type name="enumeration">
              <enum name="equal"/>
              <enum name="greater-than"/>
              <enum name="less-than"/>
              <enum name="greater-than-equal"/>
              <enum name="less-than-equal"/>
              <enum name="weight"/>
              <enum name="apply-advanced"/>
              <enum name="weight_type"/>
              <enum name="all-nexthop"/>
            </type>
          </leaf>
          <leaf name="choice-value">
            <type name="string"/>
          </leaf>
          <leaf name="weight">
            <description>
              <text>Weight of the gateway</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="1 .. 65535"/>
              </type>
            </type>
          </leaf>
          <uses name="apply-advanced"/>
          <choice name="weight_type">
            <case name="case_1">
              <leaf name="all-nexthop">
                <description>
                  <text>All the gateway weight should be matched</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
        </list>
        <leaf name="metric">
          <description>
            <text>Metric value</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf name="metric2">
          <description>
            <text>Metric value 2</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf name="metric3">
          <description>
            <text>Metric value 3</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf name="metric4">
          <description>
            <text>Metric value 4</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf-list name="tag">
          <ordered-by value="user"/>
          <description>
            <text>Tag string</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf-list>
        <leaf name="tag2">
          <description>
            <text>Tag string 2</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf name="preference">
          <description>
            <text>Preference value</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf name="preference2">
          <description>
            <text>Preference value 2</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf name="color">
          <description>
            <text>Color (preference) value</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf name="color2">
          <description>
            <text>Color (preference) value 2</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf name="local-preference">
          <description>
            <text>Local preference associated with a route</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf-list name="policy">
          <ordered-by value="user"/>
          <description>
            <text>Name of policy to evaluate</text>
          </description>
          <type name="jt:policy-algebra"/>
        </leaf-list>
        <choice name="lsp-name-type">
          <case name="case_1">
            <leaf name="lsp">
              <description>
                <text>Label switched path name</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="lsp-regex">
              <description>
                <text>Label switched path name regular expression</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
        </choice>
        <container name="source-routing-path">
          <presence value="enable source-routing-path"/>
          <description>
            <text>Spring-te lsp policy attributes</text>
          </description>
          <leaf name="name-regex">
            <description>
              <text>Spring-te lsp name regex</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="dest">
            <description>
              <text>Spring-te lsp IPV4/IPV6 destination without color</text>
            </description>
            <type name="jt:ipaddr"/>
          </leaf>
          <leaf name="origin">
            <description>
              <text>Spring-te lsp origin address</text>
            </description>
            <type name="jt:ipaddr"/>
          </leaf>
          <leaf name="tunnel-source">
            <description>
              <text>Spring-te lsp source protocol</text>
            </description>
            <type name="enumeration">
              <enum name="pcep">
                <description>
                  <text>Spring-te lsp src pcep</text>
                </description>
              </enum>
              <enum name="bgp">
                <description>
                  <text>Spring-te lsp src bgp</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf name="route-distinguisher">
            <description>
              <text>Spring-te lsp route distinguisher</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="color">
            <description>
              <text>Spring-te lsp color</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </container>
        <list name="route-filter">
          <key value="address choice-ident choice-value"/>
          <ordered-by value="user"/>
          <description>
            <text>List of routes to match</text>
          </description>
          <uses name="control_route_filter_type"/>
        </list>
        <list name="source-address-filter">
          <key value="address choice-ident choice-value"/>
          <ordered-by value="user"/>
          <description>
            <text>List of source addresses to match</text>
          </description>
          <uses name="control_source_address_filter_type"/>
        </list>
        <list name="prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>List of prefix-lists of routes to match</text>
          </description>
          <uses name="control_prefix_list_type"/>
        </list>
        <list name="as-path-neighbors">
          <key value="list-type list-name"/>
          <ordered-by value="user"/>
          <description>
            <text>List of peer AS to match</text>
          </description>
          <uses name="control_as_list_type"/>
        </list>
        <list name="as-path-origins">
          <key value="list-type list-name"/>
          <ordered-by value="user"/>
          <description>
            <text>List of originating AS to match</text>
          </description>
          <uses name="control_as_list_type"/>
        </list>
        <list name="as-path-transits">
          <key value="list-type list-name"/>
          <ordered-by value="user"/>
          <description>
            <text>List of originating AS to match</text>
          </description>
          <uses name="control_as_list_type"/>
        </list>
        <list name="prefix-list-filter">
          <key value="list_name choice-ident choice-value"/>
          <ordered-by value="user"/>
          <description>
            <text>List of prefix-list-filters to match</text>
          </description>
          <uses name="control_prefix_list_filter_type"/>
        </list>
        <list name="rtf-prefix-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>List of rtf-prefix-lists of routes to match</text>
          </description>
          <uses name="control_rtf_prefix_list_type"/>
        </list>
        <list name="route-filter-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>List of route-filter-lists of routes to match</text>
          </description>
          <uses name="control_route_filter_list_type"/>
        </list>
        <list name="source-address-filter-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>List of source-address-filter-lists of routes to match</text>
          </description>
          <uses name="control_source_address_filter_list_type"/>
        </list>
        <container name="multicast-scope">
          <description>
            <text>Multicast scope to match</text>
          </description>
          <choice name="scope-choice">
            <case name="case_1">
              <leaf name="node-local">
                <description>
                  <text>Node-local scope</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="link-local">
                <description>
                  <text>Link-local scope</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_3">
              <leaf name="site-local">
                <description>
                  <text>Site-local scope</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_4">
              <leaf name="organization-local">
                <description>
                  <text>Organization-local scope</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_5">
              <leaf name="global">
                <description>
                  <text>Global scope</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_6">
              <leaf name="scope_value">
                <description>
                  <text>Scope value</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="0 .. 15"/>
                  </type>
                </type>
              </leaf>
            </case>
          </choice>
          <choice name="scope-operator">
            <case name="case_1">
              <leaf name="orhigher">
                <description>
                  <text>Match higher values</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="orlower">
                <description>
                  <text>Match lower values</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
        </container>
        <leaf name="aggregate-contributor">
          <description>
            <text>Match more specifics of an aggregate</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="state">
          <description>
            <text>Route state</text>
          </description>
          <type name="enumeration">
            <enum name="active">
              <description>
                <text>Active route</text>
              </description>
            </enum>
            <enum name="inactive">
              <description>
                <text>Inactive route</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf-list name="tunnel-type">
          <ordered-by value="user"/>
          <description>
            <text>Tunnel type</text>
          </description>
          <type name="enumeration">
            <enum name="gre">
              <description>
                <text>GRE tunnel</text>
              </description>
            </enum>
            <enum name="udp">
              <description>
                <text>UDP tunnel</text>
              </description>
            </enum>
            <enum name="ipip">
              <description>
                <text>IPIP tunnel</text>
              </description>
            </enum>
          </type>
        </leaf-list>
        <leaf name="route-type">
          <description>
            <text>Route type</text>
          </description>
          <type name="enumeration">
            <enum name="internal">
              <description>
                <text>Internal route</text>
              </description>
            </enum>
            <enum name="external">
              <description>
                <text>External route</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf-list name="nlri-route-type">
          <ordered-by value="user"/>
          <description>
            <text>Route type from NLRI</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 10"/>
            </type>
          </type>
        </leaf-list>
        <leaf-list name="evpn-tag">
          <ordered-by value="user"/>
          <description>
            <text>Tag in EVPN Route</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="0 .. 4294967295"/>
            </type>
          </type>
        </leaf-list>
        <leaf-list name="evpn-esi">
          <ordered-by value="user"/>
          <description>
            <text>ESI in EVPN Route</text>
          </description>
          <type name="string"/>
        </leaf-list>
        <list name="mac-filter-list">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>List of mac-filter-list macs to match</text>
          </description>
          <uses name="control_mac_address_filter_list_type"/>
        </list>
        <leaf name="evpn-mac-route">
          <description>
            <text>EVPN Mac Route type</text>
          </description>
          <type name="enumeration">
            <enum name="mac-only">
              <description>
                <text>MAC route</text>
              </description>
            </enum>
            <enum name="mac-ipv4">
              <description>
                <text>MAC IPV4 route</text>
              </description>
            </enum>
            <enum name="mac-ipv6">
              <description>
                <text>MAC IPV6 route</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="next-hop-type">
          <description>
            <text>Next-hop type</text>
          </description>
          <type name="enumeration">
            <enum name="merged">
              <description>
                <text>Merged next hop</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf-list name="condition">
          <ordered-by value="user"/>
          <description>
            <text>Condition to match on</text>
          </description>
          <type name="string"/>
        </leaf-list>
        <list name="community-count">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Number of BGP communities</text>
          </description>
          <uses name="community_count_type"/>
        </list>
        <list name="as-path-unique-count">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Number of unique BGP ASes excluding confederations</text>
          </description>
          <uses name="as-path-unique-count-type"/>
        </list>
        <list name="as-path-calc-length">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Number of BGP ASes excluding confederations</text>
          </description>
          <uses name="as-path-calc-length-type"/>
        </list>
        <container name="traffic-engineering">
          <presence value="enable traffic-engineering"/>
          <description>
            <text>Traffic-Engineering related parameters</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf-list name="protocol">
            <ordered-by value="user"/>
            <description>
              <text>Protocol that originated the entry</text>
            </description>
            <type name="enumeration">
              <enum name="direct">
                <description>
                  <text>Directly originated</text>
                </description>
              </enum>
              <enum name="ospf">
                <description>
                  <text>OSPF originated</text>
                </description>
              </enum>
              <enum name="isis-level-1">
                <description>
                  <text>ISIS level-1 originated</text>
                </description>
              </enum>
              <enum name="isis-level-2">
                <description>
                  <text>ISIS level-2 originated</text>
                </description>
              </enum>
              <enum name="static">
                <description>
                  <text>Statically originated</text>
                </description>
              </enum>
              <enum name="unknown">
                <description>
                  <text>Originated by unknown sources</text>
                </description>
              </enum>
            </type>
          </leaf-list>
          <container name="node">
            <presence value="enable node"/>
            <description>
              <text>Node-related parameters</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="as">
              <description>
                <text>AS number</text>
              </description>
              <type name="string"/>
            </leaf>
            <leaf name="node-type">
              <description>
                <text>Real or pseudo-node</text>
              </description>
              <type name="enumeration">
                <enum name="router">
                  <description>
                    <text>Real node</text>
                  </description>
                </enum>
                <enum name="pseudo-node">
                  <description>
                    <text>Pseudo-node</text>
                  </description>
                </enum>
              </type>
            </leaf>
            <leaf name="router-id">
              <description>
                <text>IP prefix to match the router-id against</text>
              </description>
              <type name="jt:ipprefix"/>
            </leaf>
            <leaf name="sys-id">
              <description>
                <text>ISO address of the node</text>
              </description>
              <type name="jt:sysid"/>
            </leaf>
          </container>
          <container name="ipv4-prefix">
            <presence value="enable ipv4-prefix"/>
            <description>
              <text>IPV4 prefix-related parameters</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="as">
              <description>
                <text>AS number</text>
              </description>
              <type name="string"/>
            </leaf>
            <leaf name="router-id">
              <description>
                <text>IP prefix to match the router-id against</text>
              </description>
              <type name="jt:ipprefix"/>
            </leaf>
            <leaf name="prefix">
              <description>
                <text>IP prefix to match against</text>
              </description>
              <type name="jt:ipprefix"/>
            </leaf>
            <leaf name="sys-id">
              <description>
                <text>ISO address of the node</text>
              </description>
              <type name="jt:sysid"/>
            </leaf>
          </container>
          <container name="ipv6-prefix">
            <presence value="enable ipv6-prefix"/>
            <description>
              <text>IPV6 prefix related parameters</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="as">
              <description>
                <text>AS number</text>
              </description>
              <type name="string"/>
            </leaf>
            <leaf name="router-id">
              <description>
                <text>IPv6 prefix to match the router-id against</text>
              </description>
              <type name="jt:ipprefix"/>
            </leaf>
            <leaf name="prefix">
              <description>
                <text>IPv6 prefix to match against</text>
              </description>
              <type name="jt:ipv6prefix"/>
            </leaf>
            <leaf name="sys-id">
              <description>
                <text>ISO address of the node</text>
              </description>
              <type name="jt:sysid"/>
            </leaf>
          </container>
          <container name="srv6-sid">
            <presence value="enable srv6-sid"/>
            <description>
              <text>SRV6 SID related parameters</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="as">
              <description>
                <text>AS number</text>
              </description>
              <type name="string"/>
            </leaf>
            <leaf name="router-id">
              <description>
                <text>SRv6 SID to match the router-id against</text>
              </description>
              <type name="jt:ipprefix"/>
            </leaf>
            <leaf name="sid">
              <description>
                <text>SRv6 SID to match against</text>
              </description>
              <type name="jt:ipv6addr"/>
            </leaf>
            <leaf name="sys-id">
              <description>
                <text>ISO address of the node</text>
              </description>
              <type name="jt:sysid"/>
            </leaf>
          </container>
          <container name="link">
            <presence value="enable link"/>
            <description>
              <text>Link-related parameters</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="from">
              <description>
                <text>Specify parameter of the 'from' side</text>
              </description>
              <uses name="apply-advanced"/>
              <leaf name="as">
                <description>
                  <text>AS number</text>
                </description>
                <type name="string"/>
              </leaf>
              <leaf name="router-id">
                <description>
                  <text>IP prefix to match the router-id against</text>
                </description>
                <type name="jt:ipprefix"/>
              </leaf>
              <leaf name="sys-id">
                <description>
                  <text>System-ID of the node</text>
                </description>
                <type name="jt:sysid"/>
              </leaf>
              <leaf name="node-type">
                <description>
                  <text>Type of the node</text>
                </description>
                <type name="enumeration">
                  <enum name="router">
                    <description>
                      <text>Real node</text>
                    </description>
                  </enum>
                  <enum name="pseudo-node">
                    <description>
                      <text>Pseudo-node</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="link-address">
                <description>
                  <text>IP prefix to match the link address against</text>
                </description>
                <type name="jt:ipprefix"/>
              </leaf>
            </container>
            <container name="to">
              <description>
                <text>Specify parameters of the 'to' side</text>
              </description>
              <uses name="apply-advanced"/>
              <leaf name="as">
                <description>
                  <text>AS number</text>
                </description>
                <type name="string"/>
              </leaf>
              <leaf name="router-id">
                <description>
                  <text>IP prefix to match the router-id against</text>
                </description>
                <type name="jt:ipprefix"/>
              </leaf>
              <leaf name="sys-id">
                <description>
                  <text>System-ID of the node</text>
                </description>
                <type name="jt:sysid"/>
              </leaf>
              <leaf name="node-type">
                <description>
                  <text>Type of the node</text>
                </description>
                <type name="enumeration">
                  <enum name="router">
                    <description>
                      <text>Real node</text>
                    </description>
                  </enum>
                  <enum name="pseudo-node">
                    <description>
                      <text>Pseudo-node</text>
                    </description>
                  </enum>
                </type>
              </leaf>
              <leaf name="link-address">
                <description>
                  <text>IP prefix to match the link address against</text>
                </description>
                <type name="jt:ipprefix"/>
              </leaf>
            </container>
          </container>
        </container>
        <leaf-list name="route-distinguisher">
          <ordered-by value="user"/>
          <description>
            <text>Name of the route-distinguisher</text>
          </description>
          <type name="string"/>
        </leaf-list>
      </container>
      <container name="to">
        <description>
          <text>Conditions to match the destination of a route</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="instance">
          <description>
            <text>Routing protocol instance</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="instance-any">
          <description>
            <text>Any routing protocol instance</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf-list name="instance-list">
          <description>
            <text>A list of routing protocol instances</text>
          </description>
          <type name="string"/>
        </leaf-list>
        <leaf-list name="igp-instance">
          <description>
            <text>IGP instance</text>
          </description>
          <type name="string"/>
        </leaf-list>
        <leaf name="family">
          <type name="enumeration">
            <enum name="inet">
              <description>
                <text>IPv4 family</text>
              </description>
            </enum>
            <enum name="inet-vpn">
              <description>
                <text>IPv4-VPN family</text>
              </description>
            </enum>
            <enum name="inet6">
              <description>
                <text>IPv6 family</text>
              </description>
            </enum>
            <enum name="inet6-vpn">
              <description>
                <text>IPv6-VPN family</text>
              </description>
            </enum>
            <enum name="iso-vpn">
              <description>
                <text>ISO-VPN family</text>
              </description>
            </enum>
            <enum name="iso">
              <description>
                <text>ISO family</text>
              </description>
            </enum>
            <enum name="evpn">
              <description>
                <text>EVPN family</text>
              </description>
            </enum>
            <enum name="inet-mvpn">
              <description>
                <text>IPv4 Multicast VPN family</text>
              </description>
            </enum>
            <enum name="inet6-mvpn">
              <description>
                <text>IPv6 Multicast VPN family</text>
              </description>
            </enum>
            <enum name="inet-mdt">
              <description>
                <text>IPv4 MDT Signaling family</text>
              </description>
            </enum>
            <enum name="route-target">
              <description>
                <text>Local route target VPN family</text>
              </description>
            </enum>
            <enum name="traffic-engineering">
              <description>
                <text>Traffic Engineering family</text>
              </description>
            </enum>
            <enum name="inet-srte">
              <description>
                <text>IPv4 srtte family</text>
              </description>
            </enum>
            <enum name="inet6-srte">
              <description>
                <text>IPv6 srte family</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf-list name="protocol">
          <ordered-by value="user"/>
          <description>
            <text>Protocol from which route was learned</text>
          </description>
          <type name="enumeration">
            <enum name="aggregate">
              <description>
                <text>Aggregate routes</text>
              </description>
            </enum>
            <enum name="bgp">
              <description>
                <text>BGP</text>
              </description>
            </enum>
            <enum name="direct">
              <description>
                <text>Directly connected routes</text>
              </description>
            </enum>
            <enum name="dvmrp">
              <description>
                <text>Distance Vector Multicast Routing Protocol</text>
              </description>
            </enum>
            <enum name="isis">
              <description>
                <text>Intermediate System-to-Intermediate System</text>
              </description>
            </enum>
            <enum name="esis">
              <description>
                <text>End System-to-Intermediate System</text>
              </description>
            </enum>
            <enum name="l-isis">
              <description>
                <text>Labelled ISIS</text>
              </description>
            </enum>
            <enum name="l2circuit">
              <description>
                <text>Layer 2 circuits</text>
              </description>
            </enum>
            <enum name="l2vpn">
              <description>
                <text>Layer 2 MPLS virtual private networks</text>
              </description>
            </enum>
            <enum name="local">
              <description>
                <text>Local system addresses</text>
              </description>
            </enum>
            <enum name="ospf">
              <description>
                <text>Open Shortest Path First</text>
              </description>
            </enum>
            <enum name="ospf2">
              <description>
                <text>Open Shortest Path First Version 2</text>
              </description>
            </enum>
            <enum name="ospf3">
              <description>
                <text>Open Shortest Path First Version 3</text>
              </description>
            </enum>
            <enum name="l-ospf">
              <description>
                <text>Labelled OSPF</text>
              </description>
            </enum>
            <enum name="pim">
              <description>
                <text>Protocol Independent Multicast</text>
              </description>
            </enum>
            <enum name="rip">
              <description>
                <text>Routing Information Protocol</text>
              </description>
            </enum>
            <enum name="ripng">
              <description>
                <text>Routing Information Protocol next generation</text>
              </description>
            </enum>
            <enum name="static">
              <description>
                <text>Statically defined addresses</text>
              </description>
            </enum>
            <enum name="arp">
              <description>
                <text>Addresses learned from ARP</text>
              </description>
            </enum>
            <enum name="frr">
              <description>
                <text>Addresses created by Host Fast Re-route</text>
              </description>
            </enum>
            <enum name="mpls">
              <description>
                <text>Multiprotocol Label Switching</text>
              </description>
            </enum>
            <enum name="ldp">
              <description>
                <text>Label Distribution Protocol</text>
              </description>
            </enum>
            <enum name="rsvp">
              <description>
                <text>Resource Reservation Protocol</text>
              </description>
            </enum>
            <enum name="msdp">
              <description>
                <text>Multicast Source Discovery Protocol</text>
              </description>
            </enum>
            <enum name="route-target">
              <description>
                <text>Local route target VPN membership</text>
              </description>
            </enum>
            <enum name="access">
              <description>
                <text>Access server routes</text>
              </description>
            </enum>
            <enum name="access-internal">
              <description>
                <text>Internal routes to directly connected clients</text>
              </description>
            </enum>
            <enum name="anchor">
              <description>
                <text>Anchor routes connected to UEs</text>
              </description>
            </enum>
            <enum name="bgp-static">
              <description>
                <text>BGP static routes</text>
              </description>
            </enum>
            <enum name="vpls">
              <description>
                <text>Virtual Private LAN Service</text>
              </description>
            </enum>
            <enum name="evpn">
              <description>
                <text>Ethernet VPN Service</text>
              </description>
            </enum>
            <enum name="spring-te">
              <description>
                <text>SPRING Traffic-Engineered</text>
              </description>
            </enum>
            <enum name="bgp-ls-epe">
              <description>
                <text>Addresses created by BGP-LS egress TE</text>
              </description>
            </enum>
            <enum name="express-segments">
              <description>
                <text>Express-segment routes</text>
              </description>
            </enum>
            <enum name="rift">
              <description>
                <text>RIFT routes</text>
              </description>
            </enum>
            <enum name="l2-learned-host-routing">
              <description>
                <text>Layer2-learned host routes</text>
              </description>
            </enum>
            <enum name="srv6-isis">
              <description>
                <text>SRV6 ISIS</text>
              </description>
            </enum>
          </type>
        </leaf-list>
        <leaf name="rib">
          <description>
            <text>Routing table</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf-list name="neighbor">
          <ordered-by value="user"/>
          <description>
            <text>Neighboring router</text>
          </description>
          <type name="jt:ipaddr"/>
        </leaf-list>
        <leaf-list name="next-hop">
          <ordered-by value="user"/>
          <description>
            <text>Next-hop router</text>
          </description>
          <type name="jt:ipaddr"/>
        </leaf-list>
        <leaf-list name="interface">
          <ordered-by value="user"/>
          <description>
            <text>Interface name or address</text>
          </description>
          <type name="union">
            <type name="jt:ipaddr-or-interface"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf-list>
        <leaf name="area">
          <description>
            <text>OSPF area identifier</text>
          </description>
          <type name="jt:areaid"/>
        </leaf>
        <leaf-list name="as-path">
          <ordered-by value="user"/>
          <description>
            <text>Name of AS path regular expression (BGP only)</text>
          </description>
          <type name="string"/>
        </leaf-list>
        <leaf-list name="as-path-group">
          <ordered-by value="user"/>
          <description>
            <text>Name of AS path group (BGP only)</text>
          </description>
          <type name="string"/>
        </leaf-list>
        <leaf name="origin">
          <description>
            <text>BGP origin attribute</text>
          </description>
          <type name="enumeration">
            <enum name="igp">
              <description>
                <text>Path originated in the local IGP</text>
              </description>
            </enum>
            <enum name="egp">
              <description>
                <text>Path originated in another AS</text>
              </description>
            </enum>
            <enum name="incomplete">
              <description>
                <text>Path was learned by some other means</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf-list name="community">
          <ordered-by value="user"/>
          <description>
            <text>BGP community</text>
          </description>
          <type name="string"/>
        </leaf-list>
        <leaf name="level">
          <description>
            <text>IS-IS level</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <container name="external">
          <presence value="enable external"/>
          <description>
            <text>External route</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="type">
            <description>
              <text>OSPF external metric type</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="int32">
                <range value="1 .. 2"/>
              </type>
            </type>
          </leaf>
        </container>
        <leaf name="bgp-srte-discriminator">
          <description>
            <text>Srte discriminator</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf name="srte-color">
          <description>
            <text>Srte color</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf name="programmed">
          <description>
            <text>API-programmed route</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="validation-database">
          <description>
            <text>Name to identify a validation-state</text>
          </description>
          <type name="enumeration">
            <enum name="valid">
              <description>
                <text>Match for valid database validation-state</text>
              </description>
            </enum>
            <enum name="invalid">
              <description>
                <text>Match for invalid database validation-state</text>
              </description>
            </enum>
            <enum name="unknown">
              <description>
                <text>Match for unknown database validation-state</text>
              </description>
            </enum>
          </type>
        </leaf>
        <list name="nexthop-weight">
          <key value="choice-ident choice-value weight"/>
          <ordered-by value="user"/>
          <description>
            <text>Weight of the gateway</text>
          </description>
          <leaf name="choice-ident">
            <type name="enumeration">
              <enum name="equal"/>
              <enum name="greater-than"/>
              <enum name="less-than"/>
              <enum name="greater-than-equal"/>
              <enum name="less-than-equal"/>
              <enum name="weight"/>
              <enum name="apply-advanced"/>
              <enum name="weight_type"/>
              <enum name="all-nexthop"/>
            </type>
          </leaf>
          <leaf name="choice-value">
            <type name="string"/>
          </leaf>
          <leaf name="weight">
            <description>
              <text>Weight of the gateway</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="1 .. 65535"/>
              </type>
            </type>
          </leaf>
          <uses name="apply-advanced"/>
          <choice name="weight_type">
            <case name="case_1">
              <leaf name="all-nexthop">
                <description>
                  <text>All the gateway weight should be matched</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
        </list>
        <leaf name="metric">
          <description>
            <text>Metric value</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf name="metric2">
          <description>
            <text>Metric value 2</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf name="metric3">
          <description>
            <text>Metric value 3</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf name="metric4">
          <description>
            <text>Metric value 4</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf-list name="tag">
          <ordered-by value="user"/>
          <description>
            <text>Tag string</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf-list>
        <leaf name="tag2">
          <description>
            <text>Tag string 2</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf name="preference">
          <description>
            <text>Preference value</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf name="preference2">
          <description>
            <text>Preference value 2</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf name="color">
          <description>
            <text>Color (preference) value</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf name="color2">
          <description>
            <text>Color (preference) value 2</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf name="local-preference">
          <description>
            <text>Local preference associated with a route</text>
          </description>
          <type name="union">
            <type name="uint32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <leaf-list name="policy">
          <ordered-by value="user"/>
          <description>
            <text>Name of policy to evaluate</text>
          </description>
          <type name="jt:policy-algebra"/>
        </leaf-list>
        <choice name="lsp-name-type">
          <case name="case_1">
            <leaf name="lsp">
              <description>
                <text>Label switched path name</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="lsp-regex">
              <description>
                <text>Label switched path name regular expression</text>
              </description>
              <type name="string"/>
            </leaf>
          </case>
        </choice>
        <container name="source-routing-path">
          <presence value="enable source-routing-path"/>
          <description>
            <text>Spring-te lsp policy attributes</text>
          </description>
          <leaf name="name-regex">
            <description>
              <text>Spring-te lsp name regex</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="dest">
            <description>
              <text>Spring-te lsp IPV4/IPV6 destination without color</text>
            </description>
            <type name="jt:ipaddr"/>
          </leaf>
          <leaf name="origin">
            <description>
              <text>Spring-te lsp origin address</text>
            </description>
            <type name="jt:ipaddr"/>
          </leaf>
          <leaf name="tunnel-source">
            <description>
              <text>Spring-te lsp source protocol</text>
            </description>
            <type name="enumeration">
              <enum name="pcep">
                <description>
                  <text>Spring-te lsp src pcep</text>
                </description>
              </enum>
              <enum name="bgp">
                <description>
                  <text>Spring-te lsp src bgp</text>
                </description>
              </enum>
            </type>
          </leaf>
          <leaf name="route-distinguisher">
            <description>
              <text>Spring-te lsp route distinguisher</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <leaf name="color">
            <description>
              <text>Spring-te lsp color</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </container>
      </container>
      <container name="then">
        <description>
          <text>Actions to take if 'from' and 'to' conditions match</text>
        </description>
        <uses name="apply-advanced"/>
        <container name="metric">
          <description>
            <text>Metric value</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="metric_action">
            <case name="case_1">
              <leaf name="metric">
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="add">
                <description>
                  <text>Add constant to attribute</text>
                </description>
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
            <case name="case_3">
              <leaf name="subtract">
                <description>
                  <text>Subtract constant from attribute</text>
                </description>
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
            <case name="case_4">
              <container name="igp">
                <presence value="enable igp"/>
                <description>
                  <text>Track the IGP metric (BGP only)</text>
                </description>
                <leaf name="metric_offset">
                  <description>
                    <text>Metric offset for MED</text>
                  </description>
                  <type name="union">
                    <type name="int32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </container>
            </case>
            <case name="case_5">
              <container name="minimum-igp">
                <presence value="enable minimum-igp"/>
                <description>
                  <text>Track the minimum IGP metric (BGP only)</text>
                </description>
                <leaf name="metric_offset">
                  <description>
                    <text>Metric offset for MED</text>
                  </description>
                  <type name="union">
                    <type name="int32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </container>
            </case>
            <case name="case_6">
              <container name="expression">
                <description>
                  <text>Calculate value based on route metric and metric2</text>
                </description>
                <uses name="metric_expression_type"/>
              </container>
            </case>
            <case name="case_7">
              <leaf name="aigp">
                <description>
                  <text>Use aigp, if it exists, to set the IGP metric</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_8">
              <container name="effective-aigp">
                <presence value="enable effective-aigp"/>
                <description>
                  <text>Track the effective AIGP metric (BGP only)</text>
                </description>
                <leaf name="metric_offset">
                  <description>
                    <text>Metric offset for MED</text>
                  </description>
                  <type name="union">
                    <type name="int32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </container>
            </case>
            <case name="case_9">
              <container name="minimum-effective-aigp">
                <presence value="enable minimum-effective-aigp"/>
                <description>
                  <text>Track the minimum effective AIGP metric (BGP only)</text>
                </description>
                <leaf name="metric_offset">
                  <description>
                    <text>Metric offset for MED</text>
                  </description>
                  <type name="union">
                    <type name="int32"/>
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                  </type>
                </leaf>
              </container>
            </case>
          </choice>
        </container>
        <container name="metric2">
          <description>
            <text>Metric value 2</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="metric_action">
            <case name="case_1">
              <leaf name="metric2">
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="add">
                <description>
                  <text>Add constant to attribute</text>
                </description>
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
            <case name="case_3">
              <leaf name="subtract">
                <description>
                  <text>Subtract constant from attribute</text>
                </description>
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
          </choice>
        </container>
        <container name="metric3">
          <description>
            <text>Metric value 3</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="metric_action">
            <case name="case_1">
              <leaf name="metric3">
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="add">
                <description>
                  <text>Add constant to attribute</text>
                </description>
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
            <case name="case_3">
              <leaf name="subtract">
                <description>
                  <text>Subtract constant from attribute</text>
                </description>
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
          </choice>
        </container>
        <container name="metric4">
          <description>
            <text>Metric value 4</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="metric_action">
            <case name="case_1">
              <leaf name="metric4">
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="add">
                <description>
                  <text>Add constant to attribute</text>
                </description>
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
            <case name="case_3">
              <leaf name="subtract">
                <description>
                  <text>Subtract constant from attribute</text>
                </description>
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
          </choice>
        </container>
        <container name="tag">
          <description>
            <text>Tag string</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="metric_action">
            <case name="case_1">
              <leaf name="tag">
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="add">
                <description>
                  <text>Add constant to attribute</text>
                </description>
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
            <case name="case_3">
              <leaf name="subtract">
                <description>
                  <text>Subtract constant from attribute</text>
                </description>
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
          </choice>
        </container>
        <container name="tag2">
          <description>
            <text>Tag string 2</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="metric_action">
            <case name="case_1">
              <leaf name="tag2">
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="add">
                <description>
                  <text>Add constant to attribute</text>
                </description>
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
            <case name="case_3">
              <leaf name="subtract">
                <description>
                  <text>Subtract constant from attribute</text>
                </description>
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
          </choice>
        </container>
        <container name="preference">
          <description>
            <text>Preference value</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="metric_action">
            <case name="case_1">
              <leaf name="preference">
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="add">
                <description>
                  <text>Add constant to attribute</text>
                </description>
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
            <case name="case_3">
              <leaf name="subtract">
                <description>
                  <text>Subtract constant from attribute</text>
                </description>
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
          </choice>
        </container>
        <container name="preference2">
          <description>
            <text>Preference value 2</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="metric_action">
            <case name="case_1">
              <leaf name="preference2">
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="add">
                <description>
                  <text>Add constant to attribute</text>
                </description>
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
            <case name="case_3">
              <leaf name="subtract">
                <description>
                  <text>Subtract constant from attribute</text>
                </description>
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
          </choice>
        </container>
        <container name="color">
          <description>
            <text>Color (preference) value</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="metric_action">
            <case name="case_1">
              <leaf name="color">
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="add">
                <description>
                  <text>Add constant to attribute</text>
                </description>
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
            <case name="case_3">
              <leaf name="subtract">
                <description>
                  <text>Subtract constant from attribute</text>
                </description>
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
          </choice>
        </container>
        <container name="color2">
          <description>
            <text>Color (preference) value 2</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="metric_action">
            <case name="case_1">
              <leaf name="color2">
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="add">
                <description>
                  <text>Add constant to attribute</text>
                </description>
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
            <case name="case_3">
              <leaf name="subtract">
                <description>
                  <text>Subtract constant from attribute</text>
                </description>
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
          </choice>
        </container>
        <container name="local-preference">
          <description>
            <text>Local preference associated with a route</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="metric_action">
            <case name="case_1">
              <leaf name="local-preference">
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="add">
                <description>
                  <text>Add constant to attribute</text>
                </description>
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
            <case name="case_3">
              <leaf name="subtract">
                <description>
                  <text>Subtract constant from attribute</text>
                </description>
                <type name="union">
                  <type name="uint32"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
          </choice>
        </container>
        <leaf name="priority">
          <description>
            <text>Set priority for route installation</text>
          </description>
          <type name="enumeration">
            <enum name="high">
              <description>
                <text>Set priority to high</text>
              </description>
            </enum>
            <enum name="medium">
              <description>
                <text>Set priority to medium</text>
              </description>
            </enum>
            <enum name="low">
              <description>
                <text>Set priority to low</text>
              </description>
            </enum>
          </type>
        </leaf>
        <container name="prefix-segment">
          <description>
            <text>Set prefix segment attributes</text>
          </description>
          <uses name="apply-advanced"/>
          <list name="algorithm">
            <key value="name"/>
            <description>
              <text>Set prefix segment attributes for strict/flex algorithm </text>
            </description>
            <max-elements value="15"/>
            <leaf name="name">
              <description>
                <text>Set prefix segment for strict/flex algorithm</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 255"/>
                </type>
              </type>
            </leaf>
            <leaf name="index">
              <description>
                <text>Set prefix segment index id</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="0 .. 199999"/>
                </type>
              </type>
            </leaf>
            <leaf name="node-segment">
              <description>
                <text>Set node segment flag for this prefix segment</text>
              </description>
              <type name="empty"/>
            </leaf>
          </list>
          <leaf name="index">
            <description>
              <text>Set prefix segment index id</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="0 .. 199999"/>
              </type>
            </type>
          </leaf>
          <leaf name="node-segment">
            <description>
              <text>Set node segment flag for default prefix segment</text>
            </description>
            <type name="empty"/>
          </leaf>
        </container>
        <leaf name="label-allocation">
          <description>
            <text>Set label allocation mode</text>
          </description>
          <type name="enumeration">
            <enum name="per-table">
              <description>
                <text>Set per-table label allocation mode</text>
              </description>
            </enum>
            <enum name="per-nexthop">
              <description>
                <text>Set per-nexthop label allocation mode</text>
              </description>
            </enum>
            <enum name="per-table-localize">
              <description>
                <text>Set per-table-localize label allocation mode</text>
              </description>
            </enum>
          </type>
        </leaf>
        <container name="add-path">
          <description>
            <text>Set BGP add-path attributes</text>
          </description>
          <leaf name="send-count">
            <description>
              <text>Number of add-paths sent</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="2 .. 64"/>
              </type>
            </type>
          </leaf>
        </container>
        <leaf name="validation-state">
          <description>
            <text>Set validation-state of a route</text>
          </description>
          <type name="enumeration">
            <enum name="valid">
              <description>
                <text>Set validaton-state to valid</text>
              </description>
            </enum>
            <enum name="invalid">
              <description>
                <text>Set validation-state to invalid</text>
              </description>
            </enum>
            <enum name="unknown">
              <description>
                <text>Set validation-state to unknown</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="origin">
          <description>
            <text>BGP path origin</text>
          </description>
          <type name="enumeration">
            <enum name="igp">
              <description>
                <text>Path originated in the local IGP</text>
              </description>
            </enum>
            <enum name="egp">
              <description>
                <text>Path originated in another AS</text>
              </description>
            </enum>
            <enum name="incomplete">
              <description>
                <text>Path was learned by some other means</text>
              </description>
            </enum>
          </type>
        </leaf>
        <container name="aigp-originate">
          <presence value="enable aigp-originate"/>
          <description>
            <text>Originate a BGP AIGP attribute</text>
          </description>
          <leaf name="distance">
            <description>
              <text>AIGP distance</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </container>
        <container name="aigp-adjust">
          <description>
            <text>Adjust a BGP AIGP attribute</text>
          </description>
          <choice name="math-op">
            <case name="case_1">
              <leaf name="add">
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="subtract">
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_3">
              <leaf name="multiply">
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_4">
              <leaf name="divide">
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
          <choice name="adjust-value">
            <case name="case_1">
              <leaf name="user-value">
                <description>
                  <text>Adjustment value</text>
                </description>
                <type name="union">
                  <type name="uint64"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="distance-to-protocol-nexthop">
                <description>
                  <text>Metric2</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
        </container>
        <list name="community">
          <key value="choice-ident choice-value community-name"/>
          <ordered-by value="user"/>
          <description>
            <text>BGP community properties associated with a route</text>
          </description>
          <leaf name="choice-ident">
            <type name="enumeration">
              <enum name="equal-literal"/>
              <enum name="set"/>
              <enum name="plus-literal"/>
              <enum name="add"/>
              <enum name="minus-literal"/>
              <enum name="delete"/>
              <enum name="community-name"/>
            </type>
          </leaf>
          <leaf name="choice-value">
            <type name="string"/>
          </leaf>
          <leaf name="community-name">
            <description>
              <text>Name to identify a BGP community</text>
            </description>
            <type name="string"/>
          </leaf>
        </list>
        <list name="tunnel-attribute">
          <key value="choice-ident choice-value tunnel-attribute-name"/>
          <ordered-by value="user"/>
          <description>
            <text>BGP tunnel attribute associated with a route</text>
          </description>
          <leaf name="choice-ident">
            <type name="enumeration">
              <enum name="set"/>
              <enum name="remove"/>
              <enum name="tunnel-attribute-name"/>
            </type>
          </leaf>
          <leaf name="choice-value">
            <type name="string"/>
          </leaf>
          <leaf name="tunnel-attribute-name">
            <description>
              <text>Name of a tunnel attribute , or 'all'</text>
            </description>
            <type name="string"/>
          </leaf>
        </list>
        <leaf name="damping">
          <description>
            <text>Define BGP route flap damping parameters</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="aggregate-bandwidth">
          <description>
            <text>Advertise aggregate outbound link bandwidth</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="limit-bandwidth">
          <description>
            <text>Limit advertised aggregate outbound link bandwidth</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="0 .. 4294967295"/>
            </type>
          </type>
        </leaf>
        <leaf name="no-entropy-label-capability">
          <description>
            <text>Don't advertise entropy label capability</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="as-path-prepend">
          <description>
            <text>Prepend AS numbers to an AS path (BGP only)</text>
          </description>
          <type name="string"/>
        </leaf>
        <container name="as-path-expand">
          <description>
            <text>Prepend AS numbers prior to adding local-as (BGP only)</text>
          </description>
          <choice name="aspath_exp_value">
            <case name="case_1">
              <container name="last-as">
                <presence value="enable last-as"/>
                <description>
                  <text>Prepend last AS</text>
                </description>
                <leaf name="count">
                  <description>
                    <text>Repeat count</text>
                  </description>
                  <type name="union">
                    <type name="string">
                      <pattern value="&lt;.*&gt;|$.*"/>
                    </type>
                    <type name="uint32">
                      <range value="1 .. 32"/>
                    </type>
                  </type>
                </leaf>
              </container>
            </case>
            <case name="case_2">
              <leaf name="aspath">
                <description>
                  <text>AS path string</text>
                </description>
                <type name="string"/>
              </leaf>
            </case>
          </choice>
        </container>
        <container name="next-hop">
          <description>
            <text>Set the address of the next-hop router</text>
          </description>
          <choice name="nexthop_value">
            <case name="case_1">
              <leaf name="self">
                <description>
                  <text>Use a local address as the next-hop address</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="peer-address">
                <description>
                  <text>Use the remote peer address as the next-hop address</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_3">
              <leaf name="address">
                <description>
                  <text>Next-hop address</text>
                </description>
                <type name="jt:ipaddr"/>
              </leaf>
            </case>
            <case name="case_4">
              <leaf name="reject">
                <description>
                  <text>Use a reject next hop</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_5">
              <leaf name="discard">
                <description>
                  <text>Use a discard next hop</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_6">
              <leaf name="next-table">
                <description>
                  <text>Perform a forwarding lookup in the specified table</text>
                </description>
                <type name="string"/>
              </leaf>
            </case>
          </choice>
        </container>
        <container name="install-nexthop">
          <description>
            <text>Choose the next hop to be used for forwarding</text>
          </description>
          <choice name="strict_type">
            <case name="case_1">
              <leaf name="strict">
                <description>
                  <text>Do not use any other available next hops</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="strict-named-lsp">
                <description>
                  <text>Do not use any other non-lsp next hops</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
          <choice name="nexthop-value">
            <case name="case_1">
              <leaf-list name="lsp">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop LSP name</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_2">
              <leaf-list name="lsp-regex">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop LSP name regular expression</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_3">
              <leaf-list name="static-lsp">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop static LSP name</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_4">
              <leaf-list name="static-lsp-regex">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop static LSP name regular expression</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_5">
              <leaf name="non-lsp-nexthop">
                <description>
                  <text>Next-hop with non-lsp</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_6">
              <leaf name="non-labelled-nexthop">
                <description>
                  <text>Next-hop without tag</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
          <container name="except">
            <description>
              <text>Do not choose to install matching next hops</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="nexthop-value">
              <case name="case_1">
                <leaf-list name="lsp">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop LSP name</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_2">
                <leaf-list name="lsp-regex">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop LSP name regular expression</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_3">
                <leaf-list name="static-lsp">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop static LSP name</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_4">
                <leaf-list name="static-lsp-regex">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop static LSP name regular expression</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_5">
                <leaf name="non-lsp-nexthop">
                  <description>
                    <text>Next-hop with non-lsp</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_6">
                <leaf name="non-labelled-nexthop">
                  <description>
                    <text>Next-hop without tag</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
            </choice>
            <container name="fallback">
              <description>
                <text>Backup option</text>
              </description>
              <uses name="apply-advanced"/>
              <choice name="nexthop-value">
                <case name="case_1">
                  <leaf-list name="lsp">
                    <ordered-by value="user"/>
                    <description>
                      <text>Next-hop LSP name</text>
                    </description>
                    <type name="string"/>
                  </leaf-list>
                </case>
                <case name="case_2">
                  <leaf-list name="lsp-regex">
                    <ordered-by value="user"/>
                    <description>
                      <text>Next-hop LSP name regular expression</text>
                    </description>
                    <type name="string"/>
                  </leaf-list>
                </case>
                <case name="case_3">
                  <leaf-list name="static-lsp">
                    <ordered-by value="user"/>
                    <description>
                      <text>Next-hop static LSP name</text>
                    </description>
                    <type name="string"/>
                  </leaf-list>
                </case>
                <case name="case_4">
                  <leaf-list name="static-lsp-regex">
                    <ordered-by value="user"/>
                    <description>
                      <text>Next-hop static LSP name regular expression</text>
                    </description>
                    <type name="string"/>
                  </leaf-list>
                </case>
                <case name="case_5">
                  <leaf name="non-lsp-nexthop">
                    <description>
                      <text>Next-hop with non-lsp</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_6">
                  <leaf name="non-labelled-nexthop">
                    <description>
                      <text>Next-hop without tag</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
              </choice>
              <container name="except">
                <description>
                  <text>Do not choose to install matching next hops</text>
                </description>
                <uses name="apply-advanced"/>
                <choice name="nexthop-value">
                  <case name="case_1">
                    <leaf-list name="lsp">
                      <ordered-by value="user"/>
                      <description>
                        <text>Next-hop LSP name</text>
                      </description>
                      <type name="string"/>
                    </leaf-list>
                  </case>
                  <case name="case_2">
                    <leaf-list name="lsp-regex">
                      <ordered-by value="user"/>
                      <description>
                        <text>Next-hop LSP name regular expression</text>
                      </description>
                      <type name="string"/>
                    </leaf-list>
                  </case>
                  <case name="case_3">
                    <leaf-list name="static-lsp">
                      <ordered-by value="user"/>
                      <description>
                        <text>Next-hop static LSP name</text>
                      </description>
                      <type name="string"/>
                    </leaf-list>
                  </case>
                  <case name="case_4">
                    <leaf-list name="static-lsp-regex">
                      <ordered-by value="user"/>
                      <description>
                        <text>Next-hop static LSP name regular expression</text>
                      </description>
                      <type name="string"/>
                    </leaf-list>
                  </case>
                  <case name="case_5">
                    <leaf name="non-lsp-nexthop">
                      <description>
                        <text>Next-hop with non-lsp</text>
                      </description>
                      <type name="empty"/>
                    </leaf>
                  </case>
                  <case name="case_6">
                    <leaf name="non-labelled-nexthop">
                      <description>
                        <text>Next-hop without tag</text>
                      </description>
                      <type name="empty"/>
                    </leaf>
                  </case>
                </choice>
              </container>
            </container>
          </container>
          <container name="fallback">
            <description>
              <text>Backup option </text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="nexthop-value">
              <case name="case_1">
                <leaf-list name="lsp">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop LSP name</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_2">
                <leaf-list name="lsp-regex">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop LSP name regular expression</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_3">
                <leaf-list name="static-lsp">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop static LSP name</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_4">
                <leaf-list name="static-lsp-regex">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop static LSP name regular expression</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_5">
                <leaf name="non-lsp-nexthop">
                  <description>
                    <text>Next-hop with non-lsp</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_6">
                <leaf name="non-labelled-nexthop">
                  <description>
                    <text>Next-hop without tag</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
            </choice>
            <container name="except">
              <description>
                <text>Do not choose to install matching next hops</text>
              </description>
              <uses name="apply-advanced"/>
              <choice name="nexthop-value">
                <case name="case_1">
                  <leaf-list name="lsp">
                    <ordered-by value="user"/>
                    <description>
                      <text>Next-hop LSP name</text>
                    </description>
                    <type name="string"/>
                  </leaf-list>
                </case>
                <case name="case_2">
                  <leaf-list name="lsp-regex">
                    <ordered-by value="user"/>
                    <description>
                      <text>Next-hop LSP name regular expression</text>
                    </description>
                    <type name="string"/>
                  </leaf-list>
                </case>
                <case name="case_3">
                  <leaf-list name="static-lsp">
                    <ordered-by value="user"/>
                    <description>
                      <text>Next-hop static LSP name</text>
                    </description>
                    <type name="string"/>
                  </leaf-list>
                </case>
                <case name="case_4">
                  <leaf-list name="static-lsp-regex">
                    <ordered-by value="user"/>
                    <description>
                      <text>Next-hop static LSP name regular expression</text>
                    </description>
                    <type name="string"/>
                  </leaf-list>
                </case>
                <case name="case_5">
                  <leaf name="non-lsp-nexthop">
                    <description>
                      <text>Next-hop with non-lsp</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
                <case name="case_6">
                  <leaf name="non-labelled-nexthop">
                    <description>
                      <text>Next-hop without tag</text>
                    </description>
                    <type name="empty"/>
                  </leaf>
                </case>
              </choice>
            </container>
          </container>
        </container>
        <leaf name="trace">
          <description>
            <text>Log matches to a trace file</text>
          </description>
          <type name="empty"/>
        </leaf>
        <container name="external">
          <presence value="enable external"/>
          <description>
            <text>External route</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="type">
            <description>
              <text>OSPF external metric type</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="int32">
                <range value="1 .. 2"/>
              </type>
            </type>
          </leaf>
          <leaf name="nssa-only">
            <description>
              <text>Clear P-bit on lsa type 7</text>
            </description>
            <type name="empty"/>
          </leaf>
        </container>
        <container name="load-balance">
          <description>
            <text>Type of load balancing in forwarding table</text>
          </description>
          <choice name="load_balance_type">
            <case name="case_1">
              <leaf name="per-packet">
                <description>
                  <text>Load balance on a per-packet basis</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_2"/>
            <case name="case_3"/>
            <case name="case_4">
              <leaf name="consistent-hash">
                <description>
                  <text>Give a prefix consistent load-balancing</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_5"/>
            <case name="case_6"/>
          </choice>
        </container>
        <leaf name="analyze">
          <description>
            <text>Send to registered controllers for analysis</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="class">
          <description>
            <text>Set class-of-service parameters</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="destination-class">
          <description>
            <text>Set destination class in forwarding table</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="source-class">
          <description>
            <text>Set source class in forwarding table</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="forwarding-class">
          <description>
            <text>Set source or destination class in forwarding table</text>
          </description>
          <type name="string"/>
        </leaf>
        <container name="map-to-interface">
          <description>
            <text>Set output logical interface</text>
          </description>
          <choice name="map_to_interface_value">
            <case name="case_1">
              <leaf name="self">
                <description>
                  <text>Map the interface to itself</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="interface">
                <description>
                  <text>Output logical interface</text>
                </description>
                <type name="union">
                  <type name="jt:interface-name"/>
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                </type>
              </leaf>
            </case>
          </choice>
        </container>
        <leaf-list name="ssm-source">
          <ordered-by value="user"/>
          <description>
            <text>List of Sources for SSM mapping</text>
          </description>
          <type name="jt:ipaddr"/>
        </leaf-list>
        <container name="p2mp-lsp-root">
          <description>
            <text>P2mp lsp root address</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf name="address">
            <description>
              <text>Ipv4 root address</text>
            </description>
            <type name="jt:ipv4addr"/>
          </leaf>
        </container>
        <leaf name="cos-next-hop-map">
          <description>
            <text>Set CoS-based next-hop map in forwarding table</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="dynamic-tunnel-attributes">
          <description>
            <text>Choose the dynamic tunnel attributes used for forwarding</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="tunnel-end-point-address">
          <description>
            <text>Set tunnel end-point address of tunnel</text>
          </description>
          <type name="jt:ipaddr"/>
        </leaf>
        <leaf name="selected-mldp-egress">
          <description>
            <text>This node should act as egress node for MLDP inband signalling</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="mhop-bfd-port">
          <description>
            <text>Use port number 4784 for MPLS-BFD as per RFC5884</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="no-backup">
          <description>
            <text>This prefix should not have backup</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="default-action">
          <description>
            <text>Set default policy action</text>
          </description>
          <type name="enumeration">
            <enum name="accept">
              <description>
                <text>Accept a route</text>
              </description>
            </enum>
            <enum name="reject">
              <description>
                <text>Reject a route</text>
              </description>
            </enum>
          </type>
        </leaf>
        <leaf name="next">
          <description>
            <text>Skip to next policy or term</text>
          </description>
          <type name="enumeration">
            <enum name="policy">
              <description>
                <text>Skip to next policy filter</text>
              </description>
            </enum>
            <enum name="term">
              <description>
                <text>Skip to next term in a policy filter</text>
              </description>
            </enum>
          </type>
        </leaf>
        <choice name="accept_reject">
          <case name="case_1">
            <leaf name="accept">
              <description>
                <text>Accept a route</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_2">
            <leaf name="reject">
              <description>
                <text>Reject a route</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
        <container name="bgp-output-queue-priority">
          <description>
            <text>Set the BGP Update output queue priority.</text>
          </description>
          <choice name="class">
            <case name="case_1">
              <leaf name="priority">
                <description>
                  <text>Output queue priority; higher is better</text>
                </description>
                <type name="union">
                  <type name="string">
                    <pattern value="&lt;.*&gt;|$.*"/>
                  </type>
                  <type name="uint32">
                    <range value="1 .. 16"/>
                  </type>
                </type>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="expedited">
                <description>
                  <text>Expedited queue; highest priority</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
        </container>
        <leaf name="multipath-resolve">
          <description>
            <text>Use all paths for resolution over this prefix</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="source-routing-path-template">
          <description>
            <text>Spring-te template to apply</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="label-allocation-fallback-reject">
          <description>
            <text>Suppress prefix export when label allocation fails</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="resolution-map">
          <description>
            <text>Set resolution map modes</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="ignore-service-label">
          <description>
            <text>Ignore service labels</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="request-long-lived-ack">
          <description>
            <text>Advertise route after forwarding is programmed</text>
          </description>
          <type name="empty"/>
        </leaf>
        <leaf name="send-withdrawal-on-route-change">
          <description>
            <text>Withdraw route if change is not acked from forwarding</text>
          </description>
          <type name="empty"/>
        </leaf>
      </container>
    </list>
    <container name="defaults">
      <description>
        <text>Policy default behaviour</text>
      </description>
      <uses name="apply-advanced"/>
      <container name="route-filter">
        <description>
          <text>Set route filter behaviour</text>
        </description>
        <leaf name="walkup">
          <description>
            <text>Route filter walk up enable</text>
          </description>
          <type name="empty"/>
        </leaf>
      </container>
    </container>
    <list name="tunnel-attribute">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>BGP tunnel attributes definition</text>
      </description>
      <leaf name="name">
        <description>
          <text>Tunnel attribute name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf name="tunnel-type">
        <description>
          <text>Tunnel type</text>
        </description>
        <type name="enumeration">
          <enum name="ipip">
            <description>
              <text>Tunnel type IP-IN-IP</text>
            </description>
          </enum>
        </type>
      </leaf>
      <leaf name="tunnel-color">
        <description>
          <text>Tunnel color</text>
        </description>
        <type name="union">
          <type name="uint32"/>
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
        </type>
      </leaf>
      <leaf name="remote-end-point">
        <description>
          <text>Tunnel remote end point</text>
        </description>
        <type name="jt:ipaddr"/>
      </leaf>
    </list>
    <list name="community">
      <key value="name"/>
      <description>
        <text>BGP community information</text>
      </description>
      <leaf name="name">
        <description>
          <text>Name to identify BGP community</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf name="invert-match">
        <description>
          <text>Invert the result of the community expression matching</text>
        </description>
        <type name="empty"/>
      </leaf>
      <leaf-list name="members">
        <ordered-by value="user"/>
        <description>
          <text>Community members</text>
        </description>
        <type name="string"/>
      </leaf-list>
    </list>
    <list name="as-list">
      <key value="name"/>
      <description>
        <text>BGP as range list information</text>
      </description>
      <leaf name="name">
        <description>
          <text>Name to identify BGP as-list</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf-list name="members">
        <ordered-by value="user"/>
        <description>
          <text>Single autonomous system number or range of autonomous system numbers in plain number</text>
        </description>
        <type name="string"/>
      </leaf-list>
    </list>
    <list name="as-list-group">
      <key value="name"/>
      <description>
        <text>Group a set of as-list</text>
      </description>
      <leaf name="name">
        <description>
          <text>Name to identify AS list group</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <list name="as-list">
        <key value="name"/>
        <description>
          <text>BGP as range list information</text>
        </description>
        <leaf name="name">
          <description>
            <text>Name to identify BGP as-list</text>
          </description>
          <type name="string"/>
        </leaf>
        <uses name="apply-advanced"/>
        <leaf-list name="members">
          <ordered-by value="user"/>
          <description>
            <text>Single autonomous system number or range of autonomous system numbers</text>
          </description>
          <type name="string"/>
        </leaf-list>
      </list>
    </list>
    <list name="route-distinguisher">
      <key value="name"/>
      <description>
        <text>Route-distinguisher information</text>
      </description>
      <leaf name="name">
        <description>
          <text>Name to identify route-distinguisher</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf-list name="members">
        <ordered-by value="user"/>
        <description>
          <text>Route distinguisher string in ( *:X ) or ( Y:* ) or (X:Y) format</text>
        </description>
        <type name="string"/>
      </leaf-list>
    </list>
    <list name="as-path">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>BGP autonomous system path regular expression</text>
      </description>
      <leaf name="name">
        <description>
          <text>Name to identify AS path regular expression</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf name="path">
        <description>
          <text>AS path regular expression</text>
        </description>
        <type name="string"/>
      </leaf>
    </list>
    <list name="as-path-group">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Group a set of AS paths</text>
      </description>
      <leaf name="name">
        <description>
          <text>Name to identify AS path group</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <list name="as-path">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>BGP autonomous system path regular expression</text>
        </description>
        <leaf name="name">
          <description>
            <text>Name to identify AS path regular expression</text>
          </description>
          <type name="string"/>
        </leaf>
        <leaf name="path">
          <description>
            <text>AS path regular expression</text>
          </description>
          <type name="string"/>
        </leaf>
      </list>
    </list>
    <list name="damping">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>BGP route flap damping properties</text>
      </description>
      <leaf name="name">
        <description>
          <text>Name to identify route flap damping parameters</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <choice name="enable-disable">
        <case name="case_1">
          <leaf name="disable">
            <description>
              <text>Disable damping</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
      <leaf name="half-life">
        <description>
          <text>Decay half-life</text>
        </description>
        <units name="minutes"/>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="1 .. 45"/>
          </type>
        </type>
      </leaf>
      <leaf name="reuse">
        <description>
          <text>Reuse threshold (figure-of-merit value)</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="1 .. 20000"/>
          </type>
        </type>
      </leaf>
      <leaf name="suppress">
        <description>
          <text>Cutoff threshold (figure-of-merit value)</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="1 .. 20000"/>
          </type>
        </type>
      </leaf>
      <leaf name="max-suppress">
        <description>
          <text>Maximum hold-down time</text>
        </description>
        <units name="minutes"/>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="1 .. 720"/>
          </type>
        </type>
      </leaf>
    </list>
    <list name="condition">
      <key value="name"/>
      <description>
        <text>Define a route advertisement condition</text>
      </description>
      <leaf name="name">
        <description>
          <text>Name to identify Condition</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <choice name="condition_type">
        <case name="case_1">
          <leaf name="route-active-on">
            <description>
              <text>Route is active on a specific node</text>
            </description>
            <type name="enumeration">
              <enum name="node0">
                <description>
                  <text>Route active on node 0</text>
                </description>
              </enum>
              <enum name="node1">
                <description>
                  <text>Route active on node 1</text>
                </description>
              </enum>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <container name="if-route-exists">
            <presence value="enable if-route-exists"/>
            <description>
              <text>Route exists in a specific routing table</text>
            </description>
            <uses name="apply-advanced"/>
            <container name="address-family">
              <presence value="enable address-family"/>
              <description>
                <text>Indicates the address family of the route to match on</text>
              </description>
              <uses name="apply-advanced"/>
              <choice name="address-family">
                <case name="case_1">
                  <container name="inet">
                    <presence value="enable inet"/>
                    <description>
                      <text>Route to match corresponds to an inet/inet6 prefix</text>
                    </description>
                    <uses name="apply-advanced"/>
                    <leaf name="address">
                      <description>
                        <text>Exact address of the route</text>
                      </description>
                      <type name="jt:ipprefix"/>
                    </leaf>
                    <leaf name="table">
                      <description>
                        <text>Routing table in which route should exist</text>
                      </description>
                      <type name="string"/>
                    </leaf>
                  </container>
                </case>
                <case name="case_2">
                  <container name="ccc">
                    <presence value="enable ccc"/>
                    <description>
                      <text>Route to match corresponds to a ccc prefix</text>
                    </description>
                    <uses name="apply-advanced"/>
                    <leaf name="address">
                      <description>
                        <text>Logical interface used to establish ccc route</text>
                      </description>
                      <type name="union">
                        <type name="jt:interface-name"/>
                        <type name="string">
                          <pattern value="&lt;.*&gt;|$.*"/>
                        </type>
                      </type>
                    </leaf>
                    <leaf name="table">
                      <description>
                        <text>Routing table in which route should exist</text>
                      </description>
                      <type name="string"/>
                    </leaf>
                    <leaf name="standby">
                      <description>
                        <text>Indicates if route must be in standby state to be considered a match</text>
                      </description>
                      <type name="empty"/>
                    </leaf>
                    <leaf name="peer-unit">
                      <description>
                        <text>Associated LT ifl's peer-unit. Required for LT-based routes</text>
                      </description>
                      <type name="union">
                        <type name="string">
                          <pattern value="&lt;.*&gt;|$.*"/>
                        </type>
                        <type name="uint32">
                          <range value="0 .. 8192"/>
                        </type>
                      </type>
                    </leaf>
                  </container>
                </case>
              </choice>
            </container>
            <leaf name="address">
              <description>
                <text>Exact address of the route</text>
              </description>
              <type name="jt:ipprefix"/>
            </leaf>
            <leaf name="table">
              <description>
                <text>Routing table in which route should exist</text>
              </description>
              <type name="string"/>
            </leaf>
          </container>
        </case>
      </choice>
    </list>
    <list name="rtf-prefix-list">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Define a named set of family route target prefixes</text>
      </description>
      <leaf name="name">
        <description>
          <text>RTF prefix list name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <list name="prefix-list">
        <key value="name"/>
        <uses name="rtf_prefix_list_items"/>
      </list>
    </list>
    <list name="resolution-map">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Define a set of PNH resolution modes</text>
      </description>
      <leaf name="name">
        <description>
          <text>Resolution Map name</text>
        </description>
        <type name="string"/>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf-list name="mode">
        <ordered-by value="user"/>
        <description>
          <text>List of resolution modes in order that defines fallback mechanism</text>
        </description>
        <type name="enumeration">
          <enum name="ip-color">
            <description>
              <text>Colored-IP PNH Resolution Mode</text>
            </description>
          </enum>
          <enum name="color-only">
            <description>
              <text>Color-only PNH Resolution Mode</text>
            </description>
          </enum>
        </type>
      </leaf-list>
    </list>
    <list name="application-maps">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Define application maps</text>
      </description>
      <uses name="application_map_object"/>
    </list>
    <list name="redundancy-policy">
      <key value="name"/>
      <leaf name="name">
        <description>
          <text>Redundancy policy name</text>
        </description>
        <type name="string">
          <length value="1 .. 63"/>
        </type>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf-list name="redundancy-events">
        <description>
          <text>Events related services redundancy under event-options</text>
        </description>
        <type name="string"/>
      </leaf-list>
      <container name="then">
        <description>
          <text>Action to take when of the event occurs</text>
        </description>
        <presence value="enable then"/>
        <uses name="srd-ev-action-object"/>
      </container>
    </list>
  </grouping>
  <grouping name="application_map_object">
    <leaf name="name">
      <description>
        <text>Name of application map</text>
      </description>
      <type name="string">
        <length value="1 .. 63"/>
      </type>
    </leaf>
    <uses name="apply-advanced"/>
    <list name="application">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Name of the application</text>
      </description>
      <leaf name="name">
        <description>
          <text>Name of the application</text>
        </description>
        <type name="string">
          <length value="1 .. 63"/>
        </type>
      </leaf>
      <leaf-list name="code-points">
        <ordered-by value="user"/>
        <description>
          <text>List of code point bit strings</text>
        </description>
        <type name="string"/>
      </leaf-list>
    </list>
  </grouping>
  <grouping name="apply-advanced">
    <description>
      <text>Apply advanced configuration logic</text>
    </description>
    <leaf-list name="apply-groups">
      <ordered-by value="user"/>
      <description>
        <text>Groups from which to inherit configuration data</text>
      </description>
      <type name="string"/>
    </leaf-list>
    <leaf-list name="apply-groups-except">
      <ordered-by value="user"/>
      <description>
        <text>Don't inherit configuration data from these groups</text>
      </description>
      <type name="string"/>
    </leaf-list>
    <list name="apply-macro">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Macro and parameters for commit script expansion</text>
      </description>
      <uses name="apply-macro-type"/>
    </list>
  </grouping>
  <grouping name="apply-macro-type">
    <description>
      <text>Macro data for commit-script expansion</text>
    </description>
    <leaf name="name">
      <description>
        <text>Name of the macro to be expanded</text>
      </description>
      <type name="string"/>
    </leaf>
    <list name="data">
      <key value="name"/>
      <uses name="macro-data-type"/>
    </list>
  </grouping>
  <grouping name="as-path-calc-length-type">
    <description>
      <text>Calculated BGP AS_PATH length per BGP rules</text>
    </description>
    <leaf name="name">
      <description>
        <text>Number of ASes</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="0 .. 1024"/>
        </type>
      </type>
    </leaf>
    <choice name="count-operator">
      <case name="case_1">
        <leaf name="equal">
          <description>
            <text>Match equal values</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
      <case name="case_2">
        <leaf name="orhigher">
          <description>
            <text>Match higher or equal values</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
      <case name="case_3">
        <leaf name="orlower">
          <description>
            <text>Match lower or equal values</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
    </choice>
  </grouping>
  <grouping name="as-path-unique-count-type">
    <description>
      <text>Number of unique BGP ASes excluding confederation ASes</text>
    </description>
    <leaf name="name">
      <description>
        <text>Number of ASes</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="0 .. 1024"/>
        </type>
      </type>
    </leaf>
    <choice name="count-operator">
      <case name="case_1">
        <leaf name="equal">
          <description>
            <text>Match equal values</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
      <case name="case_2">
        <leaf name="orhigher">
          <description>
            <text>Match higher or equal values</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
      <case name="case_3">
        <leaf name="orlower">
          <description>
            <text>Match lower or equal values</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
    </choice>
  </grouping>
  <grouping name="community_count_type">
    <description>
      <text>Number of BGP communities</text>
    </description>
    <leaf name="name">
      <description>
        <text>Number of communities</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="0 .. 1024"/>
        </type>
      </type>
    </leaf>
    <choice name="count-operator">
      <case name="case_1">
        <leaf name="equal">
          <description>
            <text>Match equal values</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
      <case name="case_2">
        <leaf name="orhigher">
          <description>
            <text>Match higher or equal	values</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
      <case name="case_3">
        <leaf name="orlower">
          <description>
            <text>Match lower or equal values</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
    </choice>
  </grouping>
  <grouping name="control_as_list_type">
    <leaf name="list-type">
      <description>
        <text>Type as-list or as-list-group</text>
      </description>
      <type name="enumeration">
        <enum name="as-list">
          <description>
            <text> Type as-list</text>
          </description>
        </enum>
        <enum name="as-list-group">
          <description>
            <text>Type as-list-group</text>
          </description>
        </enum>
      </type>
    </leaf>
    <leaf name="list-name">
      <description>
        <text>Name of as-list or as-list-group</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
  </grouping>
  <grouping name="control_mac_address_filter_list_type">
    <leaf name="name">
      <description>
        <text>Name of mac-filter-list of macs to match</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
  </grouping>
  <grouping name="control_prefix_list_filter_type">
    <leaf name="list_name">
      <description>
        <text>Name of prefix-list of routes to match</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="choice-ident">
      <type name="enumeration">
        <enum name="exact"/>
        <enum name="longer"/>
        <enum name="orlonger"/>
        <enum name="apply-advanced"/>
        <enum name="metric"/>
        <enum name="metric2"/>
        <enum name="metric3"/>
        <enum name="metric4"/>
        <enum name="tag"/>
        <enum name="tag2"/>
        <enum name="preference"/>
        <enum name="preference2"/>
        <enum name="color"/>
        <enum name="color2"/>
        <enum name="local-preference"/>
        <enum name="priority"/>
        <enum name="prefix-segment"/>
        <enum name="label-allocation"/>
        <enum name="add-path"/>
        <enum name="validation-state"/>
        <enum name="origin"/>
        <enum name="aigp-originate"/>
        <enum name="aigp-adjust"/>
        <enum name="community"/>
        <enum name="tunnel-attribute"/>
        <enum name="damping"/>
        <enum name="aggregate-bandwidth"/>
        <enum name="limit-bandwidth"/>
        <enum name="no-entropy-label-capability"/>
        <enum name="as-path-prepend"/>
        <enum name="as-path-expand"/>
        <enum name="next-hop"/>
        <enum name="install-nexthop"/>
        <enum name="trace"/>
        <enum name="external"/>
        <enum name="load-balance"/>
        <enum name="no-route-localize"/>
        <enum name="install-to-fib"/>
        <enum name="analyze"/>
        <enum name="class"/>
        <enum name="destination-class"/>
        <enum name="source-class"/>
        <enum name="forwarding-class"/>
        <enum name="map-to-interface"/>
        <enum name="ssm-source"/>
        <enum name="p2mp-lsp-root"/>
        <enum name="cos-next-hop-map"/>
        <enum name="dynamic-tunnel-attributes"/>
        <enum name="tunnel-end-point-address"/>
        <enum name="selected-mldp-egress"/>
        <enum name="mhop-bfd-port"/>
        <enum name="no-backup"/>
        <enum name="default-action"/>
        <enum name="next"/>
        <enum name="accept_reject"/>
        <enum name="bgp-output-queue-priority"/>
        <enum name="multipath-resolve"/>
        <enum name="source-routing-path-template"/>
        <enum name="label-allocation-fallback-reject"/>
        <enum name="resolution-map"/>
        <enum name="ignore-service-label"/>
        <enum name="request-long-lived-ack"/>
        <enum name="send-withdrawal-on-route-change"/>
      </type>
    </leaf>
    <leaf name="choice-value">
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <container name="metric">
      <description>
        <text>Metric value</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="metric">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_4">
          <container name="igp">
            <presence value="enable igp"/>
            <description>
              <text>Track the IGP metric (BGP only)</text>
            </description>
            <leaf name="metric_offset">
              <description>
                <text>Metric offset for MED</text>
              </description>
              <type name="union">
                <type name="int32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
        <case name="case_5">
          <container name="minimum-igp">
            <presence value="enable minimum-igp"/>
            <description>
              <text>Track the minimum IGP metric (BGP only)</text>
            </description>
            <leaf name="metric_offset">
              <description>
                <text>Metric offset for MED</text>
              </description>
              <type name="union">
                <type name="int32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
        <case name="case_6">
          <container name="expression">
            <description>
              <text>Calculate value based on route metric and metric2</text>
            </description>
            <uses name="metric_expression_type"/>
          </container>
        </case>
        <case name="case_7">
          <leaf name="aigp">
            <description>
              <text>Use aigp, if it exists, to set the IGP metric</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_8">
          <container name="effective-aigp">
            <presence value="enable effective-aigp"/>
            <description>
              <text>Track the effective AIGP metric (BGP only)</text>
            </description>
            <leaf name="metric_offset">
              <description>
                <text>Metric offset for MED</text>
              </description>
              <type name="union">
                <type name="int32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
        <case name="case_9">
          <container name="minimum-effective-aigp">
            <presence value="enable minimum-effective-aigp"/>
            <description>
              <text>Track the minimum effective AIGP metric (BGP only)</text>
            </description>
            <leaf name="metric_offset">
              <description>
                <text>Metric offset for MED</text>
              </description>
              <type name="union">
                <type name="int32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
      </choice>
    </container>
    <container name="metric2">
      <description>
        <text>Metric value 2</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="metric2">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="metric3">
      <description>
        <text>Metric value 3</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="metric3">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="metric4">
      <description>
        <text>Metric value 4</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="metric4">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="tag">
      <description>
        <text>Tag string</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="tag">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="tag2">
      <description>
        <text>Tag string 2</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="tag2">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="preference">
      <description>
        <text>Preference value</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="preference">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="preference2">
      <description>
        <text>Preference value 2</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="preference2">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="color">
      <description>
        <text>Color (preference) value</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="color">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="color2">
      <description>
        <text>Color (preference) value 2</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="color2">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="local-preference">
      <description>
        <text>Local preference associated with a route</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="local-preference">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <leaf name="priority">
      <description>
        <text>Set priority for route installation</text>
      </description>
      <type name="enumeration">
        <enum name="high">
          <description>
            <text>Set priority to high</text>
          </description>
        </enum>
        <enum name="medium">
          <description>
            <text>Set priority to medium</text>
          </description>
        </enum>
        <enum name="low">
          <description>
            <text>Set priority to low</text>
          </description>
        </enum>
      </type>
    </leaf>
    <container name="prefix-segment">
      <description>
        <text>Set prefix segment attributes</text>
      </description>
      <uses name="apply-advanced"/>
      <list name="algorithm">
        <key value="name"/>
        <description>
          <text>Set prefix segment attributes for strict/flex algorithm </text>
        </description>
        <max-elements value="15"/>
        <leaf name="name">
          <description>
            <text>Set prefix segment for strict/flex algorithm</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 255"/>
            </type>
          </type>
        </leaf>
        <leaf name="index">
          <description>
            <text>Set prefix segment index id</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="0 .. 199999"/>
            </type>
          </type>
        </leaf>
        <leaf name="node-segment">
          <description>
            <text>Set node segment flag for this prefix segment</text>
          </description>
          <type name="empty"/>
        </leaf>
      </list>
      <leaf name="index">
        <description>
          <text>Set prefix segment index id</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="0 .. 199999"/>
          </type>
        </type>
      </leaf>
      <leaf name="node-segment">
        <description>
          <text>Set node segment flag for default prefix segment</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <leaf name="label-allocation">
      <description>
        <text>Set label allocation mode</text>
      </description>
      <type name="enumeration">
        <enum name="per-table">
          <description>
            <text>Set per-table label allocation mode</text>
          </description>
        </enum>
        <enum name="per-nexthop">
          <description>
            <text>Set per-nexthop label allocation mode</text>
          </description>
        </enum>
        <enum name="per-table-localize">
          <description>
            <text>Set per-table-localize label allocation mode</text>
          </description>
        </enum>
      </type>
    </leaf>
    <container name="add-path">
      <description>
        <text>Set BGP add-path attributes</text>
      </description>
      <leaf name="send-count">
        <description>
          <text>Number of add-paths sent</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="2 .. 64"/>
          </type>
        </type>
      </leaf>
    </container>
    <leaf name="validation-state">
      <description>
        <text>Set validation-state of a route</text>
      </description>
      <type name="enumeration">
        <enum name="valid">
          <description>
            <text>Set validaton-state to valid</text>
          </description>
        </enum>
        <enum name="invalid">
          <description>
            <text>Set validation-state to invalid</text>
          </description>
        </enum>
        <enum name="unknown">
          <description>
            <text>Set validation-state to unknown</text>
          </description>
        </enum>
      </type>
    </leaf>
    <leaf name="origin">
      <description>
        <text>BGP path origin</text>
      </description>
      <type name="enumeration">
        <enum name="igp">
          <description>
            <text>Path originated in the local IGP</text>
          </description>
        </enum>
        <enum name="egp">
          <description>
            <text>Path originated in another AS</text>
          </description>
        </enum>
        <enum name="incomplete">
          <description>
            <text>Path was learned by some other means</text>
          </description>
        </enum>
      </type>
    </leaf>
    <container name="aigp-originate">
      <presence value="enable aigp-originate"/>
      <description>
        <text>Originate a BGP AIGP attribute</text>
      </description>
      <leaf name="distance">
        <description>
          <text>AIGP distance</text>
        </description>
        <type name="union">
          <type name="uint32"/>
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
        </type>
      </leaf>
    </container>
    <container name="aigp-adjust">
      <description>
        <text>Adjust a BGP AIGP attribute</text>
      </description>
      <choice name="math-op">
        <case name="case_1">
          <leaf name="add">
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="subtract">
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="multiply">
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_4">
          <leaf name="divide">
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
      <choice name="adjust-value">
        <case name="case_1">
          <leaf name="user-value">
            <description>
              <text>Adjustment value</text>
            </description>
            <type name="union">
              <type name="uint64"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="distance-to-protocol-nexthop">
            <description>
              <text>Metric2</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
    </container>
    <list name="community">
      <key value="choice-ident choice-value community-name"/>
      <ordered-by value="user"/>
      <description>
        <text>BGP community properties associated with a route</text>
      </description>
      <leaf name="choice-ident">
        <type name="enumeration">
          <enum name="equal-literal"/>
          <enum name="set"/>
          <enum name="plus-literal"/>
          <enum name="add"/>
          <enum name="minus-literal"/>
          <enum name="delete"/>
          <enum name="community-name"/>
        </type>
      </leaf>
      <leaf name="choice-value">
        <type name="string"/>
      </leaf>
      <leaf name="community-name">
        <description>
          <text>Name to identify a BGP community</text>
        </description>
        <type name="string"/>
      </leaf>
    </list>
    <list name="tunnel-attribute">
      <key value="choice-ident choice-value tunnel-attribute-name"/>
      <ordered-by value="user"/>
      <description>
        <text>BGP tunnel attribute associated with a route</text>
      </description>
      <leaf name="choice-ident">
        <type name="enumeration">
          <enum name="set"/>
          <enum name="remove"/>
          <enum name="tunnel-attribute-name"/>
        </type>
      </leaf>
      <leaf name="choice-value">
        <type name="string"/>
      </leaf>
      <leaf name="tunnel-attribute-name">
        <description>
          <text>Name of a tunnel attribute , or 'all'</text>
        </description>
        <type name="string"/>
      </leaf>
    </list>
    <leaf name="damping">
      <description>
        <text>Define BGP route flap damping parameters</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="aggregate-bandwidth">
      <description>
        <text>Advertise aggregate outbound link bandwidth</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="limit-bandwidth">
      <description>
        <text>Limit advertised aggregate outbound link bandwidth</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="0 .. 4294967295"/>
        </type>
      </type>
    </leaf>
    <leaf name="no-entropy-label-capability">
      <description>
        <text>Don't advertise entropy label capability</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="as-path-prepend">
      <description>
        <text>Prepend AS numbers to an AS path (BGP only)</text>
      </description>
      <type name="string"/>
    </leaf>
    <container name="as-path-expand">
      <description>
        <text>Prepend AS numbers prior to adding local-as (BGP only)</text>
      </description>
      <choice name="aspath_exp_value">
        <case name="case_1">
          <container name="last-as">
            <presence value="enable last-as"/>
            <description>
              <text>Prepend last AS</text>
            </description>
            <leaf name="count">
              <description>
                <text>Repeat count</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 32"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
        <case name="case_2">
          <leaf name="aspath">
            <description>
              <text>AS path string</text>
            </description>
            <type name="string"/>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="next-hop">
      <description>
        <text>Set the address of the next-hop router</text>
      </description>
      <choice name="nexthop_value">
        <case name="case_1">
          <leaf name="self">
            <description>
              <text>Use a local address as the next-hop address</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="peer-address">
            <description>
              <text>Use the remote peer address as the next-hop address</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="address">
            <description>
              <text>Next-hop address</text>
            </description>
            <type name="jt:ipaddr"/>
          </leaf>
        </case>
        <case name="case_4">
          <leaf name="reject">
            <description>
              <text>Use a reject next hop</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_5">
          <leaf name="discard">
            <description>
              <text>Use a discard next hop</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_6">
          <leaf name="next-table">
            <description>
              <text>Perform a forwarding lookup in the specified table</text>
            </description>
            <type name="string"/>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="install-nexthop">
      <description>
        <text>Choose the next hop to be used for forwarding</text>
      </description>
      <choice name="strict_type">
        <case name="case_1">
          <leaf name="strict">
            <description>
              <text>Do not use any other available next hops</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="strict-named-lsp">
            <description>
              <text>Do not use any other non-lsp next hops</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
      <choice name="nexthop-value">
        <case name="case_1">
          <leaf-list name="lsp">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop LSP name</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </case>
        <case name="case_2">
          <leaf-list name="lsp-regex">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop LSP name regular expression</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </case>
        <case name="case_3">
          <leaf-list name="static-lsp">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop static LSP name</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </case>
        <case name="case_4">
          <leaf-list name="static-lsp-regex">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop static LSP name regular expression</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </case>
        <case name="case_5">
          <leaf name="non-lsp-nexthop">
            <description>
              <text>Next-hop with non-lsp</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_6">
          <leaf name="non-labelled-nexthop">
            <description>
              <text>Next-hop without tag</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
      <container name="except">
        <description>
          <text>Do not choose to install matching next hops</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="nexthop-value">
          <case name="case_1">
            <leaf-list name="lsp">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop LSP name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="lsp-regex">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop LSP name regular expression</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_3">
            <leaf-list name="static-lsp">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop static LSP name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_4">
            <leaf-list name="static-lsp-regex">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop static LSP name regular expression</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_5">
            <leaf name="non-lsp-nexthop">
              <description>
                <text>Next-hop with non-lsp</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_6">
            <leaf name="non-labelled-nexthop">
              <description>
                <text>Next-hop without tag</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
        <container name="fallback">
          <description>
            <text>Backup option</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="nexthop-value">
            <case name="case_1">
              <leaf-list name="lsp">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop LSP name</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_2">
              <leaf-list name="lsp-regex">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop LSP name regular expression</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_3">
              <leaf-list name="static-lsp">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop static LSP name</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_4">
              <leaf-list name="static-lsp-regex">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop static LSP name regular expression</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_5">
              <leaf name="non-lsp-nexthop">
                <description>
                  <text>Next-hop with non-lsp</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_6">
              <leaf name="non-labelled-nexthop">
                <description>
                  <text>Next-hop without tag</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
          <container name="except">
            <description>
              <text>Do not choose to install matching next hops</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="nexthop-value">
              <case name="case_1">
                <leaf-list name="lsp">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop LSP name</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_2">
                <leaf-list name="lsp-regex">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop LSP name regular expression</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_3">
                <leaf-list name="static-lsp">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop static LSP name</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_4">
                <leaf-list name="static-lsp-regex">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop static LSP name regular expression</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_5">
                <leaf name="non-lsp-nexthop">
                  <description>
                    <text>Next-hop with non-lsp</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_6">
                <leaf name="non-labelled-nexthop">
                  <description>
                    <text>Next-hop without tag</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
            </choice>
          </container>
        </container>
      </container>
      <container name="fallback">
        <description>
          <text>Backup option </text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="nexthop-value">
          <case name="case_1">
            <leaf-list name="lsp">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop LSP name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="lsp-regex">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop LSP name regular expression</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_3">
            <leaf-list name="static-lsp">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop static LSP name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_4">
            <leaf-list name="static-lsp-regex">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop static LSP name regular expression</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_5">
            <leaf name="non-lsp-nexthop">
              <description>
                <text>Next-hop with non-lsp</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_6">
            <leaf name="non-labelled-nexthop">
              <description>
                <text>Next-hop without tag</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
        <container name="except">
          <description>
            <text>Do not choose to install matching next hops</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="nexthop-value">
            <case name="case_1">
              <leaf-list name="lsp">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop LSP name</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_2">
              <leaf-list name="lsp-regex">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop LSP name regular expression</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_3">
              <leaf-list name="static-lsp">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop static LSP name</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_4">
              <leaf-list name="static-lsp-regex">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop static LSP name regular expression</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_5">
              <leaf name="non-lsp-nexthop">
                <description>
                  <text>Next-hop with non-lsp</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_6">
              <leaf name="non-labelled-nexthop">
                <description>
                  <text>Next-hop without tag</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
        </container>
      </container>
    </container>
    <leaf name="trace">
      <description>
        <text>Log matches to a trace file</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="external">
      <presence value="enable external"/>
      <description>
        <text>External route</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="type">
        <description>
          <text>OSPF external metric type</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="int32">
            <range value="1 .. 2"/>
          </type>
        </type>
      </leaf>
      <leaf name="nssa-only">
        <description>
          <text>Clear P-bit on lsa type 7</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <container name="load-balance">
      <description>
        <text>Type of load balancing in forwarding table</text>
      </description>
      <choice name="load_balance_type">
        <case name="case_1">
          <leaf name="per-packet">
            <description>
              <text>Load balance on a per-packet basis</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2"/>
        <case name="case_3"/>
        <case name="case_4">
          <leaf name="consistent-hash">
            <description>
              <text>Give a prefix consistent load-balancing</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_5"/>
        <case name="case_6"/>
      </choice>
    </container>
    <leaf name="analyze">
      <description>
        <text>Send to registered controllers for analysis</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="class">
      <description>
        <text>Set class-of-service parameters</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="destination-class">
      <description>
        <text>Set destination class in forwarding table</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="source-class">
      <description>
        <text>Set source class in forwarding table</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="forwarding-class">
      <description>
        <text>Set source or destination class in forwarding table</text>
      </description>
      <type name="string"/>
    </leaf>
    <container name="map-to-interface">
      <description>
        <text>Set output logical interface</text>
      </description>
      <choice name="map_to_interface_value">
        <case name="case_1">
          <leaf name="self">
            <description>
              <text>Map the interface to itself</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="interface">
            <description>
              <text>Output logical interface</text>
            </description>
            <type name="union">
              <type name="jt:interface-name"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <leaf-list name="ssm-source">
      <ordered-by value="user"/>
      <description>
        <text>List of Sources for SSM mapping</text>
      </description>
      <type name="jt:ipaddr"/>
    </leaf-list>
    <container name="p2mp-lsp-root">
      <description>
        <text>P2mp lsp root address</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="address">
        <description>
          <text>Ipv4 root address</text>
        </description>
        <type name="jt:ipv4addr"/>
      </leaf>
    </container>
    <leaf name="cos-next-hop-map">
      <description>
        <text>Set CoS-based next-hop map in forwarding table</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="dynamic-tunnel-attributes">
      <description>
        <text>Choose the dynamic tunnel attributes used for forwarding</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="tunnel-end-point-address">
      <description>
        <text>Set tunnel end-point address of tunnel</text>
      </description>
      <type name="jt:ipaddr"/>
    </leaf>
    <leaf name="selected-mldp-egress">
      <description>
        <text>This node should act as egress node for MLDP inband signalling</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="mhop-bfd-port">
      <description>
        <text>Use port number 4784 for MPLS-BFD as per RFC5884</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="no-backup">
      <description>
        <text>This prefix should not have backup</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="default-action">
      <description>
        <text>Set default policy action</text>
      </description>
      <type name="enumeration">
        <enum name="accept">
          <description>
            <text>Accept a route</text>
          </description>
        </enum>
        <enum name="reject">
          <description>
            <text>Reject a route</text>
          </description>
        </enum>
      </type>
    </leaf>
    <leaf name="next">
      <description>
        <text>Skip to next policy or term</text>
      </description>
      <type name="enumeration">
        <enum name="policy">
          <description>
            <text>Skip to next policy filter</text>
          </description>
        </enum>
        <enum name="term">
          <description>
            <text>Skip to next term in a policy filter</text>
          </description>
        </enum>
      </type>
    </leaf>
    <choice name="accept_reject">
      <case name="case_1">
        <leaf name="accept">
          <description>
            <text>Accept a route</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
      <case name="case_2">
        <leaf name="reject">
          <description>
            <text>Reject a route</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
    </choice>
    <container name="bgp-output-queue-priority">
      <description>
        <text>Set the BGP Update output queue priority.</text>
      </description>
      <choice name="class">
        <case name="case_1">
          <leaf name="priority">
            <description>
              <text>Output queue priority; higher is better</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="1 .. 16"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="expedited">
            <description>
              <text>Expedited queue; highest priority</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
    </container>
    <leaf name="multipath-resolve">
      <description>
        <text>Use all paths for resolution over this prefix</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="source-routing-path-template">
      <description>
        <text>Spring-te template to apply</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="label-allocation-fallback-reject">
      <description>
        <text>Suppress prefix export when label allocation fails</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="resolution-map">
      <description>
        <text>Set resolution map modes</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="ignore-service-label">
      <description>
        <text>Ignore service labels</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="request-long-lived-ack">
      <description>
        <text>Advertise route after forwarding is programmed</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="send-withdrawal-on-route-change">
      <description>
        <text>Withdraw route if change is not acked from forwarding</text>
      </description>
      <type name="empty"/>
    </leaf>
  </grouping>
  <grouping name="control_prefix_list_type">
    <leaf name="name">
      <description>
        <text>Name of prefix-list of routes to match</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
  </grouping>
  <grouping name="control_route_filter_list_type">
    <leaf name="name">
      <description>
        <text>Name of route-filter-list of routes to match</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <choice name="modifier">
      <case name="case_1">
        <leaf name="exact">
          <description>
            <text>Exactly match the prefix length</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
      <case name="case_2">
        <leaf name="longer">
          <description>
            <text>Mask is greater than the prefix length</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
      <case name="case_3">
        <leaf name="orlonger">
          <description>
            <text>Mask is greater than or equal to the prefix length</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
      <case name="case_4">
        <leaf name="upto">
          <description>
            <text>Mask falls between two prefix lengths</text>
          </description>
          <type name="string"/>
        </leaf>
      </case>
      <case name="case_5">
        <leaf name="prefix-length-range">
          <description>
            <text>Mask falls between two prefix lengths</text>
          </description>
          <type name="string"/>
        </leaf>
      </case>
    </choice>
    <container name="metric">
      <description>
        <text>Metric value</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="metric">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_4">
          <container name="igp">
            <presence value="enable igp"/>
            <description>
              <text>Track the IGP metric (BGP only)</text>
            </description>
            <leaf name="metric_offset">
              <description>
                <text>Metric offset for MED</text>
              </description>
              <type name="union">
                <type name="int32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
        <case name="case_5">
          <container name="minimum-igp">
            <presence value="enable minimum-igp"/>
            <description>
              <text>Track the minimum IGP metric (BGP only)</text>
            </description>
            <leaf name="metric_offset">
              <description>
                <text>Metric offset for MED</text>
              </description>
              <type name="union">
                <type name="int32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
        <case name="case_6">
          <container name="expression">
            <description>
              <text>Calculate value based on route metric and metric2</text>
            </description>
            <uses name="metric_expression_type"/>
          </container>
        </case>
        <case name="case_7">
          <leaf name="aigp">
            <description>
              <text>Use aigp, if it exists, to set the IGP metric</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_8">
          <container name="effective-aigp">
            <presence value="enable effective-aigp"/>
            <description>
              <text>Track the effective AIGP metric (BGP only)</text>
            </description>
            <leaf name="metric_offset">
              <description>
                <text>Metric offset for MED</text>
              </description>
              <type name="union">
                <type name="int32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
        <case name="case_9">
          <container name="minimum-effective-aigp">
            <presence value="enable minimum-effective-aigp"/>
            <description>
              <text>Track the minimum effective AIGP metric (BGP only)</text>
            </description>
            <leaf name="metric_offset">
              <description>
                <text>Metric offset for MED</text>
              </description>
              <type name="union">
                <type name="int32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
      </choice>
    </container>
    <container name="metric2">
      <description>
        <text>Metric value 2</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="metric2">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="metric3">
      <description>
        <text>Metric value 3</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="metric3">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="metric4">
      <description>
        <text>Metric value 4</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="metric4">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="tag">
      <description>
        <text>Tag string</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="tag">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="tag2">
      <description>
        <text>Tag string 2</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="tag2">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="preference">
      <description>
        <text>Preference value</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="preference">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="preference2">
      <description>
        <text>Preference value 2</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="preference2">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="color">
      <description>
        <text>Color (preference) value</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="color">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="color2">
      <description>
        <text>Color (preference) value 2</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="color2">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="local-preference">
      <description>
        <text>Local preference associated with a route</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="local-preference">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <leaf name="priority">
      <description>
        <text>Set priority for route installation</text>
      </description>
      <type name="enumeration">
        <enum name="high">
          <description>
            <text>Set priority to high</text>
          </description>
        </enum>
        <enum name="medium">
          <description>
            <text>Set priority to medium</text>
          </description>
        </enum>
        <enum name="low">
          <description>
            <text>Set priority to low</text>
          </description>
        </enum>
      </type>
    </leaf>
    <container name="prefix-segment">
      <description>
        <text>Set prefix segment attributes</text>
      </description>
      <uses name="apply-advanced"/>
      <list name="algorithm">
        <key value="name"/>
        <description>
          <text>Set prefix segment attributes for strict/flex algorithm </text>
        </description>
        <max-elements value="15"/>
        <leaf name="name">
          <description>
            <text>Set prefix segment for strict/flex algorithm</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 255"/>
            </type>
          </type>
        </leaf>
        <leaf name="index">
          <description>
            <text>Set prefix segment index id</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="0 .. 199999"/>
            </type>
          </type>
        </leaf>
        <leaf name="node-segment">
          <description>
            <text>Set node segment flag for this prefix segment</text>
          </description>
          <type name="empty"/>
        </leaf>
      </list>
      <leaf name="index">
        <description>
          <text>Set prefix segment index id</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="0 .. 199999"/>
          </type>
        </type>
      </leaf>
      <leaf name="node-segment">
        <description>
          <text>Set node segment flag for default prefix segment</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <leaf name="label-allocation">
      <description>
        <text>Set label allocation mode</text>
      </description>
      <type name="enumeration">
        <enum name="per-table">
          <description>
            <text>Set per-table label allocation mode</text>
          </description>
        </enum>
        <enum name="per-nexthop">
          <description>
            <text>Set per-nexthop label allocation mode</text>
          </description>
        </enum>
        <enum name="per-table-localize">
          <description>
            <text>Set per-table-localize label allocation mode</text>
          </description>
        </enum>
      </type>
    </leaf>
    <container name="add-path">
      <description>
        <text>Set BGP add-path attributes</text>
      </description>
      <leaf name="send-count">
        <description>
          <text>Number of add-paths sent</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="2 .. 64"/>
          </type>
        </type>
      </leaf>
    </container>
    <leaf name="validation-state">
      <description>
        <text>Set validation-state of a route</text>
      </description>
      <type name="enumeration">
        <enum name="valid">
          <description>
            <text>Set validaton-state to valid</text>
          </description>
        </enum>
        <enum name="invalid">
          <description>
            <text>Set validation-state to invalid</text>
          </description>
        </enum>
        <enum name="unknown">
          <description>
            <text>Set validation-state to unknown</text>
          </description>
        </enum>
      </type>
    </leaf>
    <leaf name="origin">
      <description>
        <text>BGP path origin</text>
      </description>
      <type name="enumeration">
        <enum name="igp">
          <description>
            <text>Path originated in the local IGP</text>
          </description>
        </enum>
        <enum name="egp">
          <description>
            <text>Path originated in another AS</text>
          </description>
        </enum>
        <enum name="incomplete">
          <description>
            <text>Path was learned by some other means</text>
          </description>
        </enum>
      </type>
    </leaf>
    <container name="aigp-originate">
      <presence value="enable aigp-originate"/>
      <description>
        <text>Originate a BGP AIGP attribute</text>
      </description>
      <leaf name="distance">
        <description>
          <text>AIGP distance</text>
        </description>
        <type name="union">
          <type name="uint32"/>
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
        </type>
      </leaf>
    </container>
    <container name="aigp-adjust">
      <description>
        <text>Adjust a BGP AIGP attribute</text>
      </description>
      <choice name="math-op">
        <case name="case_1">
          <leaf name="add">
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="subtract">
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="multiply">
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_4">
          <leaf name="divide">
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
      <choice name="adjust-value">
        <case name="case_1">
          <leaf name="user-value">
            <description>
              <text>Adjustment value</text>
            </description>
            <type name="union">
              <type name="uint64"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="distance-to-protocol-nexthop">
            <description>
              <text>Metric2</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
    </container>
    <list name="community">
      <key value="choice-ident choice-value community-name"/>
      <ordered-by value="user"/>
      <description>
        <text>BGP community properties associated with a route</text>
      </description>
      <leaf name="choice-ident">
        <type name="enumeration">
          <enum name="equal-literal"/>
          <enum name="set"/>
          <enum name="plus-literal"/>
          <enum name="add"/>
          <enum name="minus-literal"/>
          <enum name="delete"/>
          <enum name="community-name"/>
        </type>
      </leaf>
      <leaf name="choice-value">
        <type name="string"/>
      </leaf>
      <leaf name="community-name">
        <description>
          <text>Name to identify a BGP community</text>
        </description>
        <type name="string"/>
      </leaf>
    </list>
    <list name="tunnel-attribute">
      <key value="choice-ident choice-value tunnel-attribute-name"/>
      <ordered-by value="user"/>
      <description>
        <text>BGP tunnel attribute associated with a route</text>
      </description>
      <leaf name="choice-ident">
        <type name="enumeration">
          <enum name="set"/>
          <enum name="remove"/>
          <enum name="tunnel-attribute-name"/>
        </type>
      </leaf>
      <leaf name="choice-value">
        <type name="string"/>
      </leaf>
      <leaf name="tunnel-attribute-name">
        <description>
          <text>Name of a tunnel attribute , or 'all'</text>
        </description>
        <type name="string"/>
      </leaf>
    </list>
    <leaf name="damping">
      <description>
        <text>Define BGP route flap damping parameters</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="aggregate-bandwidth">
      <description>
        <text>Advertise aggregate outbound link bandwidth</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="limit-bandwidth">
      <description>
        <text>Limit advertised aggregate outbound link bandwidth</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="0 .. 4294967295"/>
        </type>
      </type>
    </leaf>
    <leaf name="no-entropy-label-capability">
      <description>
        <text>Don't advertise entropy label capability</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="as-path-prepend">
      <description>
        <text>Prepend AS numbers to an AS path (BGP only)</text>
      </description>
      <type name="string"/>
    </leaf>
    <container name="as-path-expand">
      <description>
        <text>Prepend AS numbers prior to adding local-as (BGP only)</text>
      </description>
      <choice name="aspath_exp_value">
        <case name="case_1">
          <container name="last-as">
            <presence value="enable last-as"/>
            <description>
              <text>Prepend last AS</text>
            </description>
            <leaf name="count">
              <description>
                <text>Repeat count</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 32"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
        <case name="case_2">
          <leaf name="aspath">
            <description>
              <text>AS path string</text>
            </description>
            <type name="string"/>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="next-hop">
      <description>
        <text>Set the address of the next-hop router</text>
      </description>
      <choice name="nexthop_value">
        <case name="case_1">
          <leaf name="self">
            <description>
              <text>Use a local address as the next-hop address</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="peer-address">
            <description>
              <text>Use the remote peer address as the next-hop address</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="address">
            <description>
              <text>Next-hop address</text>
            </description>
            <type name="jt:ipaddr"/>
          </leaf>
        </case>
        <case name="case_4">
          <leaf name="reject">
            <description>
              <text>Use a reject next hop</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_5">
          <leaf name="discard">
            <description>
              <text>Use a discard next hop</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_6">
          <leaf name="next-table">
            <description>
              <text>Perform a forwarding lookup in the specified table</text>
            </description>
            <type name="string"/>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="install-nexthop">
      <description>
        <text>Choose the next hop to be used for forwarding</text>
      </description>
      <choice name="strict_type">
        <case name="case_1">
          <leaf name="strict">
            <description>
              <text>Do not use any other available next hops</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="strict-named-lsp">
            <description>
              <text>Do not use any other non-lsp next hops</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
      <choice name="nexthop-value">
        <case name="case_1">
          <leaf-list name="lsp">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop LSP name</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </case>
        <case name="case_2">
          <leaf-list name="lsp-regex">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop LSP name regular expression</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </case>
        <case name="case_3">
          <leaf-list name="static-lsp">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop static LSP name</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </case>
        <case name="case_4">
          <leaf-list name="static-lsp-regex">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop static LSP name regular expression</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </case>
        <case name="case_5">
          <leaf name="non-lsp-nexthop">
            <description>
              <text>Next-hop with non-lsp</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_6">
          <leaf name="non-labelled-nexthop">
            <description>
              <text>Next-hop without tag</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
      <container name="except">
        <description>
          <text>Do not choose to install matching next hops</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="nexthop-value">
          <case name="case_1">
            <leaf-list name="lsp">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop LSP name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="lsp-regex">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop LSP name regular expression</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_3">
            <leaf-list name="static-lsp">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop static LSP name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_4">
            <leaf-list name="static-lsp-regex">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop static LSP name regular expression</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_5">
            <leaf name="non-lsp-nexthop">
              <description>
                <text>Next-hop with non-lsp</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_6">
            <leaf name="non-labelled-nexthop">
              <description>
                <text>Next-hop without tag</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
        <container name="fallback">
          <description>
            <text>Backup option</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="nexthop-value">
            <case name="case_1">
              <leaf-list name="lsp">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop LSP name</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_2">
              <leaf-list name="lsp-regex">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop LSP name regular expression</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_3">
              <leaf-list name="static-lsp">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop static LSP name</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_4">
              <leaf-list name="static-lsp-regex">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop static LSP name regular expression</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_5">
              <leaf name="non-lsp-nexthop">
                <description>
                  <text>Next-hop with non-lsp</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_6">
              <leaf name="non-labelled-nexthop">
                <description>
                  <text>Next-hop without tag</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
          <container name="except">
            <description>
              <text>Do not choose to install matching next hops</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="nexthop-value">
              <case name="case_1">
                <leaf-list name="lsp">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop LSP name</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_2">
                <leaf-list name="lsp-regex">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop LSP name regular expression</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_3">
                <leaf-list name="static-lsp">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop static LSP name</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_4">
                <leaf-list name="static-lsp-regex">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop static LSP name regular expression</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_5">
                <leaf name="non-lsp-nexthop">
                  <description>
                    <text>Next-hop with non-lsp</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_6">
                <leaf name="non-labelled-nexthop">
                  <description>
                    <text>Next-hop without tag</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
            </choice>
          </container>
        </container>
      </container>
      <container name="fallback">
        <description>
          <text>Backup option </text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="nexthop-value">
          <case name="case_1">
            <leaf-list name="lsp">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop LSP name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="lsp-regex">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop LSP name regular expression</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_3">
            <leaf-list name="static-lsp">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop static LSP name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_4">
            <leaf-list name="static-lsp-regex">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop static LSP name regular expression</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_5">
            <leaf name="non-lsp-nexthop">
              <description>
                <text>Next-hop with non-lsp</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_6">
            <leaf name="non-labelled-nexthop">
              <description>
                <text>Next-hop without tag</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
        <container name="except">
          <description>
            <text>Do not choose to install matching next hops</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="nexthop-value">
            <case name="case_1">
              <leaf-list name="lsp">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop LSP name</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_2">
              <leaf-list name="lsp-regex">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop LSP name regular expression</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_3">
              <leaf-list name="static-lsp">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop static LSP name</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_4">
              <leaf-list name="static-lsp-regex">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop static LSP name regular expression</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_5">
              <leaf name="non-lsp-nexthop">
                <description>
                  <text>Next-hop with non-lsp</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_6">
              <leaf name="non-labelled-nexthop">
                <description>
                  <text>Next-hop without tag</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
        </container>
      </container>
    </container>
    <leaf name="trace">
      <description>
        <text>Log matches to a trace file</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="external">
      <presence value="enable external"/>
      <description>
        <text>External route</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="type">
        <description>
          <text>OSPF external metric type</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="int32">
            <range value="1 .. 2"/>
          </type>
        </type>
      </leaf>
      <leaf name="nssa-only">
        <description>
          <text>Clear P-bit on lsa type 7</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <container name="load-balance">
      <description>
        <text>Type of load balancing in forwarding table</text>
      </description>
      <choice name="load_balance_type">
        <case name="case_1">
          <leaf name="per-packet">
            <description>
              <text>Load balance on a per-packet basis</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2"/>
        <case name="case_3"/>
        <case name="case_4">
          <leaf name="consistent-hash">
            <description>
              <text>Give a prefix consistent load-balancing</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_5"/>
        <case name="case_6"/>
      </choice>
    </container>
    <leaf name="analyze">
      <description>
        <text>Send to registered controllers for analysis</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="class">
      <description>
        <text>Set class-of-service parameters</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="destination-class">
      <description>
        <text>Set destination class in forwarding table</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="source-class">
      <description>
        <text>Set source class in forwarding table</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="forwarding-class">
      <description>
        <text>Set source or destination class in forwarding table</text>
      </description>
      <type name="string"/>
    </leaf>
    <container name="map-to-interface">
      <description>
        <text>Set output logical interface</text>
      </description>
      <choice name="map_to_interface_value">
        <case name="case_1">
          <leaf name="self">
            <description>
              <text>Map the interface to itself</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="interface">
            <description>
              <text>Output logical interface</text>
            </description>
            <type name="union">
              <type name="jt:interface-name"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <leaf-list name="ssm-source">
      <ordered-by value="user"/>
      <description>
        <text>List of Sources for SSM mapping</text>
      </description>
      <type name="jt:ipaddr"/>
    </leaf-list>
    <container name="p2mp-lsp-root">
      <description>
        <text>P2mp lsp root address</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="address">
        <description>
          <text>Ipv4 root address</text>
        </description>
        <type name="jt:ipv4addr"/>
      </leaf>
    </container>
    <leaf name="cos-next-hop-map">
      <description>
        <text>Set CoS-based next-hop map in forwarding table</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="dynamic-tunnel-attributes">
      <description>
        <text>Choose the dynamic tunnel attributes used for forwarding</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="tunnel-end-point-address">
      <description>
        <text>Set tunnel end-point address of tunnel</text>
      </description>
      <type name="jt:ipaddr"/>
    </leaf>
    <leaf name="selected-mldp-egress">
      <description>
        <text>This node should act as egress node for MLDP inband signalling</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="mhop-bfd-port">
      <description>
        <text>Use port number 4784 for MPLS-BFD as per RFC5884</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="no-backup">
      <description>
        <text>This prefix should not have backup</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="default-action">
      <description>
        <text>Set default policy action</text>
      </description>
      <type name="enumeration">
        <enum name="accept">
          <description>
            <text>Accept a route</text>
          </description>
        </enum>
        <enum name="reject">
          <description>
            <text>Reject a route</text>
          </description>
        </enum>
      </type>
    </leaf>
    <leaf name="next">
      <description>
        <text>Skip to next policy or term</text>
      </description>
      <type name="enumeration">
        <enum name="policy">
          <description>
            <text>Skip to next policy filter</text>
          </description>
        </enum>
        <enum name="term">
          <description>
            <text>Skip to next term in a policy filter</text>
          </description>
        </enum>
      </type>
    </leaf>
    <choice name="accept_reject">
      <case name="case_1">
        <leaf name="accept">
          <description>
            <text>Accept a route</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
      <case name="case_2">
        <leaf name="reject">
          <description>
            <text>Reject a route</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
    </choice>
    <container name="bgp-output-queue-priority">
      <description>
        <text>Set the BGP Update output queue priority.</text>
      </description>
      <choice name="class">
        <case name="case_1">
          <leaf name="priority">
            <description>
              <text>Output queue priority; higher is better</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="1 .. 16"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="expedited">
            <description>
              <text>Expedited queue; highest priority</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
    </container>
    <leaf name="multipath-resolve">
      <description>
        <text>Use all paths for resolution over this prefix</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="source-routing-path-template">
      <description>
        <text>Spring-te template to apply</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="label-allocation-fallback-reject">
      <description>
        <text>Suppress prefix export when label allocation fails</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="resolution-map">
      <description>
        <text>Set resolution map modes</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="ignore-service-label">
      <description>
        <text>Ignore service labels</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="request-long-lived-ack">
      <description>
        <text>Advertise route after forwarding is programmed</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="send-withdrawal-on-route-change">
      <description>
        <text>Withdraw route if change is not acked from forwarding</text>
      </description>
      <type name="empty"/>
    </leaf>
  </grouping>
  <grouping name="control_route_filter_type">
    <leaf name="address">
      <description>
        <text>IP address or hostname</text>
      </description>
      <type name="jt:ipprefix"/>
    </leaf>
    <leaf name="choice-ident">
      <type name="enumeration">
        <enum name="exact"/>
        <enum name="longer"/>
        <enum name="orlonger"/>
        <enum name="upto"/>
        <enum name="through"/>
        <enum name="prefix-length-range"/>
        <enum name="address-mask"/>
        <enum name="apply-advanced"/>
        <enum name="label"/>
        <enum name="get-route-range"/>
        <enum name="metric"/>
        <enum name="metric2"/>
        <enum name="metric3"/>
        <enum name="metric4"/>
        <enum name="tag"/>
        <enum name="tag2"/>
        <enum name="preference"/>
        <enum name="preference2"/>
        <enum name="color"/>
        <enum name="color2"/>
        <enum name="local-preference"/>
        <enum name="priority"/>
        <enum name="prefix-segment"/>
        <enum name="label-allocation"/>
        <enum name="add-path"/>
        <enum name="validation-state"/>
        <enum name="origin"/>
        <enum name="aigp-originate"/>
        <enum name="aigp-adjust"/>
        <enum name="community"/>
        <enum name="tunnel-attribute"/>
        <enum name="damping"/>
        <enum name="aggregate-bandwidth"/>
        <enum name="limit-bandwidth"/>
        <enum name="no-entropy-label-capability"/>
        <enum name="as-path-prepend"/>
        <enum name="as-path-expand"/>
        <enum name="next-hop"/>
        <enum name="install-nexthop"/>
        <enum name="trace"/>
        <enum name="external"/>
        <enum name="load-balance"/>
        <enum name="no-route-localize"/>
        <enum name="install-to-fib"/>
        <enum name="analyze"/>
        <enum name="class"/>
        <enum name="destination-class"/>
        <enum name="source-class"/>
        <enum name="forwarding-class"/>
        <enum name="map-to-interface"/>
        <enum name="ssm-source"/>
        <enum name="p2mp-lsp-root"/>
        <enum name="cos-next-hop-map"/>
        <enum name="dynamic-tunnel-attributes"/>
        <enum name="tunnel-end-point-address"/>
        <enum name="selected-mldp-egress"/>
        <enum name="mhop-bfd-port"/>
        <enum name="no-backup"/>
        <enum name="default-action"/>
        <enum name="next"/>
        <enum name="accept_reject"/>
        <enum name="bgp-output-queue-priority"/>
        <enum name="multipath-resolve"/>
        <enum name="source-routing-path-template"/>
        <enum name="label-allocation-fallback-reject"/>
        <enum name="resolution-map"/>
        <enum name="ignore-service-label"/>
        <enum name="request-long-lived-ack"/>
        <enum name="send-withdrawal-on-route-change"/>
      </type>
    </leaf>
    <leaf name="choice-value">
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <container name="label">
      <description>
        <text>Set label for BGP LU label allocation</text>
      </description>
      <choice name="label_value">
        <case name="case_1">
          <container name="range">
            <description>
              <text>Label range</text>
            </description>
            <choice name="range_value">
              <case name="case_1">
                <leaf name="range">
                  <description>
                    <text>Label range in &lt;start&gt;:&lt;end&gt; format</text>
                  </description>
                  <type name="string"/>
                </leaf>
              </case>
            </choice>
          </container>
        </case>
        <case name="case_2">
          <leaf name="label">
            <description>
              <text>Label value</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="0 .. 1048575"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <leaf name="get-route-range">
      <description>
        <text>Get the range</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="metric">
      <description>
        <text>Metric value</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="metric">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_4">
          <container name="igp">
            <presence value="enable igp"/>
            <description>
              <text>Track the IGP metric (BGP only)</text>
            </description>
            <leaf name="metric_offset">
              <description>
                <text>Metric offset for MED</text>
              </description>
              <type name="union">
                <type name="int32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
        <case name="case_5">
          <container name="minimum-igp">
            <presence value="enable minimum-igp"/>
            <description>
              <text>Track the minimum IGP metric (BGP only)</text>
            </description>
            <leaf name="metric_offset">
              <description>
                <text>Metric offset for MED</text>
              </description>
              <type name="union">
                <type name="int32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
        <case name="case_6">
          <container name="expression">
            <description>
              <text>Calculate value based on route metric and metric2</text>
            </description>
            <uses name="metric_expression_type"/>
          </container>
        </case>
        <case name="case_7">
          <leaf name="aigp">
            <description>
              <text>Use aigp, if it exists, to set the IGP metric</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_8">
          <container name="effective-aigp">
            <presence value="enable effective-aigp"/>
            <description>
              <text>Track the effective AIGP metric (BGP only)</text>
            </description>
            <leaf name="metric_offset">
              <description>
                <text>Metric offset for MED</text>
              </description>
              <type name="union">
                <type name="int32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
        <case name="case_9">
          <container name="minimum-effective-aigp">
            <presence value="enable minimum-effective-aigp"/>
            <description>
              <text>Track the minimum effective AIGP metric (BGP only)</text>
            </description>
            <leaf name="metric_offset">
              <description>
                <text>Metric offset for MED</text>
              </description>
              <type name="union">
                <type name="int32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
      </choice>
    </container>
    <container name="metric2">
      <description>
        <text>Metric value 2</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="metric2">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="metric3">
      <description>
        <text>Metric value 3</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="metric3">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="metric4">
      <description>
        <text>Metric value 4</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="metric4">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="tag">
      <description>
        <text>Tag string</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="tag">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="tag2">
      <description>
        <text>Tag string 2</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="tag2">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="preference">
      <description>
        <text>Preference value</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="preference">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="preference2">
      <description>
        <text>Preference value 2</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="preference2">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="color">
      <description>
        <text>Color (preference) value</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="color">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="color2">
      <description>
        <text>Color (preference) value 2</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="color2">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="local-preference">
      <description>
        <text>Local preference associated with a route</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="local-preference">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <leaf name="priority">
      <description>
        <text>Set priority for route installation</text>
      </description>
      <type name="enumeration">
        <enum name="high">
          <description>
            <text>Set priority to high</text>
          </description>
        </enum>
        <enum name="medium">
          <description>
            <text>Set priority to medium</text>
          </description>
        </enum>
        <enum name="low">
          <description>
            <text>Set priority to low</text>
          </description>
        </enum>
      </type>
    </leaf>
    <container name="prefix-segment">
      <description>
        <text>Set prefix segment attributes</text>
      </description>
      <uses name="apply-advanced"/>
      <list name="algorithm">
        <key value="name"/>
        <description>
          <text>Set prefix segment attributes for strict/flex algorithm </text>
        </description>
        <max-elements value="15"/>
        <leaf name="name">
          <description>
            <text>Set prefix segment for strict/flex algorithm</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 255"/>
            </type>
          </type>
        </leaf>
        <leaf name="index">
          <description>
            <text>Set prefix segment index id</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="0 .. 199999"/>
            </type>
          </type>
        </leaf>
        <leaf name="node-segment">
          <description>
            <text>Set node segment flag for this prefix segment</text>
          </description>
          <type name="empty"/>
        </leaf>
      </list>
      <leaf name="index">
        <description>
          <text>Set prefix segment index id</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="0 .. 199999"/>
          </type>
        </type>
      </leaf>
      <leaf name="node-segment">
        <description>
          <text>Set node segment flag for default prefix segment</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <leaf name="label-allocation">
      <description>
        <text>Set label allocation mode</text>
      </description>
      <type name="enumeration">
        <enum name="per-table">
          <description>
            <text>Set per-table label allocation mode</text>
          </description>
        </enum>
        <enum name="per-nexthop">
          <description>
            <text>Set per-nexthop label allocation mode</text>
          </description>
        </enum>
        <enum name="per-table-localize">
          <description>
            <text>Set per-table-localize label allocation mode</text>
          </description>
        </enum>
      </type>
    </leaf>
    <container name="add-path">
      <description>
        <text>Set BGP add-path attributes</text>
      </description>
      <leaf name="send-count">
        <description>
          <text>Number of add-paths sent</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="2 .. 64"/>
          </type>
        </type>
      </leaf>
    </container>
    <leaf name="validation-state">
      <description>
        <text>Set validation-state of a route</text>
      </description>
      <type name="enumeration">
        <enum name="valid">
          <description>
            <text>Set validaton-state to valid</text>
          </description>
        </enum>
        <enum name="invalid">
          <description>
            <text>Set validation-state to invalid</text>
          </description>
        </enum>
        <enum name="unknown">
          <description>
            <text>Set validation-state to unknown</text>
          </description>
        </enum>
      </type>
    </leaf>
    <leaf name="origin">
      <description>
        <text>BGP path origin</text>
      </description>
      <type name="enumeration">
        <enum name="igp">
          <description>
            <text>Path originated in the local IGP</text>
          </description>
        </enum>
        <enum name="egp">
          <description>
            <text>Path originated in another AS</text>
          </description>
        </enum>
        <enum name="incomplete">
          <description>
            <text>Path was learned by some other means</text>
          </description>
        </enum>
      </type>
    </leaf>
    <container name="aigp-originate">
      <presence value="enable aigp-originate"/>
      <description>
        <text>Originate a BGP AIGP attribute</text>
      </description>
      <leaf name="distance">
        <description>
          <text>AIGP distance</text>
        </description>
        <type name="union">
          <type name="uint32"/>
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
        </type>
      </leaf>
    </container>
    <container name="aigp-adjust">
      <description>
        <text>Adjust a BGP AIGP attribute</text>
      </description>
      <choice name="math-op">
        <case name="case_1">
          <leaf name="add">
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="subtract">
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="multiply">
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_4">
          <leaf name="divide">
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
      <choice name="adjust-value">
        <case name="case_1">
          <leaf name="user-value">
            <description>
              <text>Adjustment value</text>
            </description>
            <type name="union">
              <type name="uint64"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="distance-to-protocol-nexthop">
            <description>
              <text>Metric2</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
    </container>
    <list name="community">
      <key value="choice-ident choice-value community-name"/>
      <ordered-by value="user"/>
      <description>
        <text>BGP community properties associated with a route</text>
      </description>
      <leaf name="choice-ident">
        <type name="enumeration">
          <enum name="equal-literal"/>
          <enum name="set"/>
          <enum name="plus-literal"/>
          <enum name="add"/>
          <enum name="minus-literal"/>
          <enum name="delete"/>
          <enum name="community-name"/>
        </type>
      </leaf>
      <leaf name="choice-value">
        <type name="string"/>
      </leaf>
      <leaf name="community-name">
        <description>
          <text>Name to identify a BGP community</text>
        </description>
        <type name="string"/>
      </leaf>
    </list>
    <list name="tunnel-attribute">
      <key value="choice-ident choice-value tunnel-attribute-name"/>
      <ordered-by value="user"/>
      <description>
        <text>BGP tunnel attribute associated with a route</text>
      </description>
      <leaf name="choice-ident">
        <type name="enumeration">
          <enum name="set"/>
          <enum name="remove"/>
          <enum name="tunnel-attribute-name"/>
        </type>
      </leaf>
      <leaf name="choice-value">
        <type name="string"/>
      </leaf>
      <leaf name="tunnel-attribute-name">
        <description>
          <text>Name of a tunnel attribute , or 'all'</text>
        </description>
        <type name="string"/>
      </leaf>
    </list>
    <leaf name="damping">
      <description>
        <text>Define BGP route flap damping parameters</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="aggregate-bandwidth">
      <description>
        <text>Advertise aggregate outbound link bandwidth</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="limit-bandwidth">
      <description>
        <text>Limit advertised aggregate outbound link bandwidth</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="0 .. 4294967295"/>
        </type>
      </type>
    </leaf>
    <leaf name="no-entropy-label-capability">
      <description>
        <text>Don't advertise entropy label capability</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="as-path-prepend">
      <description>
        <text>Prepend AS numbers to an AS path (BGP only)</text>
      </description>
      <type name="string"/>
    </leaf>
    <container name="as-path-expand">
      <description>
        <text>Prepend AS numbers prior to adding local-as (BGP only)</text>
      </description>
      <choice name="aspath_exp_value">
        <case name="case_1">
          <container name="last-as">
            <presence value="enable last-as"/>
            <description>
              <text>Prepend last AS</text>
            </description>
            <leaf name="count">
              <description>
                <text>Repeat count</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 32"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
        <case name="case_2">
          <leaf name="aspath">
            <description>
              <text>AS path string</text>
            </description>
            <type name="string"/>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="next-hop">
      <description>
        <text>Set the address of the next-hop router</text>
      </description>
      <choice name="nexthop_value">
        <case name="case_1">
          <leaf name="self">
            <description>
              <text>Use a local address as the next-hop address</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="peer-address">
            <description>
              <text>Use the remote peer address as the next-hop address</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="address">
            <description>
              <text>Next-hop address</text>
            </description>
            <type name="jt:ipaddr"/>
          </leaf>
        </case>
        <case name="case_4">
          <leaf name="reject">
            <description>
              <text>Use a reject next hop</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_5">
          <leaf name="discard">
            <description>
              <text>Use a discard next hop</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_6">
          <leaf name="next-table">
            <description>
              <text>Perform a forwarding lookup in the specified table</text>
            </description>
            <type name="string"/>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="install-nexthop">
      <description>
        <text>Choose the next hop to be used for forwarding</text>
      </description>
      <choice name="strict_type">
        <case name="case_1">
          <leaf name="strict">
            <description>
              <text>Do not use any other available next hops</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="strict-named-lsp">
            <description>
              <text>Do not use any other non-lsp next hops</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
      <choice name="nexthop-value">
        <case name="case_1">
          <leaf-list name="lsp">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop LSP name</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </case>
        <case name="case_2">
          <leaf-list name="lsp-regex">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop LSP name regular expression</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </case>
        <case name="case_3">
          <leaf-list name="static-lsp">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop static LSP name</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </case>
        <case name="case_4">
          <leaf-list name="static-lsp-regex">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop static LSP name regular expression</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </case>
        <case name="case_5">
          <leaf name="non-lsp-nexthop">
            <description>
              <text>Next-hop with non-lsp</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_6">
          <leaf name="non-labelled-nexthop">
            <description>
              <text>Next-hop without tag</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
      <container name="except">
        <description>
          <text>Do not choose to install matching next hops</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="nexthop-value">
          <case name="case_1">
            <leaf-list name="lsp">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop LSP name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="lsp-regex">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop LSP name regular expression</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_3">
            <leaf-list name="static-lsp">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop static LSP name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_4">
            <leaf-list name="static-lsp-regex">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop static LSP name regular expression</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_5">
            <leaf name="non-lsp-nexthop">
              <description>
                <text>Next-hop with non-lsp</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_6">
            <leaf name="non-labelled-nexthop">
              <description>
                <text>Next-hop without tag</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
        <container name="fallback">
          <description>
            <text>Backup option</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="nexthop-value">
            <case name="case_1">
              <leaf-list name="lsp">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop LSP name</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_2">
              <leaf-list name="lsp-regex">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop LSP name regular expression</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_3">
              <leaf-list name="static-lsp">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop static LSP name</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_4">
              <leaf-list name="static-lsp-regex">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop static LSP name regular expression</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_5">
              <leaf name="non-lsp-nexthop">
                <description>
                  <text>Next-hop with non-lsp</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_6">
              <leaf name="non-labelled-nexthop">
                <description>
                  <text>Next-hop without tag</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
          <container name="except">
            <description>
              <text>Do not choose to install matching next hops</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="nexthop-value">
              <case name="case_1">
                <leaf-list name="lsp">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop LSP name</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_2">
                <leaf-list name="lsp-regex">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop LSP name regular expression</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_3">
                <leaf-list name="static-lsp">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop static LSP name</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_4">
                <leaf-list name="static-lsp-regex">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop static LSP name regular expression</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_5">
                <leaf name="non-lsp-nexthop">
                  <description>
                    <text>Next-hop with non-lsp</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_6">
                <leaf name="non-labelled-nexthop">
                  <description>
                    <text>Next-hop without tag</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
            </choice>
          </container>
        </container>
      </container>
      <container name="fallback">
        <description>
          <text>Backup option </text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="nexthop-value">
          <case name="case_1">
            <leaf-list name="lsp">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop LSP name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="lsp-regex">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop LSP name regular expression</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_3">
            <leaf-list name="static-lsp">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop static LSP name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_4">
            <leaf-list name="static-lsp-regex">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop static LSP name regular expression</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_5">
            <leaf name="non-lsp-nexthop">
              <description>
                <text>Next-hop with non-lsp</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_6">
            <leaf name="non-labelled-nexthop">
              <description>
                <text>Next-hop without tag</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
        <container name="except">
          <description>
            <text>Do not choose to install matching next hops</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="nexthop-value">
            <case name="case_1">
              <leaf-list name="lsp">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop LSP name</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_2">
              <leaf-list name="lsp-regex">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop LSP name regular expression</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_3">
              <leaf-list name="static-lsp">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop static LSP name</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_4">
              <leaf-list name="static-lsp-regex">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop static LSP name regular expression</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_5">
              <leaf name="non-lsp-nexthop">
                <description>
                  <text>Next-hop with non-lsp</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_6">
              <leaf name="non-labelled-nexthop">
                <description>
                  <text>Next-hop without tag</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
        </container>
      </container>
    </container>
    <leaf name="trace">
      <description>
        <text>Log matches to a trace file</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="external">
      <presence value="enable external"/>
      <description>
        <text>External route</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="type">
        <description>
          <text>OSPF external metric type</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="int32">
            <range value="1 .. 2"/>
          </type>
        </type>
      </leaf>
      <leaf name="nssa-only">
        <description>
          <text>Clear P-bit on lsa type 7</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <container name="load-balance">
      <description>
        <text>Type of load balancing in forwarding table</text>
      </description>
      <choice name="load_balance_type">
        <case name="case_1">
          <leaf name="per-packet">
            <description>
              <text>Load balance on a per-packet basis</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2"/>
        <case name="case_3"/>
        <case name="case_4">
          <leaf name="consistent-hash">
            <description>
              <text>Give a prefix consistent load-balancing</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_5"/>
        <case name="case_6"/>
      </choice>
    </container>
    <leaf name="analyze">
      <description>
        <text>Send to registered controllers for analysis</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="class">
      <description>
        <text>Set class-of-service parameters</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="destination-class">
      <description>
        <text>Set destination class in forwarding table</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="source-class">
      <description>
        <text>Set source class in forwarding table</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="forwarding-class">
      <description>
        <text>Set source or destination class in forwarding table</text>
      </description>
      <type name="string"/>
    </leaf>
    <container name="map-to-interface">
      <description>
        <text>Set output logical interface</text>
      </description>
      <choice name="map_to_interface_value">
        <case name="case_1">
          <leaf name="self">
            <description>
              <text>Map the interface to itself</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="interface">
            <description>
              <text>Output logical interface</text>
            </description>
            <type name="union">
              <type name="jt:interface-name"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <leaf-list name="ssm-source">
      <ordered-by value="user"/>
      <description>
        <text>List of Sources for SSM mapping</text>
      </description>
      <type name="jt:ipaddr"/>
    </leaf-list>
    <container name="p2mp-lsp-root">
      <description>
        <text>P2mp lsp root address</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="address">
        <description>
          <text>Ipv4 root address</text>
        </description>
        <type name="jt:ipv4addr"/>
      </leaf>
    </container>
    <leaf name="cos-next-hop-map">
      <description>
        <text>Set CoS-based next-hop map in forwarding table</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="dynamic-tunnel-attributes">
      <description>
        <text>Choose the dynamic tunnel attributes used for forwarding</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="tunnel-end-point-address">
      <description>
        <text>Set tunnel end-point address of tunnel</text>
      </description>
      <type name="jt:ipaddr"/>
    </leaf>
    <leaf name="selected-mldp-egress">
      <description>
        <text>This node should act as egress node for MLDP inband signalling</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="mhop-bfd-port">
      <description>
        <text>Use port number 4784 for MPLS-BFD as per RFC5884</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="no-backup">
      <description>
        <text>This prefix should not have backup</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="default-action">
      <description>
        <text>Set default policy action</text>
      </description>
      <type name="enumeration">
        <enum name="accept">
          <description>
            <text>Accept a route</text>
          </description>
        </enum>
        <enum name="reject">
          <description>
            <text>Reject a route</text>
          </description>
        </enum>
      </type>
    </leaf>
    <leaf name="next">
      <description>
        <text>Skip to next policy or term</text>
      </description>
      <type name="enumeration">
        <enum name="policy">
          <description>
            <text>Skip to next policy filter</text>
          </description>
        </enum>
        <enum name="term">
          <description>
            <text>Skip to next term in a policy filter</text>
          </description>
        </enum>
      </type>
    </leaf>
    <choice name="accept_reject">
      <case name="case_1">
        <leaf name="accept">
          <description>
            <text>Accept a route</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
      <case name="case_2">
        <leaf name="reject">
          <description>
            <text>Reject a route</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
    </choice>
    <container name="bgp-output-queue-priority">
      <description>
        <text>Set the BGP Update output queue priority.</text>
      </description>
      <choice name="class">
        <case name="case_1">
          <leaf name="priority">
            <description>
              <text>Output queue priority; higher is better</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="1 .. 16"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="expedited">
            <description>
              <text>Expedited queue; highest priority</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
    </container>
    <leaf name="multipath-resolve">
      <description>
        <text>Use all paths for resolution over this prefix</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="source-routing-path-template">
      <description>
        <text>Spring-te template to apply</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="label-allocation-fallback-reject">
      <description>
        <text>Suppress prefix export when label allocation fails</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="resolution-map">
      <description>
        <text>Set resolution map modes</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="ignore-service-label">
      <description>
        <text>Ignore service labels</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="request-long-lived-ack">
      <description>
        <text>Advertise route after forwarding is programmed</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="send-withdrawal-on-route-change">
      <description>
        <text>Withdraw route if change is not acked from forwarding</text>
      </description>
      <type name="empty"/>
    </leaf>
  </grouping>
  <grouping name="control_rtf_prefix_list_type">
    <description>
      <text>RTF prefix list</text>
    </description>
    <leaf name="name">
      <description>
        <text>Name of rtf-prefix-list of routes to match</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
  </grouping>
  <grouping name="control_source_address_filter_list_type">
    <leaf name="name">
      <description>
        <text>Name of source-address-filter-list of routes to match</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
  </grouping>
  <grouping name="control_source_address_filter_type">
    <leaf name="address">
      <description>
        <text>IP address or hostname</text>
      </description>
      <type name="jt:ipprefix"/>
    </leaf>
    <leaf name="choice-ident">
      <type name="enumeration">
        <enum name="exact"/>
        <enum name="longer"/>
        <enum name="orlonger"/>
        <enum name="upto"/>
        <enum name="through"/>
        <enum name="prefix-length-range"/>
        <enum name="apply-advanced"/>
        <enum name="metric"/>
        <enum name="metric2"/>
        <enum name="metric3"/>
        <enum name="metric4"/>
        <enum name="tag"/>
        <enum name="tag2"/>
        <enum name="preference"/>
        <enum name="preference2"/>
        <enum name="color"/>
        <enum name="color2"/>
        <enum name="local-preference"/>
        <enum name="priority"/>
        <enum name="prefix-segment"/>
        <enum name="label-allocation"/>
        <enum name="add-path"/>
        <enum name="validation-state"/>
        <enum name="origin"/>
        <enum name="aigp-originate"/>
        <enum name="aigp-adjust"/>
        <enum name="community"/>
        <enum name="tunnel-attribute"/>
        <enum name="damping"/>
        <enum name="aggregate-bandwidth"/>
        <enum name="limit-bandwidth"/>
        <enum name="no-entropy-label-capability"/>
        <enum name="as-path-prepend"/>
        <enum name="as-path-expand"/>
        <enum name="next-hop"/>
        <enum name="install-nexthop"/>
        <enum name="trace"/>
        <enum name="external"/>
        <enum name="load-balance"/>
        <enum name="no-route-localize"/>
        <enum name="install-to-fib"/>
        <enum name="analyze"/>
        <enum name="class"/>
        <enum name="destination-class"/>
        <enum name="source-class"/>
        <enum name="forwarding-class"/>
        <enum name="map-to-interface"/>
        <enum name="ssm-source"/>
        <enum name="p2mp-lsp-root"/>
        <enum name="cos-next-hop-map"/>
        <enum name="dynamic-tunnel-attributes"/>
        <enum name="tunnel-end-point-address"/>
        <enum name="selected-mldp-egress"/>
        <enum name="mhop-bfd-port"/>
        <enum name="no-backup"/>
        <enum name="default-action"/>
        <enum name="next"/>
        <enum name="accept_reject"/>
        <enum name="bgp-output-queue-priority"/>
        <enum name="multipath-resolve"/>
        <enum name="source-routing-path-template"/>
        <enum name="label-allocation-fallback-reject"/>
        <enum name="resolution-map"/>
        <enum name="ignore-service-label"/>
        <enum name="request-long-lived-ack"/>
        <enum name="send-withdrawal-on-route-change"/>
      </type>
    </leaf>
    <leaf name="choice-value">
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <container name="metric">
      <description>
        <text>Metric value</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="metric">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_4">
          <container name="igp">
            <presence value="enable igp"/>
            <description>
              <text>Track the IGP metric (BGP only)</text>
            </description>
            <leaf name="metric_offset">
              <description>
                <text>Metric offset for MED</text>
              </description>
              <type name="union">
                <type name="int32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
        <case name="case_5">
          <container name="minimum-igp">
            <presence value="enable minimum-igp"/>
            <description>
              <text>Track the minimum IGP metric (BGP only)</text>
            </description>
            <leaf name="metric_offset">
              <description>
                <text>Metric offset for MED</text>
              </description>
              <type name="union">
                <type name="int32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
        <case name="case_6">
          <container name="expression">
            <description>
              <text>Calculate value based on route metric and metric2</text>
            </description>
            <uses name="metric_expression_type"/>
          </container>
        </case>
        <case name="case_7">
          <leaf name="aigp">
            <description>
              <text>Use aigp, if it exists, to set the IGP metric</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_8">
          <container name="effective-aigp">
            <presence value="enable effective-aigp"/>
            <description>
              <text>Track the effective AIGP metric (BGP only)</text>
            </description>
            <leaf name="metric_offset">
              <description>
                <text>Metric offset for MED</text>
              </description>
              <type name="union">
                <type name="int32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
        <case name="case_9">
          <container name="minimum-effective-aigp">
            <presence value="enable minimum-effective-aigp"/>
            <description>
              <text>Track the minimum effective AIGP metric (BGP only)</text>
            </description>
            <leaf name="metric_offset">
              <description>
                <text>Metric offset for MED</text>
              </description>
              <type name="union">
                <type name="int32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
      </choice>
    </container>
    <container name="metric2">
      <description>
        <text>Metric value 2</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="metric2">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="metric3">
      <description>
        <text>Metric value 3</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="metric3">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="metric4">
      <description>
        <text>Metric value 4</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="metric4">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="tag">
      <description>
        <text>Tag string</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="tag">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="tag2">
      <description>
        <text>Tag string 2</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="tag2">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="preference">
      <description>
        <text>Preference value</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="preference">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="preference2">
      <description>
        <text>Preference value 2</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="preference2">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="color">
      <description>
        <text>Color (preference) value</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="color">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="color2">
      <description>
        <text>Color (preference) value 2</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="color2">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="local-preference">
      <description>
        <text>Local preference associated with a route</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="local-preference">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <leaf name="priority">
      <description>
        <text>Set priority for route installation</text>
      </description>
      <type name="enumeration">
        <enum name="high">
          <description>
            <text>Set priority to high</text>
          </description>
        </enum>
        <enum name="medium">
          <description>
            <text>Set priority to medium</text>
          </description>
        </enum>
        <enum name="low">
          <description>
            <text>Set priority to low</text>
          </description>
        </enum>
      </type>
    </leaf>
    <container name="prefix-segment">
      <description>
        <text>Set prefix segment attributes</text>
      </description>
      <uses name="apply-advanced"/>
      <list name="algorithm">
        <key value="name"/>
        <description>
          <text>Set prefix segment attributes for strict/flex algorithm </text>
        </description>
        <max-elements value="15"/>
        <leaf name="name">
          <description>
            <text>Set prefix segment for strict/flex algorithm</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 255"/>
            </type>
          </type>
        </leaf>
        <leaf name="index">
          <description>
            <text>Set prefix segment index id</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="0 .. 199999"/>
            </type>
          </type>
        </leaf>
        <leaf name="node-segment">
          <description>
            <text>Set node segment flag for this prefix segment</text>
          </description>
          <type name="empty"/>
        </leaf>
      </list>
      <leaf name="index">
        <description>
          <text>Set prefix segment index id</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="0 .. 199999"/>
          </type>
        </type>
      </leaf>
      <leaf name="node-segment">
        <description>
          <text>Set node segment flag for default prefix segment</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <leaf name="label-allocation">
      <description>
        <text>Set label allocation mode</text>
      </description>
      <type name="enumeration">
        <enum name="per-table">
          <description>
            <text>Set per-table label allocation mode</text>
          </description>
        </enum>
        <enum name="per-nexthop">
          <description>
            <text>Set per-nexthop label allocation mode</text>
          </description>
        </enum>
        <enum name="per-table-localize">
          <description>
            <text>Set per-table-localize label allocation mode</text>
          </description>
        </enum>
      </type>
    </leaf>
    <container name="add-path">
      <description>
        <text>Set BGP add-path attributes</text>
      </description>
      <leaf name="send-count">
        <description>
          <text>Number of add-paths sent</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="2 .. 64"/>
          </type>
        </type>
      </leaf>
    </container>
    <leaf name="validation-state">
      <description>
        <text>Set validation-state of a route</text>
      </description>
      <type name="enumeration">
        <enum name="valid">
          <description>
            <text>Set validaton-state to valid</text>
          </description>
        </enum>
        <enum name="invalid">
          <description>
            <text>Set validation-state to invalid</text>
          </description>
        </enum>
        <enum name="unknown">
          <description>
            <text>Set validation-state to unknown</text>
          </description>
        </enum>
      </type>
    </leaf>
    <leaf name="origin">
      <description>
        <text>BGP path origin</text>
      </description>
      <type name="enumeration">
        <enum name="igp">
          <description>
            <text>Path originated in the local IGP</text>
          </description>
        </enum>
        <enum name="egp">
          <description>
            <text>Path originated in another AS</text>
          </description>
        </enum>
        <enum name="incomplete">
          <description>
            <text>Path was learned by some other means</text>
          </description>
        </enum>
      </type>
    </leaf>
    <container name="aigp-originate">
      <presence value="enable aigp-originate"/>
      <description>
        <text>Originate a BGP AIGP attribute</text>
      </description>
      <leaf name="distance">
        <description>
          <text>AIGP distance</text>
        </description>
        <type name="union">
          <type name="uint32"/>
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
        </type>
      </leaf>
    </container>
    <container name="aigp-adjust">
      <description>
        <text>Adjust a BGP AIGP attribute</text>
      </description>
      <choice name="math-op">
        <case name="case_1">
          <leaf name="add">
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="subtract">
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="multiply">
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_4">
          <leaf name="divide">
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
      <choice name="adjust-value">
        <case name="case_1">
          <leaf name="user-value">
            <description>
              <text>Adjustment value</text>
            </description>
            <type name="union">
              <type name="uint64"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="distance-to-protocol-nexthop">
            <description>
              <text>Metric2</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
    </container>
    <list name="community">
      <key value="choice-ident choice-value community-name"/>
      <ordered-by value="user"/>
      <description>
        <text>BGP community properties associated with a route</text>
      </description>
      <leaf name="choice-ident">
        <type name="enumeration">
          <enum name="equal-literal"/>
          <enum name="set"/>
          <enum name="plus-literal"/>
          <enum name="add"/>
          <enum name="minus-literal"/>
          <enum name="delete"/>
          <enum name="community-name"/>
        </type>
      </leaf>
      <leaf name="choice-value">
        <type name="string"/>
      </leaf>
      <leaf name="community-name">
        <description>
          <text>Name to identify a BGP community</text>
        </description>
        <type name="string"/>
      </leaf>
    </list>
    <list name="tunnel-attribute">
      <key value="choice-ident choice-value tunnel-attribute-name"/>
      <ordered-by value="user"/>
      <description>
        <text>BGP tunnel attribute associated with a route</text>
      </description>
      <leaf name="choice-ident">
        <type name="enumeration">
          <enum name="set"/>
          <enum name="remove"/>
          <enum name="tunnel-attribute-name"/>
        </type>
      </leaf>
      <leaf name="choice-value">
        <type name="string"/>
      </leaf>
      <leaf name="tunnel-attribute-name">
        <description>
          <text>Name of a tunnel attribute , or 'all'</text>
        </description>
        <type name="string"/>
      </leaf>
    </list>
    <leaf name="damping">
      <description>
        <text>Define BGP route flap damping parameters</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="aggregate-bandwidth">
      <description>
        <text>Advertise aggregate outbound link bandwidth</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="limit-bandwidth">
      <description>
        <text>Limit advertised aggregate outbound link bandwidth</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="0 .. 4294967295"/>
        </type>
      </type>
    </leaf>
    <leaf name="no-entropy-label-capability">
      <description>
        <text>Don't advertise entropy label capability</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="as-path-prepend">
      <description>
        <text>Prepend AS numbers to an AS path (BGP only)</text>
      </description>
      <type name="string"/>
    </leaf>
    <container name="as-path-expand">
      <description>
        <text>Prepend AS numbers prior to adding local-as (BGP only)</text>
      </description>
      <choice name="aspath_exp_value">
        <case name="case_1">
          <container name="last-as">
            <presence value="enable last-as"/>
            <description>
              <text>Prepend last AS</text>
            </description>
            <leaf name="count">
              <description>
                <text>Repeat count</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 32"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
        <case name="case_2">
          <leaf name="aspath">
            <description>
              <text>AS path string</text>
            </description>
            <type name="string"/>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="next-hop">
      <description>
        <text>Set the address of the next-hop router</text>
      </description>
      <choice name="nexthop_value">
        <case name="case_1">
          <leaf name="self">
            <description>
              <text>Use a local address as the next-hop address</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="peer-address">
            <description>
              <text>Use the remote peer address as the next-hop address</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="address">
            <description>
              <text>Next-hop address</text>
            </description>
            <type name="jt:ipaddr"/>
          </leaf>
        </case>
        <case name="case_4">
          <leaf name="reject">
            <description>
              <text>Use a reject next hop</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_5">
          <leaf name="discard">
            <description>
              <text>Use a discard next hop</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_6">
          <leaf name="next-table">
            <description>
              <text>Perform a forwarding lookup in the specified table</text>
            </description>
            <type name="string"/>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="install-nexthop">
      <description>
        <text>Choose the next hop to be used for forwarding</text>
      </description>
      <choice name="strict_type">
        <case name="case_1">
          <leaf name="strict">
            <description>
              <text>Do not use any other available next hops</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="strict-named-lsp">
            <description>
              <text>Do not use any other non-lsp next hops</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
      <choice name="nexthop-value">
        <case name="case_1">
          <leaf-list name="lsp">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop LSP name</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </case>
        <case name="case_2">
          <leaf-list name="lsp-regex">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop LSP name regular expression</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </case>
        <case name="case_3">
          <leaf-list name="static-lsp">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop static LSP name</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </case>
        <case name="case_4">
          <leaf-list name="static-lsp-regex">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop static LSP name regular expression</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </case>
        <case name="case_5">
          <leaf name="non-lsp-nexthop">
            <description>
              <text>Next-hop with non-lsp</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_6">
          <leaf name="non-labelled-nexthop">
            <description>
              <text>Next-hop without tag</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
      <container name="except">
        <description>
          <text>Do not choose to install matching next hops</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="nexthop-value">
          <case name="case_1">
            <leaf-list name="lsp">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop LSP name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="lsp-regex">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop LSP name regular expression</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_3">
            <leaf-list name="static-lsp">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop static LSP name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_4">
            <leaf-list name="static-lsp-regex">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop static LSP name regular expression</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_5">
            <leaf name="non-lsp-nexthop">
              <description>
                <text>Next-hop with non-lsp</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_6">
            <leaf name="non-labelled-nexthop">
              <description>
                <text>Next-hop without tag</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
        <container name="fallback">
          <description>
            <text>Backup option</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="nexthop-value">
            <case name="case_1">
              <leaf-list name="lsp">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop LSP name</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_2">
              <leaf-list name="lsp-regex">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop LSP name regular expression</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_3">
              <leaf-list name="static-lsp">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop static LSP name</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_4">
              <leaf-list name="static-lsp-regex">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop static LSP name regular expression</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_5">
              <leaf name="non-lsp-nexthop">
                <description>
                  <text>Next-hop with non-lsp</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_6">
              <leaf name="non-labelled-nexthop">
                <description>
                  <text>Next-hop without tag</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
          <container name="except">
            <description>
              <text>Do not choose to install matching next hops</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="nexthop-value">
              <case name="case_1">
                <leaf-list name="lsp">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop LSP name</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_2">
                <leaf-list name="lsp-regex">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop LSP name regular expression</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_3">
                <leaf-list name="static-lsp">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop static LSP name</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_4">
                <leaf-list name="static-lsp-regex">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop static LSP name regular expression</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_5">
                <leaf name="non-lsp-nexthop">
                  <description>
                    <text>Next-hop with non-lsp</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_6">
                <leaf name="non-labelled-nexthop">
                  <description>
                    <text>Next-hop without tag</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
            </choice>
          </container>
        </container>
      </container>
      <container name="fallback">
        <description>
          <text>Backup option </text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="nexthop-value">
          <case name="case_1">
            <leaf-list name="lsp">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop LSP name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="lsp-regex">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop LSP name regular expression</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_3">
            <leaf-list name="static-lsp">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop static LSP name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_4">
            <leaf-list name="static-lsp-regex">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop static LSP name regular expression</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_5">
            <leaf name="non-lsp-nexthop">
              <description>
                <text>Next-hop with non-lsp</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_6">
            <leaf name="non-labelled-nexthop">
              <description>
                <text>Next-hop without tag</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
        <container name="except">
          <description>
            <text>Do not choose to install matching next hops</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="nexthop-value">
            <case name="case_1">
              <leaf-list name="lsp">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop LSP name</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_2">
              <leaf-list name="lsp-regex">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop LSP name regular expression</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_3">
              <leaf-list name="static-lsp">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop static LSP name</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_4">
              <leaf-list name="static-lsp-regex">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop static LSP name regular expression</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_5">
              <leaf name="non-lsp-nexthop">
                <description>
                  <text>Next-hop with non-lsp</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_6">
              <leaf name="non-labelled-nexthop">
                <description>
                  <text>Next-hop without tag</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
        </container>
      </container>
    </container>
    <leaf name="trace">
      <description>
        <text>Log matches to a trace file</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="external">
      <presence value="enable external"/>
      <description>
        <text>External route</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="type">
        <description>
          <text>OSPF external metric type</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="int32">
            <range value="1 .. 2"/>
          </type>
        </type>
      </leaf>
      <leaf name="nssa-only">
        <description>
          <text>Clear P-bit on lsa type 7</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <container name="load-balance">
      <description>
        <text>Type of load balancing in forwarding table</text>
      </description>
      <choice name="load_balance_type">
        <case name="case_1">
          <leaf name="per-packet">
            <description>
              <text>Load balance on a per-packet basis</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2"/>
        <case name="case_3"/>
        <case name="case_4">
          <leaf name="consistent-hash">
            <description>
              <text>Give a prefix consistent load-balancing</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_5"/>
        <case name="case_6"/>
      </choice>
    </container>
    <leaf name="analyze">
      <description>
        <text>Send to registered controllers for analysis</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="class">
      <description>
        <text>Set class-of-service parameters</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="destination-class">
      <description>
        <text>Set destination class in forwarding table</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="source-class">
      <description>
        <text>Set source class in forwarding table</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="forwarding-class">
      <description>
        <text>Set source or destination class in forwarding table</text>
      </description>
      <type name="string"/>
    </leaf>
    <container name="map-to-interface">
      <description>
        <text>Set output logical interface</text>
      </description>
      <choice name="map_to_interface_value">
        <case name="case_1">
          <leaf name="self">
            <description>
              <text>Map the interface to itself</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="interface">
            <description>
              <text>Output logical interface</text>
            </description>
            <type name="union">
              <type name="jt:interface-name"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <leaf-list name="ssm-source">
      <ordered-by value="user"/>
      <description>
        <text>List of Sources for SSM mapping</text>
      </description>
      <type name="jt:ipaddr"/>
    </leaf-list>
    <container name="p2mp-lsp-root">
      <description>
        <text>P2mp lsp root address</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="address">
        <description>
          <text>Ipv4 root address</text>
        </description>
        <type name="jt:ipv4addr"/>
      </leaf>
    </container>
    <leaf name="cos-next-hop-map">
      <description>
        <text>Set CoS-based next-hop map in forwarding table</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="dynamic-tunnel-attributes">
      <description>
        <text>Choose the dynamic tunnel attributes used for forwarding</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="tunnel-end-point-address">
      <description>
        <text>Set tunnel end-point address of tunnel</text>
      </description>
      <type name="jt:ipaddr"/>
    </leaf>
    <leaf name="selected-mldp-egress">
      <description>
        <text>This node should act as egress node for MLDP inband signalling</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="mhop-bfd-port">
      <description>
        <text>Use port number 4784 for MPLS-BFD as per RFC5884</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="no-backup">
      <description>
        <text>This prefix should not have backup</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="default-action">
      <description>
        <text>Set default policy action</text>
      </description>
      <type name="enumeration">
        <enum name="accept">
          <description>
            <text>Accept a route</text>
          </description>
        </enum>
        <enum name="reject">
          <description>
            <text>Reject a route</text>
          </description>
        </enum>
      </type>
    </leaf>
    <leaf name="next">
      <description>
        <text>Skip to next policy or term</text>
      </description>
      <type name="enumeration">
        <enum name="policy">
          <description>
            <text>Skip to next policy filter</text>
          </description>
        </enum>
        <enum name="term">
          <description>
            <text>Skip to next term in a policy filter</text>
          </description>
        </enum>
      </type>
    </leaf>
    <choice name="accept_reject">
      <case name="case_1">
        <leaf name="accept">
          <description>
            <text>Accept a route</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
      <case name="case_2">
        <leaf name="reject">
          <description>
            <text>Reject a route</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
    </choice>
    <container name="bgp-output-queue-priority">
      <description>
        <text>Set the BGP Update output queue priority.</text>
      </description>
      <choice name="class">
        <case name="case_1">
          <leaf name="priority">
            <description>
              <text>Output queue priority; higher is better</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="1 .. 16"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="expedited">
            <description>
              <text>Expedited queue; highest priority</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
    </container>
    <leaf name="multipath-resolve">
      <description>
        <text>Use all paths for resolution over this prefix</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="source-routing-path-template">
      <description>
        <text>Spring-te template to apply</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="label-allocation-fallback-reject">
      <description>
        <text>Suppress prefix export when label allocation fails</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="resolution-map">
      <description>
        <text>Set resolution map modes</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="ignore-service-label">
      <description>
        <text>Ignore service labels</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="request-long-lived-ack">
      <description>
        <text>Advertise route after forwarding is programmed</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="send-withdrawal-on-route-change">
      <description>
        <text>Withdraw route if change is not acked from forwarding</text>
      </description>
      <type name="empty"/>
    </leaf>
  </grouping>
  <grouping name="mac_addr_list_items">
    <leaf name="name">
      <description>
        <text>Mac Address</text>
      </description>
      <type name="jt:mac-addr"/>
    </leaf>
    <uses name="apply-advanced"/>
  </grouping>
  <grouping name="macro-data-type">
    <leaf name="name">
      <description>
        <text>Keyword part of the keyword-value pair</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="value">
      <description>
        <text>Value part of the keyword-value pair</text>
      </description>
      <type name="string"/>
    </leaf>
  </grouping>
  <grouping name="metric_expression_type">
    <uses name="apply-advanced"/>
    <container name="metric">
      <description>
        <text>Parameters for metric attribute</text>
      </description>
      <leaf name="multiplier">
        <description>
          <text>Coefficient for metric attribute</text>
        </description>
        <type name="decimal64">
          <fraction-digits value="9"/>
        </type>
      </leaf>
      <leaf name="offset">
        <description>
          <text>Offset for metric attribute</text>
        </description>
        <type name="union">
          <type name="int32"/>
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
        </type>
      </leaf>
    </container>
    <container name="metric2">
      <description>
        <text>Parameters for metric2 attribute</text>
      </description>
      <leaf name="multiplier">
        <description>
          <text>Coefficient for metric2 attribute</text>
        </description>
        <default value="1.0"/>
        <type name="decimal64">
          <fraction-digits value="9"/>
        </type>
      </leaf>
      <leaf name="offset">
        <description>
          <text>Offset for metric2 attribute</text>
        </description>
        <type name="union">
          <type name="int32"/>
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
        </type>
      </leaf>
    </container>
  </grouping>
  <grouping name="prefix_list_items">
    <leaf name="name">
      <description>
        <text>Address prefix</text>
      </description>
      <type name="jt:ipprefix-only"/>
    </leaf>
    <uses name="apply-advanced"/>
  </grouping>
  <grouping name="route_filter_list_items">
    <leaf name="address">
      <description>
        <text>IP address or hostname</text>
      </description>
      <type name="jt:ipprefix"/>
    </leaf>
    <leaf name="choice-ident">
      <type name="enumeration">
        <enum name="exact"/>
        <enum name="longer"/>
        <enum name="orlonger"/>
        <enum name="upto"/>
        <enum name="through"/>
        <enum name="prefix-length-range"/>
        <enum name="address-mask"/>
        <enum name="apply-advanced"/>
        <enum name="label"/>
        <enum name="get-route-range"/>
        <enum name="metric"/>
        <enum name="metric2"/>
        <enum name="metric3"/>
        <enum name="metric4"/>
        <enum name="tag"/>
        <enum name="tag2"/>
        <enum name="preference"/>
        <enum name="preference2"/>
        <enum name="color"/>
        <enum name="color2"/>
        <enum name="local-preference"/>
        <enum name="priority"/>
        <enum name="prefix-segment"/>
        <enum name="label-allocation"/>
        <enum name="add-path"/>
        <enum name="validation-state"/>
        <enum name="origin"/>
        <enum name="aigp-originate"/>
        <enum name="aigp-adjust"/>
        <enum name="community"/>
        <enum name="tunnel-attribute"/>
        <enum name="damping"/>
        <enum name="aggregate-bandwidth"/>
        <enum name="limit-bandwidth"/>
        <enum name="no-entropy-label-capability"/>
        <enum name="as-path-prepend"/>
        <enum name="as-path-expand"/>
        <enum name="next-hop"/>
        <enum name="install-nexthop"/>
        <enum name="trace"/>
        <enum name="external"/>
        <enum name="load-balance"/>
        <enum name="no-route-localize"/>
        <enum name="install-to-fib"/>
        <enum name="analyze"/>
        <enum name="class"/>
        <enum name="destination-class"/>
        <enum name="source-class"/>
        <enum name="forwarding-class"/>
        <enum name="map-to-interface"/>
        <enum name="ssm-source"/>
        <enum name="p2mp-lsp-root"/>
        <enum name="cos-next-hop-map"/>
        <enum name="dynamic-tunnel-attributes"/>
        <enum name="tunnel-end-point-address"/>
        <enum name="selected-mldp-egress"/>
        <enum name="mhop-bfd-port"/>
        <enum name="no-backup"/>
        <enum name="default-action"/>
        <enum name="next"/>
        <enum name="accept_reject"/>
        <enum name="bgp-output-queue-priority"/>
        <enum name="multipath-resolve"/>
        <enum name="source-routing-path-template"/>
        <enum name="label-allocation-fallback-reject"/>
        <enum name="resolution-map"/>
        <enum name="ignore-service-label"/>
        <enum name="request-long-lived-ack"/>
        <enum name="send-withdrawal-on-route-change"/>
      </type>
    </leaf>
    <leaf name="choice-value">
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <container name="label">
      <description>
        <text>Set label for BGP LU label allocation</text>
      </description>
      <choice name="label_value">
        <case name="case_1">
          <container name="range">
            <description>
              <text>Label range</text>
            </description>
            <choice name="range_value">
              <case name="case_1">
                <leaf name="range">
                  <description>
                    <text>Label range in &lt;start&gt;:&lt;end&gt; format</text>
                  </description>
                  <type name="string"/>
                </leaf>
              </case>
            </choice>
          </container>
        </case>
        <case name="case_2">
          <leaf name="label">
            <description>
              <text>Label value</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="0 .. 1048575"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <leaf name="get-route-range">
      <description>
        <text>Get the range</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="metric">
      <description>
        <text>Metric value</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="metric">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_4">
          <container name="igp">
            <presence value="enable igp"/>
            <description>
              <text>Track the IGP metric (BGP only)</text>
            </description>
            <leaf name="metric_offset">
              <description>
                <text>Metric offset for MED</text>
              </description>
              <type name="union">
                <type name="int32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
        <case name="case_5">
          <container name="minimum-igp">
            <presence value="enable minimum-igp"/>
            <description>
              <text>Track the minimum IGP metric (BGP only)</text>
            </description>
            <leaf name="metric_offset">
              <description>
                <text>Metric offset for MED</text>
              </description>
              <type name="union">
                <type name="int32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
        <case name="case_6">
          <container name="expression">
            <description>
              <text>Calculate value based on route metric and metric2</text>
            </description>
            <uses name="metric_expression_type"/>
          </container>
        </case>
        <case name="case_7">
          <leaf name="aigp">
            <description>
              <text>Use aigp, if it exists, to set the IGP metric</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_8">
          <container name="effective-aigp">
            <presence value="enable effective-aigp"/>
            <description>
              <text>Track the effective AIGP metric (BGP only)</text>
            </description>
            <leaf name="metric_offset">
              <description>
                <text>Metric offset for MED</text>
              </description>
              <type name="union">
                <type name="int32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
        <case name="case_9">
          <container name="minimum-effective-aigp">
            <presence value="enable minimum-effective-aigp"/>
            <description>
              <text>Track the minimum effective AIGP metric (BGP only)</text>
            </description>
            <leaf name="metric_offset">
              <description>
                <text>Metric offset for MED</text>
              </description>
              <type name="union">
                <type name="int32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
      </choice>
    </container>
    <container name="metric2">
      <description>
        <text>Metric value 2</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="metric2">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="metric3">
      <description>
        <text>Metric value 3</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="metric3">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="metric4">
      <description>
        <text>Metric value 4</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="metric4">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="tag">
      <description>
        <text>Tag string</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="tag">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="tag2">
      <description>
        <text>Tag string 2</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="tag2">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="preference">
      <description>
        <text>Preference value</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="preference">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="preference2">
      <description>
        <text>Preference value 2</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="preference2">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="color">
      <description>
        <text>Color (preference) value</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="color">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="color2">
      <description>
        <text>Color (preference) value 2</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="color2">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="local-preference">
      <description>
        <text>Local preference associated with a route</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="local-preference">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <leaf name="priority">
      <description>
        <text>Set priority for route installation</text>
      </description>
      <type name="enumeration">
        <enum name="high">
          <description>
            <text>Set priority to high</text>
          </description>
        </enum>
        <enum name="medium">
          <description>
            <text>Set priority to medium</text>
          </description>
        </enum>
        <enum name="low">
          <description>
            <text>Set priority to low</text>
          </description>
        </enum>
      </type>
    </leaf>
    <container name="prefix-segment">
      <description>
        <text>Set prefix segment attributes</text>
      </description>
      <uses name="apply-advanced"/>
      <list name="algorithm">
        <key value="name"/>
        <description>
          <text>Set prefix segment attributes for strict/flex algorithm </text>
        </description>
        <max-elements value="15"/>
        <leaf name="name">
          <description>
            <text>Set prefix segment for strict/flex algorithm</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 255"/>
            </type>
          </type>
        </leaf>
        <leaf name="index">
          <description>
            <text>Set prefix segment index id</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="0 .. 199999"/>
            </type>
          </type>
        </leaf>
        <leaf name="node-segment">
          <description>
            <text>Set node segment flag for this prefix segment</text>
          </description>
          <type name="empty"/>
        </leaf>
      </list>
      <leaf name="index">
        <description>
          <text>Set prefix segment index id</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="0 .. 199999"/>
          </type>
        </type>
      </leaf>
      <leaf name="node-segment">
        <description>
          <text>Set node segment flag for default prefix segment</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <leaf name="label-allocation">
      <description>
        <text>Set label allocation mode</text>
      </description>
      <type name="enumeration">
        <enum name="per-table">
          <description>
            <text>Set per-table label allocation mode</text>
          </description>
        </enum>
        <enum name="per-nexthop">
          <description>
            <text>Set per-nexthop label allocation mode</text>
          </description>
        </enum>
        <enum name="per-table-localize">
          <description>
            <text>Set per-table-localize label allocation mode</text>
          </description>
        </enum>
      </type>
    </leaf>
    <container name="add-path">
      <description>
        <text>Set BGP add-path attributes</text>
      </description>
      <leaf name="send-count">
        <description>
          <text>Number of add-paths sent</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="2 .. 64"/>
          </type>
        </type>
      </leaf>
    </container>
    <leaf name="validation-state">
      <description>
        <text>Set validation-state of a route</text>
      </description>
      <type name="enumeration">
        <enum name="valid">
          <description>
            <text>Set validaton-state to valid</text>
          </description>
        </enum>
        <enum name="invalid">
          <description>
            <text>Set validation-state to invalid</text>
          </description>
        </enum>
        <enum name="unknown">
          <description>
            <text>Set validation-state to unknown</text>
          </description>
        </enum>
      </type>
    </leaf>
    <leaf name="origin">
      <description>
        <text>BGP path origin</text>
      </description>
      <type name="enumeration">
        <enum name="igp">
          <description>
            <text>Path originated in the local IGP</text>
          </description>
        </enum>
        <enum name="egp">
          <description>
            <text>Path originated in another AS</text>
          </description>
        </enum>
        <enum name="incomplete">
          <description>
            <text>Path was learned by some other means</text>
          </description>
        </enum>
      </type>
    </leaf>
    <container name="aigp-originate">
      <presence value="enable aigp-originate"/>
      <description>
        <text>Originate a BGP AIGP attribute</text>
      </description>
      <leaf name="distance">
        <description>
          <text>AIGP distance</text>
        </description>
        <type name="union">
          <type name="uint32"/>
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
        </type>
      </leaf>
    </container>
    <container name="aigp-adjust">
      <description>
        <text>Adjust a BGP AIGP attribute</text>
      </description>
      <choice name="math-op">
        <case name="case_1">
          <leaf name="add">
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="subtract">
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="multiply">
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_4">
          <leaf name="divide">
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
      <choice name="adjust-value">
        <case name="case_1">
          <leaf name="user-value">
            <description>
              <text>Adjustment value</text>
            </description>
            <type name="union">
              <type name="uint64"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="distance-to-protocol-nexthop">
            <description>
              <text>Metric2</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
    </container>
    <list name="community">
      <key value="choice-ident choice-value community-name"/>
      <ordered-by value="user"/>
      <description>
        <text>BGP community properties associated with a route</text>
      </description>
      <leaf name="choice-ident">
        <type name="enumeration">
          <enum name="equal-literal"/>
          <enum name="set"/>
          <enum name="plus-literal"/>
          <enum name="add"/>
          <enum name="minus-literal"/>
          <enum name="delete"/>
          <enum name="community-name"/>
        </type>
      </leaf>
      <leaf name="choice-value">
        <type name="string"/>
      </leaf>
      <leaf name="community-name">
        <description>
          <text>Name to identify a BGP community</text>
        </description>
        <type name="string"/>
      </leaf>
    </list>
    <list name="tunnel-attribute">
      <key value="choice-ident choice-value tunnel-attribute-name"/>
      <ordered-by value="user"/>
      <description>
        <text>BGP tunnel attribute associated with a route</text>
      </description>
      <leaf name="choice-ident">
        <type name="enumeration">
          <enum name="set"/>
          <enum name="remove"/>
          <enum name="tunnel-attribute-name"/>
        </type>
      </leaf>
      <leaf name="choice-value">
        <type name="string"/>
      </leaf>
      <leaf name="tunnel-attribute-name">
        <description>
          <text>Name of a tunnel attribute , or 'all'</text>
        </description>
        <type name="string"/>
      </leaf>
    </list>
    <leaf name="damping">
      <description>
        <text>Define BGP route flap damping parameters</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="aggregate-bandwidth">
      <description>
        <text>Advertise aggregate outbound link bandwidth</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="limit-bandwidth">
      <description>
        <text>Limit advertised aggregate outbound link bandwidth</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="0 .. 4294967295"/>
        </type>
      </type>
    </leaf>
    <leaf name="no-entropy-label-capability">
      <description>
        <text>Don't advertise entropy label capability</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="as-path-prepend">
      <description>
        <text>Prepend AS numbers to an AS path (BGP only)</text>
      </description>
      <type name="string"/>
    </leaf>
    <container name="as-path-expand">
      <description>
        <text>Prepend AS numbers prior to adding local-as (BGP only)</text>
      </description>
      <choice name="aspath_exp_value">
        <case name="case_1">
          <container name="last-as">
            <presence value="enable last-as"/>
            <description>
              <text>Prepend last AS</text>
            </description>
            <leaf name="count">
              <description>
                <text>Repeat count</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 32"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
        <case name="case_2">
          <leaf name="aspath">
            <description>
              <text>AS path string</text>
            </description>
            <type name="string"/>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="next-hop">
      <description>
        <text>Set the address of the next-hop router</text>
      </description>
      <choice name="nexthop_value">
        <case name="case_1">
          <leaf name="self">
            <description>
              <text>Use a local address as the next-hop address</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="peer-address">
            <description>
              <text>Use the remote peer address as the next-hop address</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="address">
            <description>
              <text>Next-hop address</text>
            </description>
            <type name="jt:ipaddr"/>
          </leaf>
        </case>
        <case name="case_4">
          <leaf name="reject">
            <description>
              <text>Use a reject next hop</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_5">
          <leaf name="discard">
            <description>
              <text>Use a discard next hop</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_6">
          <leaf name="next-table">
            <description>
              <text>Perform a forwarding lookup in the specified table</text>
            </description>
            <type name="string"/>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="install-nexthop">
      <description>
        <text>Choose the next hop to be used for forwarding</text>
      </description>
      <choice name="strict_type">
        <case name="case_1">
          <leaf name="strict">
            <description>
              <text>Do not use any other available next hops</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="strict-named-lsp">
            <description>
              <text>Do not use any other non-lsp next hops</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
      <choice name="nexthop-value">
        <case name="case_1">
          <leaf-list name="lsp">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop LSP name</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </case>
        <case name="case_2">
          <leaf-list name="lsp-regex">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop LSP name regular expression</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </case>
        <case name="case_3">
          <leaf-list name="static-lsp">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop static LSP name</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </case>
        <case name="case_4">
          <leaf-list name="static-lsp-regex">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop static LSP name regular expression</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </case>
        <case name="case_5">
          <leaf name="non-lsp-nexthop">
            <description>
              <text>Next-hop with non-lsp</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_6">
          <leaf name="non-labelled-nexthop">
            <description>
              <text>Next-hop without tag</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
      <container name="except">
        <description>
          <text>Do not choose to install matching next hops</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="nexthop-value">
          <case name="case_1">
            <leaf-list name="lsp">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop LSP name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="lsp-regex">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop LSP name regular expression</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_3">
            <leaf-list name="static-lsp">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop static LSP name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_4">
            <leaf-list name="static-lsp-regex">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop static LSP name regular expression</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_5">
            <leaf name="non-lsp-nexthop">
              <description>
                <text>Next-hop with non-lsp</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_6">
            <leaf name="non-labelled-nexthop">
              <description>
                <text>Next-hop without tag</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
        <container name="fallback">
          <description>
            <text>Backup option</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="nexthop-value">
            <case name="case_1">
              <leaf-list name="lsp">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop LSP name</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_2">
              <leaf-list name="lsp-regex">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop LSP name regular expression</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_3">
              <leaf-list name="static-lsp">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop static LSP name</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_4">
              <leaf-list name="static-lsp-regex">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop static LSP name regular expression</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_5">
              <leaf name="non-lsp-nexthop">
                <description>
                  <text>Next-hop with non-lsp</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_6">
              <leaf name="non-labelled-nexthop">
                <description>
                  <text>Next-hop without tag</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
          <container name="except">
            <description>
              <text>Do not choose to install matching next hops</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="nexthop-value">
              <case name="case_1">
                <leaf-list name="lsp">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop LSP name</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_2">
                <leaf-list name="lsp-regex">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop LSP name regular expression</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_3">
                <leaf-list name="static-lsp">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop static LSP name</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_4">
                <leaf-list name="static-lsp-regex">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop static LSP name regular expression</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_5">
                <leaf name="non-lsp-nexthop">
                  <description>
                    <text>Next-hop with non-lsp</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_6">
                <leaf name="non-labelled-nexthop">
                  <description>
                    <text>Next-hop without tag</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
            </choice>
          </container>
        </container>
      </container>
      <container name="fallback">
        <description>
          <text>Backup option </text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="nexthop-value">
          <case name="case_1">
            <leaf-list name="lsp">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop LSP name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="lsp-regex">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop LSP name regular expression</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_3">
            <leaf-list name="static-lsp">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop static LSP name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_4">
            <leaf-list name="static-lsp-regex">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop static LSP name regular expression</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_5">
            <leaf name="non-lsp-nexthop">
              <description>
                <text>Next-hop with non-lsp</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_6">
            <leaf name="non-labelled-nexthop">
              <description>
                <text>Next-hop without tag</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
        <container name="except">
          <description>
            <text>Do not choose to install matching next hops</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="nexthop-value">
            <case name="case_1">
              <leaf-list name="lsp">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop LSP name</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_2">
              <leaf-list name="lsp-regex">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop LSP name regular expression</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_3">
              <leaf-list name="static-lsp">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop static LSP name</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_4">
              <leaf-list name="static-lsp-regex">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop static LSP name regular expression</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_5">
              <leaf name="non-lsp-nexthop">
                <description>
                  <text>Next-hop with non-lsp</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_6">
              <leaf name="non-labelled-nexthop">
                <description>
                  <text>Next-hop without tag</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
        </container>
      </container>
    </container>
    <leaf name="trace">
      <description>
        <text>Log matches to a trace file</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="external">
      <presence value="enable external"/>
      <description>
        <text>External route</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="type">
        <description>
          <text>OSPF external metric type</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="int32">
            <range value="1 .. 2"/>
          </type>
        </type>
      </leaf>
      <leaf name="nssa-only">
        <description>
          <text>Clear P-bit on lsa type 7</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <container name="load-balance">
      <description>
        <text>Type of load balancing in forwarding table</text>
      </description>
      <choice name="load_balance_type">
        <case name="case_1">
          <leaf name="per-packet">
            <description>
              <text>Load balance on a per-packet basis</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2"/>
        <case name="case_3"/>
        <case name="case_4">
          <leaf name="consistent-hash">
            <description>
              <text>Give a prefix consistent load-balancing</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_5"/>
        <case name="case_6"/>
      </choice>
    </container>
    <leaf name="analyze">
      <description>
        <text>Send to registered controllers for analysis</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="class">
      <description>
        <text>Set class-of-service parameters</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="destination-class">
      <description>
        <text>Set destination class in forwarding table</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="source-class">
      <description>
        <text>Set source class in forwarding table</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="forwarding-class">
      <description>
        <text>Set source or destination class in forwarding table</text>
      </description>
      <type name="string"/>
    </leaf>
    <container name="map-to-interface">
      <description>
        <text>Set output logical interface</text>
      </description>
      <choice name="map_to_interface_value">
        <case name="case_1">
          <leaf name="self">
            <description>
              <text>Map the interface to itself</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="interface">
            <description>
              <text>Output logical interface</text>
            </description>
            <type name="union">
              <type name="jt:interface-name"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <leaf-list name="ssm-source">
      <ordered-by value="user"/>
      <description>
        <text>List of Sources for SSM mapping</text>
      </description>
      <type name="jt:ipaddr"/>
    </leaf-list>
    <container name="p2mp-lsp-root">
      <description>
        <text>P2mp lsp root address</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="address">
        <description>
          <text>Ipv4 root address</text>
        </description>
        <type name="jt:ipv4addr"/>
      </leaf>
    </container>
    <leaf name="cos-next-hop-map">
      <description>
        <text>Set CoS-based next-hop map in forwarding table</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="dynamic-tunnel-attributes">
      <description>
        <text>Choose the dynamic tunnel attributes used for forwarding</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="tunnel-end-point-address">
      <description>
        <text>Set tunnel end-point address of tunnel</text>
      </description>
      <type name="jt:ipaddr"/>
    </leaf>
    <leaf name="selected-mldp-egress">
      <description>
        <text>This node should act as egress node for MLDP inband signalling</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="mhop-bfd-port">
      <description>
        <text>Use port number 4784 for MPLS-BFD as per RFC5884</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="no-backup">
      <description>
        <text>This prefix should not have backup</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="default-action">
      <description>
        <text>Set default policy action</text>
      </description>
      <type name="enumeration">
        <enum name="accept">
          <description>
            <text>Accept a route</text>
          </description>
        </enum>
        <enum name="reject">
          <description>
            <text>Reject a route</text>
          </description>
        </enum>
      </type>
    </leaf>
    <leaf name="next">
      <description>
        <text>Skip to next policy or term</text>
      </description>
      <type name="enumeration">
        <enum name="policy">
          <description>
            <text>Skip to next policy filter</text>
          </description>
        </enum>
        <enum name="term">
          <description>
            <text>Skip to next term in a policy filter</text>
          </description>
        </enum>
      </type>
    </leaf>
    <choice name="accept_reject">
      <case name="case_1">
        <leaf name="accept">
          <description>
            <text>Accept a route</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
      <case name="case_2">
        <leaf name="reject">
          <description>
            <text>Reject a route</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
    </choice>
    <container name="bgp-output-queue-priority">
      <description>
        <text>Set the BGP Update output queue priority.</text>
      </description>
      <choice name="class">
        <case name="case_1">
          <leaf name="priority">
            <description>
              <text>Output queue priority; higher is better</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="1 .. 16"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="expedited">
            <description>
              <text>Expedited queue; highest priority</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
    </container>
    <leaf name="multipath-resolve">
      <description>
        <text>Use all paths for resolution over this prefix</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="source-routing-path-template">
      <description>
        <text>Spring-te template to apply</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="label-allocation-fallback-reject">
      <description>
        <text>Suppress prefix export when label allocation fails</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="resolution-map">
      <description>
        <text>Set resolution map modes</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="ignore-service-label">
      <description>
        <text>Ignore service labels</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="request-long-lived-ack">
      <description>
        <text>Advertise route after forwarding is programmed</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="send-withdrawal-on-route-change">
      <description>
        <text>Withdraw route if change is not acked from forwarding</text>
      </description>
      <type name="empty"/>
    </leaf>
  </grouping>
  <grouping name="rtf_prefix_list_items">
    <leaf name="name">
      <description>
        <text>Family route-target prefix</text>
      </description>
      <type name="string">
        <length value="1 .. 63"/>
      </type>
    </leaf>
    <uses name="apply-advanced"/>
  </grouping>
  <grouping name="satellite-policy-options">
    <uses name="apply-advanced"/>
    <list name="extended-ports-template">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Extended ports template</text>
      </description>
      <leaf name="name">
        <type name="string">
          <length value="1 .. 32"/>
        </type>
      </leaf>
      <uses name="apply-advanced"/>
      <list name="pic">
        <key value="name"/>
        <description>
          <text>PIC attributes</text>
        </description>
        <uses name="satellite-pic-type"/>
      </list>
    </list>
    <list name="port-group-alias">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Port group alias</text>
      </description>
      <leaf name="name">
        <type name="string">
          <length value="1 .. 32"/>
        </type>
      </leaf>
      <uses name="apply-advanced"/>
      <list name="pic">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Satellite PIC information</text>
        </description>
        <leaf name="name">
          <description>
            <text>PIC identifier</text>
          </description>
          <type name="union">
            <type name="int32"/>
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <leaf-list name="port">
          <ordered-by value="user"/>
          <description>
            <text>Port id or range or all</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="0 .. 1024"/>
            </type>
          </type>
        </leaf-list>
      </list>
    </list>
    <list name="chassis-group-alias">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Chassis group alias</text>
      </description>
      <leaf name="name">
        <description>
          <text>Chassis group alias name</text>
        </description>
        <type name="string">
          <length value="1 .. 32"/>
        </type>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf name="prefer-primary">
        <description>
          <text>Primary mode chassis will be preferred</text>
        </description>
        <type name="empty"/>
      </leaf>
      <list name="chassis-id">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>List of chassis-ids</text>
        </description>
        <leaf name="name">
          <description>
            <text>Chassis ID</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 255"/>
            </type>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <container name="mode">
          <description>
            <text>Mode Primary or Backup</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="mode-choice">
            <case name="case_1">
              <leaf name="primary">
                <description>
                  <text>Primary Mode</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_2">
              <leaf name="backup">
                <description>
                  <text>Backup Mode</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
        </container>
        <list name="core-interface">
          <key value="name"/>
          <ordered-by value="user"/>
          <description>
            <text>Core interface</text>
          </description>
          <leaf name="name">
            <description>
              <text>Core interface name</text>
            </description>
            <type name="union">
              <type name="jt:interface-device"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
          <uses name="apply-advanced"/>
        </list>
      </list>
    </list>
    <list name="extended-ports-policy">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Define a extended-ports-policy</text>
      </description>
      <leaf name="name">
        <description>
          <text>Policy name</text>
        </description>
        <type name="string">
          <length value="1 .. 32"/>
        </type>
      </leaf>
      <uses name="apply-advanced"/>
      <list name="term">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Policy term</text>
        </description>
        <leaf name="name">
          <type name="string">
            <length value="1 .. 32"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <container name="from">
          <description>
            <text>Condition to match the satellite</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf-list name="product-model">
            <ordered-by value="user"/>
            <description>
              <text>Product Model Name</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf-list>
          <leaf name="extended-ports-template">
            <description>
              <text>Apply extended ports template to satellite matching conditions defined in this term</text>
            </description>
            <type name="string"/>
          </leaf>
        </container>
      </list>
    </list>
    <list name="candidate-uplink-port-policy">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Define a candidate uplink-port policy</text>
      </description>
      <leaf name="name">
        <description>
          <text>Policy name</text>
        </description>
        <type name="string">
          <length value="1 .. 32"/>
        </type>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf name="uplink-port-group">
        <description>
          <text>Uplink port group alias name</text>
        </description>
        <type name="string"/>
      </leaf>
      <leaf name="minimum-links">
        <description>
          <text>Minimum child links to keep extended-ports UP</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint16">
            <range value="1 .. 32"/>
          </type>
        </type>
      </leaf>
      <leaf name="holddown">
        <description>
          <text>Time to hold down after uplink failure</text>
        </description>
        <units name="seconds"/>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="1 .. 600"/>
          </type>
        </type>
      </leaf>
      <list name="term">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Policy term</text>
        </description>
        <leaf name="name">
          <type name="string">
            <length value="1 .. 32"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <container name="from">
          <description>
            <text>Condition to match the satellite</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf-list name="product-model">
            <ordered-by value="user"/>
            <description>
              <text>Product Model Name</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf-list>
          <leaf name="uplink-port-group">
            <description>
              <text>Uplink port group alias name</text>
            </description>
            <type name="string"/>
          </leaf>
          <leaf name="minimum-links">
            <description>
              <text>Minimum child links to keep extended-ports UP</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint16">
                <range value="1 .. 32"/>
              </type>
            </type>
          </leaf>
          <leaf name="holddown">
            <description>
              <text>Time to hold down after uplink failure</text>
            </description>
            <units name="seconds"/>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="1 .. 600"/>
              </type>
            </type>
          </leaf>
        </container>
      </list>
    </list>
    <list name="environment-monitoring-policy">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Define a environment monitoring policy</text>
      </description>
      <leaf name="name">
        <description>
          <text>Policy name</text>
        </description>
        <type name="string">
          <length value="1 .. 32"/>
        </type>
      </leaf>
      <uses name="apply-advanced"/>
      <container name="alarm">
        <presence value="enable alarm"/>
        <description>
          <text>Policy default alarm policy</text>
        </description>
        <uses name="apply-advanced"/>
        <leaf name="linkdown">
          <description>
            <text>Policy default linkdown alarm</text>
          </description>
          <type name="enumeration">
            <enum name="ignore">
              <description>
                <text>Ignore ethernet linkdown</text>
              </description>
            </enum>
            <enum name="red">
              <description>
                <text>Raise major alarm for ethernet linkdown</text>
              </description>
            </enum>
            <enum name="yellow">
              <description>
                <text>Raise minor alarm for ethernet linkdown</text>
              </description>
            </enum>
          </type>
        </leaf>
      </container>
      <list name="term">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Policy term</text>
        </description>
        <leaf name="name">
          <type name="string">
            <length value="1 .. 32"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <container name="from">
          <description>
            <text>Condition to match the satellite</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf-list name="product-model">
            <ordered-by value="user"/>
            <description>
              <text>Product Model Name</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf-list>
          <container name="alarm">
            <presence value="enable alarm"/>
            <description>
              <text>Term alarm policy</text>
            </description>
            <uses name="apply-advanced"/>
            <leaf name="linkdown">
              <description>
                <text>Set linkdown alarm</text>
              </description>
              <type name="enumeration">
                <enum name="ignore">
                  <description>
                    <text>Ignore ethernet linkdown</text>
                  </description>
                </enum>
                <enum name="red">
                  <description>
                    <text>Raise major alarm for ethernet linkdown</text>
                  </description>
                </enum>
                <enum name="yellow">
                  <description>
                    <text>Raise minor alarm for ethernet linkdown</text>
                  </description>
                </enum>
              </type>
            </leaf>
          </container>
        </container>
      </list>
    </list>
    <list name="forwarding-policy">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Define forwarding policy for extended ports</text>
      </description>
      <leaf name="name">
        <description>
          <text>Policy name</text>
        </description>
        <type name="string">
          <length value="1 .. 32"/>
        </type>
      </leaf>
      <uses name="apply-advanced"/>
      <list name="port-group-extended">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Define a extend port group mapping</text>
        </description>
        <uses name="port-extend-type"/>
      </list>
      <list name="term">
        <key value="name"/>
        <ordered-by value="user"/>
        <description>
          <text>Policy term</text>
        </description>
        <leaf name="name">
          <type name="string">
            <length value="1 .. 32"/>
          </type>
        </leaf>
        <uses name="apply-advanced"/>
        <container name="from">
          <description>
            <text>Condition to match the satellite</text>
          </description>
          <uses name="apply-advanced"/>
          <leaf-list name="product-model">
            <ordered-by value="user"/>
            <description>
              <text>Product Model Name</text>
            </description>
            <type name="string">
              <length value="1 .. 64"/>
            </type>
          </leaf-list>
          <list name="port-group-extended">
            <key value="name"/>
            <ordered-by value="user"/>
            <description>
              <text>Define a extend port group mapping</text>
            </description>
            <uses name="port-extend-type"/>
          </list>
        </container>
      </list>
    </list>
  </grouping>
  <grouping name="port-extend-type">
    <leaf name="name">
      <description>
        <text>Extended port group alias name policy applied on</text>
      </description>
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf name="filter">
      <description>
        <text>Assign a filter for uplink selection</text>
      </description>
      <type name="string"/>
    </leaf>
    <container name="port-group-uplink">
      <description>
        <text>Define a uplink port group mapping</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="port-group-uplink-alias">
        <description>
          <text>Uplink port group alias name used for uplink pinning mode</text>
        </description>
        <type name="string"/>
      </leaf>
      <leaf name="minimum-links">
        <description>
          <text>Minimum child links to keep extended-ports UP</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint16">
            <range value="1 .. 32"/>
          </type>
        </type>
      </leaf>
      <leaf name="holddown">
        <description>
          <text>Time to hold down after uplink failure</text>
        </description>
        <units name="seconds"/>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="1 .. 600"/>
          </type>
        </type>
      </leaf>
    </container>
    <container name="mirror-ingress">
      <description>
        <text>Define a ingress port mirror</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="port-group-mirror">
        <description>
          <text>Mirror port group alias name for local port mirroring</text>
        </description>
        <type name="string"/>
      </leaf>
    </container>
    <container name="mirror-egress">
      <description>
        <text>Define a egress port mirror</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="port-group-mirror">
        <description>
          <text>Mirror port group alias name for local port mirroring</text>
        </description>
        <type name="string"/>
      </leaf>
    </container>
  </grouping>
  <grouping name="satellite-pic-type">
    <leaf name="name">
      <description>
        <text>PIC slot number</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="0 .. 4"/>
        </type>
      </type>
    </leaf>
    <uses name="apply-advanced"/>
    <list name="port">
      <key value="name"/>
      <description>
        <text>Port number</text>
      </description>
      <uses name="satellite-pic-port-attr"/>
    </list>
    <list name="port-range">
      <key value="port-range-low port-range-high"/>
      <ordered-by value="user"/>
      <description>
        <text>Physical ports to channelize</text>
      </description>
      <leaf name="port-range-low">
        <description>
          <text>Port range low number</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="0 .. 127"/>
          </type>
        </type>
      </leaf>
      <leaf name="port-range-high">
        <description>
          <text>Port range high number</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="0 .. 127"/>
          </type>
        </type>
      </leaf>
      <uses name="apply-advanced"/>
      <leaf name="channel-speed">
        <description>
          <text>Port channel speed</text>
        </description>
        <type name="enumeration">
          <enum name="10g">
            <description>
              <text>Set the port speed to 10G</text>
            </description>
          </enum>
          <enum name="disable-auto-speed-detection">
            <description>
              <text>Disables automatic speed detection</text>
            </description>
          </enum>
        </type>
      </leaf>
    </list>
  </grouping>
  <grouping name="satellite-pic-port-attr">
    <leaf name="name">
      <description>
        <text>Port number</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="0 .. 127"/>
        </type>
      </type>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf name="channel-speed">
      <description>
        <text>Port channel speed</text>
      </description>
      <type name="enumeration">
        <enum name="10g">
          <description>
            <text>Set the port speed to 10G</text>
          </description>
        </enum>
        <enum name="25g">
          <description>
            <text>Set the port speed to 25G</text>
          </description>
        </enum>
        <enum name="50g">
          <description>
            <text>Set the port speed to 50G</text>
          </description>
        </enum>
        <enum name="disable-auto-speed-detection">
          <description>
            <text>Disables automatic speed detection</text>
          </description>
        </enum>
      </type>
    </leaf>
  </grouping>
  <grouping name="source_address_filter_list_items">
    <leaf name="address">
      <description>
        <text>IP address or hostname</text>
      </description>
      <type name="jt:ipprefix"/>
    </leaf>
    <leaf name="choice-ident">
      <type name="enumeration">
        <enum name="exact"/>
        <enum name="longer"/>
        <enum name="orlonger"/>
        <enum name="upto"/>
        <enum name="through"/>
        <enum name="prefix-length-range"/>
        <enum name="apply-advanced"/>
        <enum name="metric"/>
        <enum name="metric2"/>
        <enum name="metric3"/>
        <enum name="metric4"/>
        <enum name="tag"/>
        <enum name="tag2"/>
        <enum name="preference"/>
        <enum name="preference2"/>
        <enum name="color"/>
        <enum name="color2"/>
        <enum name="local-preference"/>
        <enum name="priority"/>
        <enum name="prefix-segment"/>
        <enum name="label-allocation"/>
        <enum name="add-path"/>
        <enum name="validation-state"/>
        <enum name="origin"/>
        <enum name="aigp-originate"/>
        <enum name="aigp-adjust"/>
        <enum name="community"/>
        <enum name="tunnel-attribute"/>
        <enum name="damping"/>
        <enum name="aggregate-bandwidth"/>
        <enum name="limit-bandwidth"/>
        <enum name="no-entropy-label-capability"/>
        <enum name="as-path-prepend"/>
        <enum name="as-path-expand"/>
        <enum name="next-hop"/>
        <enum name="install-nexthop"/>
        <enum name="trace"/>
        <enum name="external"/>
        <enum name="load-balance"/>
        <enum name="no-route-localize"/>
        <enum name="install-to-fib"/>
        <enum name="analyze"/>
        <enum name="class"/>
        <enum name="destination-class"/>
        <enum name="source-class"/>
        <enum name="forwarding-class"/>
        <enum name="map-to-interface"/>
        <enum name="ssm-source"/>
        <enum name="p2mp-lsp-root"/>
        <enum name="cos-next-hop-map"/>
        <enum name="dynamic-tunnel-attributes"/>
        <enum name="tunnel-end-point-address"/>
        <enum name="selected-mldp-egress"/>
        <enum name="mhop-bfd-port"/>
        <enum name="no-backup"/>
        <enum name="default-action"/>
        <enum name="next"/>
        <enum name="accept_reject"/>
        <enum name="bgp-output-queue-priority"/>
        <enum name="multipath-resolve"/>
        <enum name="source-routing-path-template"/>
        <enum name="label-allocation-fallback-reject"/>
        <enum name="resolution-map"/>
        <enum name="ignore-service-label"/>
        <enum name="request-long-lived-ack"/>
        <enum name="send-withdrawal-on-route-change"/>
      </type>
    </leaf>
    <leaf name="choice-value">
      <type name="string"/>
    </leaf>
    <uses name="apply-advanced"/>
    <container name="metric">
      <description>
        <text>Metric value</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="metric">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_4">
          <container name="igp">
            <presence value="enable igp"/>
            <description>
              <text>Track the IGP metric (BGP only)</text>
            </description>
            <leaf name="metric_offset">
              <description>
                <text>Metric offset for MED</text>
              </description>
              <type name="union">
                <type name="int32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
        <case name="case_5">
          <container name="minimum-igp">
            <presence value="enable minimum-igp"/>
            <description>
              <text>Track the minimum IGP metric (BGP only)</text>
            </description>
            <leaf name="metric_offset">
              <description>
                <text>Metric offset for MED</text>
              </description>
              <type name="union">
                <type name="int32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
        <case name="case_6">
          <container name="expression">
            <description>
              <text>Calculate value based on route metric and metric2</text>
            </description>
            <uses name="metric_expression_type"/>
          </container>
        </case>
        <case name="case_7">
          <leaf name="aigp">
            <description>
              <text>Use aigp, if it exists, to set the IGP metric</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_8">
          <container name="effective-aigp">
            <presence value="enable effective-aigp"/>
            <description>
              <text>Track the effective AIGP metric (BGP only)</text>
            </description>
            <leaf name="metric_offset">
              <description>
                <text>Metric offset for MED</text>
              </description>
              <type name="union">
                <type name="int32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
        <case name="case_9">
          <container name="minimum-effective-aigp">
            <presence value="enable minimum-effective-aigp"/>
            <description>
              <text>Track the minimum effective AIGP metric (BGP only)</text>
            </description>
            <leaf name="metric_offset">
              <description>
                <text>Metric offset for MED</text>
              </description>
              <type name="union">
                <type name="int32"/>
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
      </choice>
    </container>
    <container name="metric2">
      <description>
        <text>Metric value 2</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="metric2">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="metric3">
      <description>
        <text>Metric value 3</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="metric3">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="metric4">
      <description>
        <text>Metric value 4</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="metric4">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="tag">
      <description>
        <text>Tag string</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="tag">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="tag2">
      <description>
        <text>Tag string 2</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="tag2">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="preference">
      <description>
        <text>Preference value</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="preference">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="preference2">
      <description>
        <text>Preference value 2</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="preference2">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="color">
      <description>
        <text>Color (preference) value</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="color">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="color2">
      <description>
        <text>Color (preference) value 2</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="color2">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="local-preference">
      <description>
        <text>Local preference associated with a route</text>
      </description>
      <uses name="apply-advanced"/>
      <choice name="metric_action">
        <case name="case_1">
          <leaf name="local-preference">
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="add">
            <description>
              <text>Add constant to attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="subtract">
            <description>
              <text>Subtract constant from attribute</text>
            </description>
            <type name="union">
              <type name="uint32"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <leaf name="priority">
      <description>
        <text>Set priority for route installation</text>
      </description>
      <type name="enumeration">
        <enum name="high">
          <description>
            <text>Set priority to high</text>
          </description>
        </enum>
        <enum name="medium">
          <description>
            <text>Set priority to medium</text>
          </description>
        </enum>
        <enum name="low">
          <description>
            <text>Set priority to low</text>
          </description>
        </enum>
      </type>
    </leaf>
    <container name="prefix-segment">
      <description>
        <text>Set prefix segment attributes</text>
      </description>
      <uses name="apply-advanced"/>
      <list name="algorithm">
        <key value="name"/>
        <description>
          <text>Set prefix segment attributes for strict/flex algorithm </text>
        </description>
        <max-elements value="15"/>
        <leaf name="name">
          <description>
            <text>Set prefix segment for strict/flex algorithm</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="1 .. 255"/>
            </type>
          </type>
        </leaf>
        <leaf name="index">
          <description>
            <text>Set prefix segment index id</text>
          </description>
          <type name="union">
            <type name="string">
              <pattern value="&lt;.*&gt;|$.*"/>
            </type>
            <type name="uint32">
              <range value="0 .. 199999"/>
            </type>
          </type>
        </leaf>
        <leaf name="node-segment">
          <description>
            <text>Set node segment flag for this prefix segment</text>
          </description>
          <type name="empty"/>
        </leaf>
      </list>
      <leaf name="index">
        <description>
          <text>Set prefix segment index id</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="0 .. 199999"/>
          </type>
        </type>
      </leaf>
      <leaf name="node-segment">
        <description>
          <text>Set node segment flag for default prefix segment</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <leaf name="label-allocation">
      <description>
        <text>Set label allocation mode</text>
      </description>
      <type name="enumeration">
        <enum name="per-table">
          <description>
            <text>Set per-table label allocation mode</text>
          </description>
        </enum>
        <enum name="per-nexthop">
          <description>
            <text>Set per-nexthop label allocation mode</text>
          </description>
        </enum>
        <enum name="per-table-localize">
          <description>
            <text>Set per-table-localize label allocation mode</text>
          </description>
        </enum>
      </type>
    </leaf>
    <container name="add-path">
      <description>
        <text>Set BGP add-path attributes</text>
      </description>
      <leaf name="send-count">
        <description>
          <text>Number of add-paths sent</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="uint32">
            <range value="2 .. 64"/>
          </type>
        </type>
      </leaf>
    </container>
    <leaf name="validation-state">
      <description>
        <text>Set validation-state of a route</text>
      </description>
      <type name="enumeration">
        <enum name="valid">
          <description>
            <text>Set validaton-state to valid</text>
          </description>
        </enum>
        <enum name="invalid">
          <description>
            <text>Set validation-state to invalid</text>
          </description>
        </enum>
        <enum name="unknown">
          <description>
            <text>Set validation-state to unknown</text>
          </description>
        </enum>
      </type>
    </leaf>
    <leaf name="origin">
      <description>
        <text>BGP path origin</text>
      </description>
      <type name="enumeration">
        <enum name="igp">
          <description>
            <text>Path originated in the local IGP</text>
          </description>
        </enum>
        <enum name="egp">
          <description>
            <text>Path originated in another AS</text>
          </description>
        </enum>
        <enum name="incomplete">
          <description>
            <text>Path was learned by some other means</text>
          </description>
        </enum>
      </type>
    </leaf>
    <container name="aigp-originate">
      <presence value="enable aigp-originate"/>
      <description>
        <text>Originate a BGP AIGP attribute</text>
      </description>
      <leaf name="distance">
        <description>
          <text>AIGP distance</text>
        </description>
        <type name="union">
          <type name="uint32"/>
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
        </type>
      </leaf>
    </container>
    <container name="aigp-adjust">
      <description>
        <text>Adjust a BGP AIGP attribute</text>
      </description>
      <choice name="math-op">
        <case name="case_1">
          <leaf name="add">
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="subtract">
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="multiply">
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_4">
          <leaf name="divide">
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
      <choice name="adjust-value">
        <case name="case_1">
          <leaf name="user-value">
            <description>
              <text>Adjustment value</text>
            </description>
            <type name="union">
              <type name="uint64"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="distance-to-protocol-nexthop">
            <description>
              <text>Metric2</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
    </container>
    <list name="community">
      <key value="choice-ident choice-value community-name"/>
      <ordered-by value="user"/>
      <description>
        <text>BGP community properties associated with a route</text>
      </description>
      <leaf name="choice-ident">
        <type name="enumeration">
          <enum name="equal-literal"/>
          <enum name="set"/>
          <enum name="plus-literal"/>
          <enum name="add"/>
          <enum name="minus-literal"/>
          <enum name="delete"/>
          <enum name="community-name"/>
        </type>
      </leaf>
      <leaf name="choice-value">
        <type name="string"/>
      </leaf>
      <leaf name="community-name">
        <description>
          <text>Name to identify a BGP community</text>
        </description>
        <type name="string"/>
      </leaf>
    </list>
    <list name="tunnel-attribute">
      <key value="choice-ident choice-value tunnel-attribute-name"/>
      <ordered-by value="user"/>
      <description>
        <text>BGP tunnel attribute associated with a route</text>
      </description>
      <leaf name="choice-ident">
        <type name="enumeration">
          <enum name="set"/>
          <enum name="remove"/>
          <enum name="tunnel-attribute-name"/>
        </type>
      </leaf>
      <leaf name="choice-value">
        <type name="string"/>
      </leaf>
      <leaf name="tunnel-attribute-name">
        <description>
          <text>Name of a tunnel attribute , or 'all'</text>
        </description>
        <type name="string"/>
      </leaf>
    </list>
    <leaf name="damping">
      <description>
        <text>Define BGP route flap damping parameters</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="aggregate-bandwidth">
      <description>
        <text>Advertise aggregate outbound link bandwidth</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="limit-bandwidth">
      <description>
        <text>Limit advertised aggregate outbound link bandwidth</text>
      </description>
      <type name="union">
        <type name="string">
          <pattern value="&lt;.*&gt;|$.*"/>
        </type>
        <type name="uint32">
          <range value="0 .. 4294967295"/>
        </type>
      </type>
    </leaf>
    <leaf name="no-entropy-label-capability">
      <description>
        <text>Don't advertise entropy label capability</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="as-path-prepend">
      <description>
        <text>Prepend AS numbers to an AS path (BGP only)</text>
      </description>
      <type name="string"/>
    </leaf>
    <container name="as-path-expand">
      <description>
        <text>Prepend AS numbers prior to adding local-as (BGP only)</text>
      </description>
      <choice name="aspath_exp_value">
        <case name="case_1">
          <container name="last-as">
            <presence value="enable last-as"/>
            <description>
              <text>Prepend last AS</text>
            </description>
            <leaf name="count">
              <description>
                <text>Repeat count</text>
              </description>
              <type name="union">
                <type name="string">
                  <pattern value="&lt;.*&gt;|$.*"/>
                </type>
                <type name="uint32">
                  <range value="1 .. 32"/>
                </type>
              </type>
            </leaf>
          </container>
        </case>
        <case name="case_2">
          <leaf name="aspath">
            <description>
              <text>AS path string</text>
            </description>
            <type name="string"/>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="next-hop">
      <description>
        <text>Set the address of the next-hop router</text>
      </description>
      <choice name="nexthop_value">
        <case name="case_1">
          <leaf name="self">
            <description>
              <text>Use a local address as the next-hop address</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="peer-address">
            <description>
              <text>Use the remote peer address as the next-hop address</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_3">
          <leaf name="address">
            <description>
              <text>Next-hop address</text>
            </description>
            <type name="jt:ipaddr"/>
          </leaf>
        </case>
        <case name="case_4">
          <leaf name="reject">
            <description>
              <text>Use a reject next hop</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_5">
          <leaf name="discard">
            <description>
              <text>Use a discard next hop</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_6">
          <leaf name="next-table">
            <description>
              <text>Perform a forwarding lookup in the specified table</text>
            </description>
            <type name="string"/>
          </leaf>
        </case>
      </choice>
    </container>
    <container name="install-nexthop">
      <description>
        <text>Choose the next hop to be used for forwarding</text>
      </description>
      <choice name="strict_type">
        <case name="case_1">
          <leaf name="strict">
            <description>
              <text>Do not use any other available next hops</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="strict-named-lsp">
            <description>
              <text>Do not use any other non-lsp next hops</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
      <choice name="nexthop-value">
        <case name="case_1">
          <leaf-list name="lsp">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop LSP name</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </case>
        <case name="case_2">
          <leaf-list name="lsp-regex">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop LSP name regular expression</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </case>
        <case name="case_3">
          <leaf-list name="static-lsp">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop static LSP name</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </case>
        <case name="case_4">
          <leaf-list name="static-lsp-regex">
            <ordered-by value="user"/>
            <description>
              <text>Next-hop static LSP name regular expression</text>
            </description>
            <type name="string"/>
          </leaf-list>
        </case>
        <case name="case_5">
          <leaf name="non-lsp-nexthop">
            <description>
              <text>Next-hop with non-lsp</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_6">
          <leaf name="non-labelled-nexthop">
            <description>
              <text>Next-hop without tag</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
      <container name="except">
        <description>
          <text>Do not choose to install matching next hops</text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="nexthop-value">
          <case name="case_1">
            <leaf-list name="lsp">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop LSP name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="lsp-regex">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop LSP name regular expression</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_3">
            <leaf-list name="static-lsp">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop static LSP name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_4">
            <leaf-list name="static-lsp-regex">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop static LSP name regular expression</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_5">
            <leaf name="non-lsp-nexthop">
              <description>
                <text>Next-hop with non-lsp</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_6">
            <leaf name="non-labelled-nexthop">
              <description>
                <text>Next-hop without tag</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
        <container name="fallback">
          <description>
            <text>Backup option</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="nexthop-value">
            <case name="case_1">
              <leaf-list name="lsp">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop LSP name</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_2">
              <leaf-list name="lsp-regex">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop LSP name regular expression</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_3">
              <leaf-list name="static-lsp">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop static LSP name</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_4">
              <leaf-list name="static-lsp-regex">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop static LSP name regular expression</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_5">
              <leaf name="non-lsp-nexthop">
                <description>
                  <text>Next-hop with non-lsp</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_6">
              <leaf name="non-labelled-nexthop">
                <description>
                  <text>Next-hop without tag</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
          <container name="except">
            <description>
              <text>Do not choose to install matching next hops</text>
            </description>
            <uses name="apply-advanced"/>
            <choice name="nexthop-value">
              <case name="case_1">
                <leaf-list name="lsp">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop LSP name</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_2">
                <leaf-list name="lsp-regex">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop LSP name regular expression</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_3">
                <leaf-list name="static-lsp">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop static LSP name</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_4">
                <leaf-list name="static-lsp-regex">
                  <ordered-by value="user"/>
                  <description>
                    <text>Next-hop static LSP name regular expression</text>
                  </description>
                  <type name="string"/>
                </leaf-list>
              </case>
              <case name="case_5">
                <leaf name="non-lsp-nexthop">
                  <description>
                    <text>Next-hop with non-lsp</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
              <case name="case_6">
                <leaf name="non-labelled-nexthop">
                  <description>
                    <text>Next-hop without tag</text>
                  </description>
                  <type name="empty"/>
                </leaf>
              </case>
            </choice>
          </container>
        </container>
      </container>
      <container name="fallback">
        <description>
          <text>Backup option </text>
        </description>
        <uses name="apply-advanced"/>
        <choice name="nexthop-value">
          <case name="case_1">
            <leaf-list name="lsp">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop LSP name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_2">
            <leaf-list name="lsp-regex">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop LSP name regular expression</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_3">
            <leaf-list name="static-lsp">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop static LSP name</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_4">
            <leaf-list name="static-lsp-regex">
              <ordered-by value="user"/>
              <description>
                <text>Next-hop static LSP name regular expression</text>
              </description>
              <type name="string"/>
            </leaf-list>
          </case>
          <case name="case_5">
            <leaf name="non-lsp-nexthop">
              <description>
                <text>Next-hop with non-lsp</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
          <case name="case_6">
            <leaf name="non-labelled-nexthop">
              <description>
                <text>Next-hop without tag</text>
              </description>
              <type name="empty"/>
            </leaf>
          </case>
        </choice>
        <container name="except">
          <description>
            <text>Do not choose to install matching next hops</text>
          </description>
          <uses name="apply-advanced"/>
          <choice name="nexthop-value">
            <case name="case_1">
              <leaf-list name="lsp">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop LSP name</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_2">
              <leaf-list name="lsp-regex">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop LSP name regular expression</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_3">
              <leaf-list name="static-lsp">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop static LSP name</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_4">
              <leaf-list name="static-lsp-regex">
                <ordered-by value="user"/>
                <description>
                  <text>Next-hop static LSP name regular expression</text>
                </description>
                <type name="string"/>
              </leaf-list>
            </case>
            <case name="case_5">
              <leaf name="non-lsp-nexthop">
                <description>
                  <text>Next-hop with non-lsp</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
            <case name="case_6">
              <leaf name="non-labelled-nexthop">
                <description>
                  <text>Next-hop without tag</text>
                </description>
                <type name="empty"/>
              </leaf>
            </case>
          </choice>
        </container>
      </container>
    </container>
    <leaf name="trace">
      <description>
        <text>Log matches to a trace file</text>
      </description>
      <type name="empty"/>
    </leaf>
    <container name="external">
      <presence value="enable external"/>
      <description>
        <text>External route</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="type">
        <description>
          <text>OSPF external metric type</text>
        </description>
        <type name="union">
          <type name="string">
            <pattern value="&lt;.*&gt;|$.*"/>
          </type>
          <type name="int32">
            <range value="1 .. 2"/>
          </type>
        </type>
      </leaf>
      <leaf name="nssa-only">
        <description>
          <text>Clear P-bit on lsa type 7</text>
        </description>
        <type name="empty"/>
      </leaf>
    </container>
    <container name="load-balance">
      <description>
        <text>Type of load balancing in forwarding table</text>
      </description>
      <choice name="load_balance_type">
        <case name="case_1">
          <leaf name="per-packet">
            <description>
              <text>Load balance on a per-packet basis</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2"/>
        <case name="case_3"/>
        <case name="case_4">
          <leaf name="consistent-hash">
            <description>
              <text>Give a prefix consistent load-balancing</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_5"/>
        <case name="case_6"/>
      </choice>
    </container>
    <leaf name="analyze">
      <description>
        <text>Send to registered controllers for analysis</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="class">
      <description>
        <text>Set class-of-service parameters</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="destination-class">
      <description>
        <text>Set destination class in forwarding table</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="source-class">
      <description>
        <text>Set source class in forwarding table</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="forwarding-class">
      <description>
        <text>Set source or destination class in forwarding table</text>
      </description>
      <type name="string"/>
    </leaf>
    <container name="map-to-interface">
      <description>
        <text>Set output logical interface</text>
      </description>
      <choice name="map_to_interface_value">
        <case name="case_1">
          <leaf name="self">
            <description>
              <text>Map the interface to itself</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="interface">
            <description>
              <text>Output logical interface</text>
            </description>
            <type name="union">
              <type name="jt:interface-name"/>
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
            </type>
          </leaf>
        </case>
      </choice>
    </container>
    <leaf-list name="ssm-source">
      <ordered-by value="user"/>
      <description>
        <text>List of Sources for SSM mapping</text>
      </description>
      <type name="jt:ipaddr"/>
    </leaf-list>
    <container name="p2mp-lsp-root">
      <description>
        <text>P2mp lsp root address</text>
      </description>
      <uses name="apply-advanced"/>
      <leaf name="address">
        <description>
          <text>Ipv4 root address</text>
        </description>
        <type name="jt:ipv4addr"/>
      </leaf>
    </container>
    <leaf name="cos-next-hop-map">
      <description>
        <text>Set CoS-based next-hop map in forwarding table</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="dynamic-tunnel-attributes">
      <description>
        <text>Choose the dynamic tunnel attributes used for forwarding</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="tunnel-end-point-address">
      <description>
        <text>Set tunnel end-point address of tunnel</text>
      </description>
      <type name="jt:ipaddr"/>
    </leaf>
    <leaf name="selected-mldp-egress">
      <description>
        <text>This node should act as egress node for MLDP inband signalling</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="mhop-bfd-port">
      <description>
        <text>Use port number 4784 for MPLS-BFD as per RFC5884</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="no-backup">
      <description>
        <text>This prefix should not have backup</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="default-action">
      <description>
        <text>Set default policy action</text>
      </description>
      <type name="enumeration">
        <enum name="accept">
          <description>
            <text>Accept a route</text>
          </description>
        </enum>
        <enum name="reject">
          <description>
            <text>Reject a route</text>
          </description>
        </enum>
      </type>
    </leaf>
    <leaf name="next">
      <description>
        <text>Skip to next policy or term</text>
      </description>
      <type name="enumeration">
        <enum name="policy">
          <description>
            <text>Skip to next policy filter</text>
          </description>
        </enum>
        <enum name="term">
          <description>
            <text>Skip to next term in a policy filter</text>
          </description>
        </enum>
      </type>
    </leaf>
    <choice name="accept_reject">
      <case name="case_1">
        <leaf name="accept">
          <description>
            <text>Accept a route</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
      <case name="case_2">
        <leaf name="reject">
          <description>
            <text>Reject a route</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
    </choice>
    <container name="bgp-output-queue-priority">
      <description>
        <text>Set the BGP Update output queue priority.</text>
      </description>
      <choice name="class">
        <case name="case_1">
          <leaf name="priority">
            <description>
              <text>Output queue priority; higher is better</text>
            </description>
            <type name="union">
              <type name="string">
                <pattern value="&lt;.*&gt;|$.*"/>
              </type>
              <type name="uint32">
                <range value="1 .. 16"/>
              </type>
            </type>
          </leaf>
        </case>
        <case name="case_2">
          <leaf name="expedited">
            <description>
              <text>Expedited queue; highest priority</text>
            </description>
            <type name="empty"/>
          </leaf>
        </case>
      </choice>
    </container>
    <leaf name="multipath-resolve">
      <description>
        <text>Use all paths for resolution over this prefix</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="source-routing-path-template">
      <description>
        <text>Spring-te template to apply</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="label-allocation-fallback-reject">
      <description>
        <text>Suppress prefix export when label allocation fails</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="resolution-map">
      <description>
        <text>Set resolution map modes</text>
      </description>
      <type name="string"/>
    </leaf>
    <leaf name="ignore-service-label">
      <description>
        <text>Ignore service labels</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="request-long-lived-ack">
      <description>
        <text>Advertise route after forwarding is programmed</text>
      </description>
      <type name="empty"/>
    </leaf>
    <leaf name="send-withdrawal-on-route-change">
      <description>
        <text>Withdraw route if change is not acked from forwarding</text>
      </description>
      <type name="empty"/>
    </leaf>
  </grouping>
  <grouping name="srd-ev-action-object">
    <description>
      <text>Action to be taken on the occurence if defined events</text>
    </description>
    <uses name="apply-advanced"/>
    <leaf name="mship-actions">
      <description>
        <text>Mastership related actions</text>
      </description>
      <type name="enumeration">
        <enum name="acquire-mastership">
          <description>
            <text>Attempt to acquire mastership</text>
          </description>
        </enum>
        <enum name="release-mastership">
          <description>
            <text>Attempt to release mastership</text>
          </description>
        </enum>
        <enum name="release-mastership-force">
          <description>
            <text>Attempt to release mastership</text>
          </description>
        </enum>
        <enum name="release-mastership-if-standby-clear">
          <description>
            <text>Attempt to release mastership if standby has no warning</text>
          </description>
        </enum>
        <enum name="broadcast-warning">
          <description>
            <text>Attempt to release mastership</text>
          </description>
        </enum>
      </type>
    </leaf>
    <list name="add-static-route">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Add a static route in the specified routing table</text>
      </description>
      <max-elements value="1"/>
      <uses name="srd-route-add-object"/>
    </list>
    <list name="delete-static-route">
      <key value="name"/>
      <ordered-by value="user"/>
      <description>
        <text>Delete a static route in the specified routing table</text>
      </description>
      <max-elements value="1"/>
      <uses name="srd-route-delete-object"/>
    </list>
  </grouping>
  <grouping name="srd-route-add-object">
    <description>
      <text>Route details</text>
    </description>
    <leaf name="name">
      <description>
        <text> Destination route address with prefix length</text>
      </description>
      <type name="jt:ipv4prefix-mandatory"/>
    </leaf>
    <uses name="apply-advanced"/>
    <choice name="next-hop-details">
      <case name="case_1">
        <leaf name="next-hop">
          <description>
            <text>Next-hop (interface) to destination</text>
          </description>
          <type name="string"/>
        </leaf>
      </case>
      <case name="case_2">
        <leaf name="receive">
          <description>
            <text>Install a receive route for the destination</text>
          </description>
          <type name="empty"/>
        </leaf>
      </case>
    </choice>
    <leaf name="routing-instance">
      <description>
        <text>Routing instance where the route should be added</text>
      </description>
      <type name="string"/>
    </leaf>
  </grouping>
  <grouping name="srd-route-delete-object">
    <description>
      <text>Route details</text>
    </description>
    <leaf name="name">
      <description>
        <text>Destination route address with prefix length</text>
      </description>
      <type name="jt:ipv4prefix-mandatory"/>
    </leaf>
    <uses name="apply-advanced"/>
    <leaf name="routing-instance">
      <description>
        <text>Routing instance where the route should be added</text>
      </description>
      <type name="string"/>
    </leaf>
  </grouping>
</module>
